<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="cb72050f-b019-4ddc-bdec-0effe53e81a3" name="ROOT@RGM89S 2014-04-16 14:57:36" runUser="RGM89S\ROOT" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="本地" id="b3426f58-0ed2-4260-9525-749e4255e285">
    <Description>这些设置为本地测试运行的默认测试设置。</Description>
    <Execution hostProcessPlatform="MSIL">
      <Timeouts runTimeout="1800000" testTimeout="120000" />
      <TestTypeSpecific>
        <UnitTestRunConfig testTypeId="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b">
          <AssemblyResolution applicationBaseDirectory="E:\Programme\Homework\OpenEcnu\OpenEcnu.UserInterface.Tests">
            <TestDirectory useLoadContext="true" />
          </AssemblyResolution>
        </UnitTestRunConfig>
        <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
          <Browser name="Internet Explorer 9.0" MaxConnections="6">
            <Headers>
              <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
              <Header name="Accept" value="*/*" />
              <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
              <Header name="Accept-Encoding" value="GZIP" />
            </Headers>
          </Browser>
        </WebTestRunConfiguration>
      </TestTypeSpecific>
      <AgentRule name="LocalMachineDefaultRole">
        <DataCollectors>
          <DataCollector uri="datacollector://microsoft/AspNetProfiler/1.0" assemblyQualifiedName="Microsoft.VisualStudio.PerformanceTools.DataCollection.AspNetProfileDataCollector, Microsoft.VisualStudio.PerformanceTools.DataCollection, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" friendlyName="ASP.NET 探查器">
          </DataCollector>
          <DataCollector uri="datacollector://microsoft/EventLog/1.0" assemblyQualifiedName="Microsoft.VisualStudio.TestTools.DataCollection.EventLog.EventLogDataCollector, Microsoft.VisualStudio.TestTools.DataCollection.EventLog, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" friendlyName="事件日志">
          </DataCollector>
          <DataCollector uri="datacollector://microsoft/NetworkEmulation/1.0" assemblyQualifiedName="Microsoft.VisualStudio.TestTools.DataCollection.NetworkEmulation.NetworkEmulationDataCollector, Microsoft.VisualStudio.TestTools.DataCollection.NetworkEmulation, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" friendlyName="网络仿真">
          </DataCollector>
          <DataCollector uri="datacollector://microsoft/SystemInfo/1.0" assemblyQualifiedName="Microsoft.VisualStudio.TestTools.DataCollection.SystemInfo.SystemInfoDataCollector, Microsoft.VisualStudio.TestTools.DataCollection.SystemInfo, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" friendlyName="系统信息">
          </DataCollector>
          <DataCollector uri="datacollector://microsoft/TraceDebugger/1.0" assemblyQualifiedName="Microsoft.VisualStudio.TraceCollector.TraceDebuggerDataCollector, Microsoft.VisualStudio.TraceCollector, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" friendlyName="IntelliTrace">
          </DataCollector>
          <DataCollector uri="datacollector://microsoft/TestImpact/1.0" assemblyQualifiedName="Microsoft.VisualStudio.TraceCollector.TestImpactDataCollector, Microsoft.VisualStudio.TraceCollector, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" friendlyName="测试影响">
          </DataCollector>
          <DataCollector uri="datacollector://microsoft/VideoRecorder/1.0" assemblyQualifiedName="Microsoft.VisualStudio.TestTools.DataCollection.VideoRecorder.VideoRecorderDataCollector, Microsoft.VisualStudio.TestTools.DataCollection.VideoRecorder, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" friendlyName="屏幕和语音录制器">
          </DataCollector>
          <DataCollector uri="datacollector://microsoft/CodeCoverage/1.0" assemblyQualifiedName="Microsoft.VisualStudio.TestTools.CodeCoverage.CoveragePlugIn, Microsoft.VisualStudio.QualityTools.Plugins.CodeCoverage, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" friendlyName="代码覆盖率(Visual Studio 2010)">
          </DataCollector>
          <DataCollector uri="datacollector://microsoft/HttpProxy/1.0" assemblyQualifiedName="Microsoft.VisualStudio.TraceCollector.HttpProxyCollector, Microsoft.VisualStudio.TraceCollector, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" friendlyName="用于 IntelliTrace 和测试影响的 ASP.NET 客户端代理">
          </DataCollector>
        </DataCollectors>
      </AgentRule>
    </Execution>
    <Deployment runDeploymentRoot="ROOT_RGM89S 2014-04-16 14_57_36" />
    <Properties />
  </TestSettings>
  <Times creation="2014-04-16T14:57:36.1841800+08:00" queuing="2014-04-16T14:57:36.7422119+08:00" start="2014-04-16T14:58:00.6315783+08:00" finish="2014-04-16T15:00:17.1943893+08:00" />
  <ResultSummary outcome="Error">
    <Counters total="1" executed="1" error="0" failed="0" timeout="1" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
    <RunInfos>
      <RunInfo computerName="RGM89S" outcome="Warning" timestamp="2014-04-16T14:57:36.6962093+08:00">
        <Text>警告:  对测试运行忽略禁用部署，因为在活动的测试设置中启用了代码覆盖率。</Text>
      </RunInfo>
    </RunInfos>
    <CollectorDataEntries>
      <Collector agentName="RGM89S" uri="datacollector://microsoft/EventLog/1.0" collectorDisplayName="事件日志">
        <UriAttachments>
          <UriAttachment>
            <A href="RGM89S\Event Log.xml">
            </A>
          </UriAttachment>
        </UriAttachments>
      </Collector>
      <Collector agentName="RGM89S" uri="datacollector://microsoft/NetworkEmulation/1.0" collectorDisplayName="网络仿真">
        <UriAttachments>
          <UriAttachment>
            <A href="RGM89S\NetworkEmulation.xml">RGM89S 上的网络仿真</A>
          </UriAttachment>
        </UriAttachments>
      </Collector>
      <Collector agentName="RGM89S" uri="datacollector://microsoft/SystemInfo/1.0" collectorDisplayName="系统信息">
        <UriAttachments>
          <UriAttachment>
            <A href="RGM89S\SystemInformation.xml">RGM89S 中的系统信息</A>
          </UriAttachment>
        </UriAttachments>
      </Collector>
    </CollectorDataEntries>
    <DataCollectorMessages>
      <DataCollectorMessage timestamp="2014-04-16T14:57:40.2634133+08:00" dataCollectorUri="datacollector://microsoft/HttpProxy/1.0" dataCollectorFriendlyName="用于 IntelliTrace 和测试影响的 ASP.NET 客户端代理" agentName="RGM89S" level="Error">
        <Text>适配器“用于 IntelliTrace 和测试影响的 ASP.NET 客户端代理”不会用于此测试运行。  Could not load file or assembly 'Microsoft.VisualStudio.HttpProxy, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. 试图加载格式不正确的程序。
    </Text>
      </DataCollectorMessage>
      <DataCollectorMessage timestamp="2014-04-16T14:57:51.3650483+08:00" dataCollectorUri="datacollector://microsoft/NetworkEmulation/1.0" dataCollectorFriendlyName="网络仿真" agentName="RGM89S" level="Error">
        <Text>未能启动网络仿真，因为未安装驱动程序。</Text>
      </DataCollectorMessage>
      <DataCollectorMessage timestamp="2014-04-16T14:58:01.4876273+08:00" dataCollectorUri="datacollector://microsoft/VideoRecorder/1.0" dataCollectorFriendlyName="屏幕和语音录制器" agentName="RGM89S" level="Warning">
        <Text>计算机“RGM89S”有多个显示器。默认情况下，将仅录制主显示器中的屏幕。在此显示器中运行您的应用程序。若要了解主显示器，可使用“控制面板”中的“屏幕分辨率”小程序。</Text>
      </DataCollectorMessage>
    </DataCollectorMessages>
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTest2" storage="e:\programme\homework\openecnu\openecnu.webtest\webtest2.webtest" id="fff6fd02-d2bc-45bf-9845-c4a7331b73ec" persistedWebTest="77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pg0KPFdlYlRlc3QgTmFtZT0iV2ViVGVzdDIiIElkPSJmZmY2ZmQwMi1kMmJjLTQ1YmYtOTg0NS1jNGE3MzMxYjczZWMiIE93bmVyPSIiIFByaW9yaXR5PSIyMTQ3NDgzNjQ3IiBFbmFibGVkPSJUcnVlIiBDc3NQcm9qZWN0U3RydWN0dXJlPSIiIENzc0l0ZXJhdGlvbj0iIiBUaW1lb3V0PSIwIiBXb3JrSXRlbUlkcz0iIiB4bWxucz0iaHR0cDovL21pY3Jvc29mdC5jb20vc2NoZW1hcy9WaXN1YWxTdHVkaW8vVGVhbVRlc3QvMjAxMCIgRGVzY3JpcHRpb249IiIgQ3JlZGVudGlhbFVzZXJOYW1lPSIiIENyZWRlbnRpYWxQYXNzd29yZD0iIiBQcmVBdXRoZW50aWNhdGU9IlRydWUiIFByb3h5PSJkZWZhdWx0IiBTdG9wT25FcnJvcj0iRmFsc2UiIFJlY29yZGVkUmVzdWx0RmlsZT0iV2ViVGVzdDIuOWVjOTQ0NDUtNjE1ZS00NDFhLTkwMTYtMjhjNGU2NTU3NTAwLnJlYy53ZWJ0ZXN0cmVzdWx0IiBSZXN1bHRzTG9jYWxlPSIiPg0KICA8SXRlbXM+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJHRVQiIEd1aWQ9IjFkMjQ4ZDI1LTQxNmUtNDZjYy05ZmI4LTUzNDgzNDU4Y2M4ZSIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy8iIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiIC8+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSI5NzU3ODMzYy1jNWM3LTRkZDAtYWUzNy1lMTFmYmJkMGY5M2IiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvbmVnb3RpYXRlIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzLyIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkYiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjbGllbnRQcm90b2NvbCIgVmFsdWU9IjEuMyIgUmVjb3JkZWRWYWx1ZT0iMS4zIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0MDEyMjciIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0MDEyMjciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iYWY3ZWFmMzQtODFlMi00MTkxLWEyM2MtMWJjZDg3Mjg2MWI0IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL2Nvbm5lY3QiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQ29udGVudC1UeXBlIiBWYWx1ZT0iYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQW5QVThvUFVGZFpaZDY4Z0FiWGFlbWIybWk4TXBUVFhIdG5QbW82YjJhRlFBQUFBQU9nQUFBQUFJQUFDQUFBQURmM3Fvd3pCJTJGWE51RjJPZ2lEYkt6V3RrUDNNMWslMkZVaTg5Vm5hY3dVNCUyRnpUQUFBQUR1aWI3SjBqYTg3VHEyVG1VanI0SW5UUnVrbzJ3a05RbTRFMWdodmVvSEVFc1BMWThGNnNQNG9lcHFCQlUlMkZhY3RBQUFBQW1GYWRhb1lOMTJnc0o5ZiUyRnFPdkpLbWt5dSUyQkt3JTJCYzRxb21DNnU4RzdXU0NUJTJGN2ZjRmVESDFXViUyQjNlWW51Y1RiM1Z1UUIlMkZMV050OSUyRjRNOE5VWE9vWkElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQW5QVThvUFVGZFpaZDY4Z0FiWGFlbWIybWk4TXBUVFhIdG5QbW82YjJhRlFBQUFBQU9nQUFBQUFJQUFDQUFBQURmM3Fvd3pCJTJGWE51RjJPZ2lEYkt6V3RrUDNNMWslMkZVaTg5Vm5hY3dVNCUyRnpUQUFBQUR1aWI3SjBqYTg3VHEyVG1VanI0SW5UUnVrbzJ3a05RbTRFMWdodmVvSEVFc1BMWThGNnNQNG9lcHFCQlUlMkZhY3RBQUFBQW1GYWRhb1lOMTJnc0o5ZiUyRnFPdkpLbWt5dSUyQkt3JTJCYzRxb21DNnU4RzdXU0NUJTJGN2ZjRmVESDFXViUyQjNlWW51Y1RiM1Z1UUIlMkZMV050OSUyRjRNOE5VWE9vWkElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkYiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSI5IiBSZWNvcmRlZFZhbHVlPSI5IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0MDE1ODciIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0MDE1ODciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iZDEyZjNiM2YtYTAwZS00YjUzLThkNDYtNDUzNjVlYzkxYzQxIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3NlbmQiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy8iIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBblBVOG9QVUZkWlpkNjhnQWJYYWVtYjJtaThNcFRUWEh0blBtbzZiMmFGUUFBQUFBT2dBQUFBQUlBQUNBQUFBRGYzcW93ekIlMkZYTnVGMk9naURiS3pXdGtQM00xayUyRlVpODlWbmFjd1U0JTJGelRBQUFBRHVpYjdKMGphODdUcTJUbVVqcjRJblRSdWtvMndrTlFtNEUxZ2h2ZW9IRUVzUExZOEY2c1A0b2VwcUJCVSUyRmFjdEFBQUFBbUZhZGFvWU4xMmdzSjlmJTJGcU92Sktta3l1JTJCS3clMkJjNHFvbUM2dThHN1dTQ1QlMkY3ZmNGZURIMVdWJTJCM2VZbnVjVGIzVnVRQiUyRkxXTnQ5JTJGNE04TlVYT29aQSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBblBVOG9QVUZkWlpkNjhnQWJYYWVtYjJtaThNcFRUWEh0blBtbzZiMmFGUUFBQUFBT2dBQUFBQUlBQUNBQUFBRGYzcW93ekIlMkZYTnVGMk9naURiS3pXdGtQM00xayUyRlVpODlWbmFjd1U0JTJGelRBQUFBRHVpYjdKMGphODdUcTJUbVVqcjRJblRSdWtvMndrTlFtNEUxZ2h2ZW9IRUVzUExZOEY2c1A0b2VwcUJCVSUyRmFjdEFBQUFBbUZhZGFvWU4xMmdzSjlmJTJGcU92Sktta3l1JTJCS3clMkJjNHFvbUM2dThHN1dTQ1QlMkY3ZmNGZURIMVdWJTJCM2VZbnVjVGIzVnVRQiUyRkxXTnQ5JTJGNE04TlVYT29aQSUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRiIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkYiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHk+DQogICAgICAgIDxGb3JtUG9zdFBhcmFtZXRlciBOYW1lPSJkYXRhIiBWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7TWljcm9zb2Z0LlZpc3VhbFN0dWRpby5XZWIuQnJvd3NlckxpbmsuQ29yZUV4dGVuc2lvbkZhY3RvcnkuY29ubmVjdGVkJnF1b3Q7LCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6MX0iIFJlY29yZGVkVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O01pY3Jvc29mdC5WaXN1YWxTdHVkaW8uV2ViLkJyb3dzZXJMaW5rLkNvcmVFeHRlbnNpb25GYWN0b3J5LmNvbm5lY3RlZCZxdW90OywmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjF9IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJUcnVlIiAvPg0KICAgICAgPC9Gb3JtUG9zdEh0dHBCb2R5Pg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjY1YTdkNzllLWNlODctNDlkNy04YzU0LThlOGE3NWYxZWUyYiIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9wb2xsIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzLyIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFuUFU4b1BVRmRaWmQ2OGdBYlhhZW1iMm1pOE1wVFRYSHRuUG1vNmIyYUZRQUFBQUFPZ0FBQUFBSUFBQ0FBQUFEZjNxb3d6QiUyRlhOdUYyT2dpRGJLeld0a1AzTTFrJTJGVWk4OVZuYWN3VTQlMkZ6VEFBQUFEdWliN0owamE4N1RxMlRtVWpyNEluVFJ1a28yd2tOUW00RTFnaHZlb0hFRXNQTFk4RjZzUDRvZXBxQkJVJTJGYWN0QUFBQUFtRmFkYW9ZTjEyZ3NKOWYlMkZxT3ZKS21reXUlMkJLdyUyQmM0cW9tQzZ1OEc3V1NDVCUyRjdmY0ZlREgxV1YlMkIzZVludWNUYjNWdVFCJTJGTFdOdDklMkY0TThOVVhPb1pBJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFuUFU4b1BVRmRaWmQ2OGdBYlhhZW1iMm1pOE1wVFRYSHRuUG1vNmIyYUZRQUFBQUFPZ0FBQUFBSUFBQ0FBQUFEZjNxb3d6QiUyRlhOdUYyT2dpRGJLeld0a1AzTTFrJTJGVWk4OVZuYWN3VTQlMkZ6VEFBQUFEdWliN0owamE4N1RxMlRtVWpyNEluVFJ1a28yd2tOUW00RTFnaHZlb0hFRXNQTFk4RjZzUDRvZXBxQkJVJTJGYWN0QUFBQUFtRmFkYW9ZTjEyZ3NKOWYlMkZxT3ZKS21reXUlMkJLdyUyQmM0cW9tQzZ1OEc3V1NDVCUyRjdmY0ZlREgxV1YlMkIzZVludWNUYjNWdVFCJTJGTFdOdDklMkY0TThOVVhPb1pBJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0ibWVzc2FnZUlkIiBWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCSSUyQzElN0NCSiUyQzAiIFJlY29yZGVkVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQkklMkMxJTdDQkolMkMwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idGlkIiBWYWx1ZT0iNiIgUmVjb3JkZWRWYWx1ZT0iNiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Il8iIFZhbHVlPSIxMzk3NjMxNDAxNjA4IiBSZWNvcmRlZFZhbHVlPSIxMzk3NjMxNDAxNjA4IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keSAvPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9ImY0MGNjMWE5LWRiNTktNGM4NC1hMDIwLTFmNjViNDgxOGU3ZiIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9zZW5kIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQW5QVThvUFVGZFpaZDY4Z0FiWGFlbWIybWk4TXBUVFhIdG5QbW82YjJhRlFBQUFBQU9nQUFBQUFJQUFDQUFBQURmM3Fvd3pCJTJGWE51RjJPZ2lEYkt6V3RrUDNNMWslMkZVaTg5Vm5hY3dVNCUyRnpUQUFBQUR1aWI3SjBqYTg3VHEyVG1VanI0SW5UUnVrbzJ3a05RbTRFMWdodmVvSEVFc1BMWThGNnNQNG9lcHFCQlUlMkZhY3RBQUFBQW1GYWRhb1lOMTJnc0o5ZiUyRnFPdkpLbWt5dSUyQkt3JTJCYzRxb21DNnU4RzdXU0NUJTJGN2ZjRmVESDFXViUyQjNlWW51Y1RiM1Z1UUIlMkZMV050OSUyRjRNOE5VWE9vWkElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQW5QVThvUFVGZFpaZDY4Z0FiWGFlbWIybWk4TXBUVFhIdG5QbW82YjJhRlFBQUFBQU9nQUFBQUFJQUFDQUFBQURmM3Fvd3pCJTJGWE51RjJPZ2lEYkt6V3RrUDNNMWslMkZVaTg5Vm5hY3dVNCUyRnpUQUFBQUR1aWI3SjBqYTg3VHEyVG1VanI0SW5UUnVrbzJ3a05RbTRFMWdodmVvSEVFc1BMWThGNnNQNG9lcHFCQlUlMkZhY3RBQUFBQW1GYWRhb1lOMTJnc0o5ZiUyRnFPdkpLbWt5dSUyQkt3JTJCYzRxb21DNnU4RzdXU0NUJTJGN2ZjRmVESDFXViUyQjNlWW51Y1RiM1Z1UUIlMkZMV050OSUyRjRNOE5VWE9vWkElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkYiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5Pg0KICAgICAgICA8Rm9ybVBvc3RQYXJhbWV0ZXIgTmFtZT0iZGF0YSIgVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O21pY3Jvc29mdC52aXN1YWxzdHVkaW8ud2ViLmJyb3dzZXJsaW5rLmh0bWxtYXBwaW5nZXh0ZW5zaW9uZmFjdG9yeS5yZXNvbHZlVXJsJnF1b3Q7LCZxdW90O2FyZ3MmcXVvdDs6WyZxdW90O34vX19icm93c2VyTGluay9yZXF1ZXN0RGF0YS9mZDYyOTlhZmY3MGM0ZmU3OGNkOGU2YzljNDhkODdlYyZxdW90O10sJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzoyfSIgUmVjb3JkZWRWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7bWljcm9zb2Z0LnZpc3VhbHN0dWRpby53ZWIuYnJvd3NlcmxpbmsuaHRtbG1hcHBpbmdleHRlbnNpb25mYWN0b3J5LnJlc29sdmVVcmwmcXVvdDssJnF1b3Q7YXJncyZxdW90OzpbJnF1b3Q7fi9fX2Jyb3dzZXJMaW5rL3JlcXVlc3REYXRhL2ZkNjI5OWFmZjcwYzRmZTc4Y2Q4ZTZjOWM0OGQ4N2VjJnF1b3Q7XSwmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjJ9IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJUcnVlIiAvPg0KICAgICAgPC9Gb3JtUG9zdEh0dHBCb2R5Pg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjBkMDE0N2JkLWJjNzEtNDdlNi1iN2RiLWUwYzNlZmU5NjRjNyIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9wb2xsIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzLyIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFuUFU4b1BVRmRaWmQ2OGdBYlhhZW1iMm1pOE1wVFRYSHRuUG1vNmIyYUZRQUFBQUFPZ0FBQUFBSUFBQ0FBQUFEZjNxb3d6QiUyRlhOdUYyT2dpRGJLeld0a1AzTTFrJTJGVWk4OVZuYWN3VTQlMkZ6VEFBQUFEdWliN0owamE4N1RxMlRtVWpyNEluVFJ1a28yd2tOUW00RTFnaHZlb0hFRXNQTFk4RjZzUDRvZXBxQkJVJTJGYWN0QUFBQUFtRmFkYW9ZTjEyZ3NKOWYlMkZxT3ZKS21reXUlMkJLdyUyQmM0cW9tQzZ1OEc3V1NDVCUyRjdmY0ZlREgxV1YlMkIzZVludWNUYjNWdVFCJTJGTFdOdDklMkY0TThOVVhPb1pBJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFuUFU4b1BVRmRaWmQ2OGdBYlhhZW1iMm1pOE1wVFRYSHRuUG1vNmIyYUZRQUFBQUFPZ0FBQUFBSUFBQ0FBQUFEZjNxb3d6QiUyRlhOdUYyT2dpRGJLeld0a1AzTTFrJTJGVWk4OVZuYWN3VTQlMkZ6VEFBQUFEdWliN0owamE4N1RxMlRtVWpyNEluVFJ1a28yd2tOUW00RTFnaHZlb0hFRXNQTFk4RjZzUDRvZXBxQkJVJTJGYWN0QUFBQUFtRmFkYW9ZTjEyZ3NKOWYlMkZxT3ZKS21reXUlMkJLdyUyQmM0cW9tQzZ1OEc3V1NDVCUyRjdmY0ZlREgxV1YlMkIzZVludWNUYjNWdVFCJTJGTFdOdDklMkY0TThOVVhPb1pBJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0ibWVzc2FnZUlkIiBWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCSSUyQzIlN0NCSiUyQzAiIFJlY29yZGVkVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQkklMkMyJTdDQkolMkMwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idGlkIiBWYWx1ZT0iMTAiIFJlY29yZGVkVmFsdWU9IjEwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0MDE3ODEiIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0MDE3ODEiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iR0VUIiBHdWlkPSJiZDFlMzgzNS1mNTJjLTQyN2QtOGMwZS00MzZjY2RmYzc4MmMiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvX19icm93c2VyTGluay9yZXF1ZXN0RGF0YS9mZDYyOTlhZmY3MGM0ZmU3OGNkOGU2YzljNDhkODdlYyIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQsICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlgtUmVxdWVzdGVkLVdpdGgiIFZhbHVlPSJYTUxIdHRwUmVxdWVzdCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzLyIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSJkMzU1M2NhZS0zYjZjLTRiY2YtOWRhNS02NzU2NDI5N2ZiZjUiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvcG9sbCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy8iIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBblBVOG9QVUZkWlpkNjhnQWJYYWVtYjJtaThNcFRUWEh0blBtbzZiMmFGUUFBQUFBT2dBQUFBQUlBQUNBQUFBRGYzcW93ekIlMkZYTnVGMk9naURiS3pXdGtQM00xayUyRlVpODlWbmFjd1U0JTJGelRBQUFBRHVpYjdKMGphODdUcTJUbVVqcjRJblRSdWtvMndrTlFtNEUxZ2h2ZW9IRUVzUExZOEY2c1A0b2VwcUJCVSUyRmFjdEFBQUFBbUZhZGFvWU4xMmdzSjlmJTJGcU92Sktta3l1JTJCS3clMkJjNHFvbUM2dThHN1dTQ1QlMkY3ZmNGZURIMVdWJTJCM2VZbnVjVGIzVnVRQiUyRkxXTnQ5JTJGNE04TlVYT29aQSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBblBVOG9QVUZkWlpkNjhnQWJYYWVtYjJtaThNcFRUWEh0blBtbzZiMmFGUUFBQUFBT2dBQUFBQUlBQUNBQUFBRGYzcW93ekIlMkZYTnVGMk9naURiS3pXdGtQM00xayUyRlVpODlWbmFjd1U0JTJGelRBQUFBRHVpYjdKMGphODdUcTJUbVVqcjRJblRSdWtvMndrTlFtNEUxZ2h2ZW9IRUVzUExZOEY2c1A0b2VwcUJCVSUyRmFjdEFBQUFBbUZhZGFvWU4xMmdzSjlmJTJGcU92Sktta3l1JTJCS3clMkJjNHFvbUM2dThHN1dTQ1QlMkY3ZmNGZURIMVdWJTJCM2VZbnVjVGIzVnVRQiUyRkxXTnQ5JTJGNE04TlVYT29aQSUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Im1lc3NhZ2VJZCIgVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQkklMkMzJTdDQkolMkMwIiBSZWNvcmRlZFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JJJTJDMyU3Q0JKJTJDMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRiIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkYiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRpZCIgVmFsdWU9IjgiIFJlY29yZGVkVmFsdWU9IjgiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQwMTg1OCIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQwMTg1OCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSI4N2Q2ODM4MS1hNTQ2LTQxZDktOWU4My05MGEwYTg3M2JhZGYiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvc2VuZCIgVGhpbmtUaW1lPSIzIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzLyIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFuUFU4b1BVRmRaWmQ2OGdBYlhhZW1iMm1pOE1wVFRYSHRuUG1vNmIyYUZRQUFBQUFPZ0FBQUFBSUFBQ0FBQUFEZjNxb3d6QiUyRlhOdUYyT2dpRGJLeld0a1AzTTFrJTJGVWk4OVZuYWN3VTQlMkZ6VEFBQUFEdWliN0owamE4N1RxMlRtVWpyNEluVFJ1a28yd2tOUW00RTFnaHZlb0hFRXNQTFk4RjZzUDRvZXBxQkJVJTJGYWN0QUFBQUFtRmFkYW9ZTjEyZ3NKOWYlMkZxT3ZKS21reXUlMkJLdyUyQmM0cW9tQzZ1OEc3V1NDVCUyRjdmY0ZlREgxV1YlMkIzZVludWNUYjNWdVFCJTJGTFdOdDklMkY0TThOVVhPb1pBJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFuUFU4b1BVRmRaWmQ2OGdBYlhhZW1iMm1pOE1wVFRYSHRuUG1vNmIyYUZRQUFBQUFPZ0FBQUFBSUFBQ0FBQUFEZjNxb3d6QiUyRlhOdUYyT2dpRGJLeld0a1AzTTFrJTJGVWk4OVZuYWN3VTQlMkZ6VEFBQUFEdWliN0owamE4N1RxMlRtVWpyNEluVFJ1a28yd2tOUW00RTFnaHZlb0hFRXNQTFk4RjZzUDRvZXBxQkJVJTJGYWN0QUFBQUFtRmFkYW9ZTjEyZ3NKOWYlMkZxT3ZKS21reXUlMkJLdyUyQmM0cW9tQzZ1OEc3V1NDVCUyRjdmY0ZlREgxV1YlMkIzZVludWNUYjNWdVFCJTJGTFdOdDklMkY0TThOVVhPb1pBJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keT4NCiAgICAgICAgPEZvcm1Qb3N0UGFyYW1ldGVyIE5hbWU9ImRhdGEiIFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDttaWNyb3NvZnQudmlzdWFsc3R1ZGlvLndlYi5icm93c2VybGluay5odG1sbWFwcGluZ2V4dGVuc2lvbmZhY3RvcnkucmVzb2x2ZVNvdXJjZUZpbGVQYXRocyZxdW90OywmcXVvdDthcmdzJnF1b3Q7OltbJnF1b3Q7fi9WaWV3cy9Ib21lL0luZGV4LmNzaHRtbCZxdW90O11dLCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6M30iIFJlY29yZGVkVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O21pY3Jvc29mdC52aXN1YWxzdHVkaW8ud2ViLmJyb3dzZXJsaW5rLmh0bWxtYXBwaW5nZXh0ZW5zaW9uZmFjdG9yeS5yZXNvbHZlU291cmNlRmlsZVBhdGhzJnF1b3Q7LCZxdW90O2FyZ3MmcXVvdDs6W1smcXVvdDt+L1ZpZXdzL0hvbWUvSW5kZXguY3NodG1sJnF1b3Q7XV0sJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzozfSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iVHJ1ZSIgLz4NCiAgICAgIDwvRm9ybVBvc3RIdHRwQm9keT4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJHRVQiIEd1aWQ9ImE2OGM3N2M5LWY2YWEtNDdhZC05YjIxLWZlZTRkMGQ3M2JmMiIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcGlMaXN0IiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjUxOGFhNzFiLTgzOGMtNDg0OS1iMWFlLTc0NmU4MTJhN2VkNyIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9hYm9ydCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzLyIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFuUFU4b1BVRmRaWmQ2OGdBYlhhZW1iMm1pOE1wVFRYSHRuUG1vNmIyYUZRQUFBQUFPZ0FBQUFBSUFBQ0FBQUFEZjNxb3d6QiUyRlhOdUYyT2dpRGJLeld0a1AzTTFrJTJGVWk4OVZuYWN3VTQlMkZ6VEFBQUFEdWliN0owamE4N1RxMlRtVWpyNEluVFJ1a28yd2tOUW00RTFnaHZlb0hFRXNQTFk4RjZzUDRvZXBxQkJVJTJGYWN0QUFBQUFtRmFkYW9ZTjEyZ3NKOWYlMkZxT3ZKS21reXUlMkJLdyUyQmM0cW9tQzZ1OEc3V1NDVCUyRjdmY0ZlREgxV1YlMkIzZVludWNUYjNWdVFCJTJGTFdOdDklMkY0TThOVVhPb1pBJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFuUFU4b1BVRmRaWmQ2OGdBYlhhZW1iMm1pOE1wVFRYSHRuUG1vNmIyYUZRQUFBQUFPZ0FBQUFBSUFBQ0FBQUFEZjNxb3d6QiUyRlhOdUYyT2dpRGJLeld0a1AzTTFrJTJGVWk4OVZuYWN3VTQlMkZ6VEFBQUFEdWliN0owamE4N1RxMlRtVWpyNEluVFJ1a28yd2tOUW00RTFnaHZlb0hFRXNQTFk4RjZzUDRvZXBxQkJVJTJGYWN0QUFBQUFtRmFkYW9ZTjEyZ3NKOWYlMkZxT3ZKS21reXUlMkJLdyUyQmM0cW9tQzZ1OEc3V1NDVCUyRjdmY0ZlREgxV1YlMkIzZVludWNUYjNWdVFCJTJGTFdOdDklMkY0TThOVVhPb1pBJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keSAvPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9ImE5NWM1M2NjLTI5NTMtNDNiOS1hZDY5LWMyMmNhZDY1MzYyMCIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9uZWdvdGlhdGUiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQ29udGVudC1UeXBlIiBWYWx1ZT0iYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBpTGlzdCIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcGlMaXN0IiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwaUxpc3QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNsaWVudFByb3RvY29sIiBWYWx1ZT0iMS4zIiBSZWNvcmRlZFZhbHVlPSIxLjMiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQwNDkxMiIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQwNDkxMiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSI0NjgzZjdiOC0zOTc5LTQ2NjItYTkyNS05M2ZmOGYwN2RkMTEiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvY29ubmVjdCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcGlMaXN0IiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQnc0ZzJIR3JXa0tuZldGckw0MFNXSnRZbyUyQjRnU2l1NVhrN0wxZENmblRTZ0FBQUFBT2dBQUFBQUlBQUNBQUFBQUlFc3Q4TW4xMjBxZFp1MXRHZ3EycmhYRGMwVlBMdHd5ZzNBd21vQ2tnWWpBQUFBQzNjZnVueGNJWTVyWDRCUXRYcWprWFpFVFo1Mjg4SmdYJTJGUzJuV1cxZ1c2VHNtZ3VrVWhWb1BJc1lEcEk0YWxOaEFBQUFBMHA2VzFEYmpCWXBkMVM0ZnFTVSUyQjlKTlhUMzltVWFBQlBSdjA0Yk5RR0VKN2RiNUo1N0daREYzTiUyRldISjc4YkZHNUZ0SDdlS3lVc1NMWWZMcXdOVEp3JTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUJ3NGcySEdyV2tLbmZXRnJMNDBTV0p0WW8lMkI0Z1NpdTVYazdMMWRDZm5UU2dBQUFBQU9nQUFBQUFJQUFDQUFBQUFJRXN0OE1uMTIwcWRadTF0R2dxMnJoWERjMFZQTHR3eWczQXdtb0NrZ1lqQUFBQUMzY2Z1bnhjSVk1clg0QlF0WHFqa1haRVRaNTI4OEpnWCUyRlMybldXMWdXNlRzbWd1a1VoVm9QSXNZRHBJNGFsTmhBQUFBQTBwNlcxRGJqQllwZDFTNGZxU1UlMkI5Sk5YVDM5bVVhQUJQUnYwNGJOUUdFSjdkYjVKNTdHWkRGM04lMkZXSEo3OGJGRzVGdEg3ZUt5VXNTTFlmTHF3TlRKdyUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwaUxpc3QiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBpTGlzdCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idGlkIiBWYWx1ZT0iNSIgUmVjb3JkZWRWYWx1ZT0iNSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Il8iIFZhbHVlPSIxMzk3NjMxNDA1MjE2IiBSZWNvcmRlZFZhbHVlPSIxMzk3NjMxNDA1MjE2IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keSAvPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjA3MzA1MjdlLWNmMjItNDkxOS04NTA5LTQxNDQxNzk4ZTM2OCIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9zZW5kIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBpTGlzdCIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUJ3NGcySEdyV2tLbmZXRnJMNDBTV0p0WW8lMkI0Z1NpdTVYazdMMWRDZm5UU2dBQUFBQU9nQUFBQUFJQUFDQUFBQUFJRXN0OE1uMTIwcWRadTF0R2dxMnJoWERjMFZQTHR3eWczQXdtb0NrZ1lqQUFBQUMzY2Z1bnhjSVk1clg0QlF0WHFqa1haRVRaNTI4OEpnWCUyRlMybldXMWdXNlRzbWd1a1VoVm9QSXNZRHBJNGFsTmhBQUFBQTBwNlcxRGJqQllwZDFTNGZxU1UlMkI5Sk5YVDM5bVVhQUJQUnYwNGJOUUdFSjdkYjVKNTdHWkRGM04lMkZXSEo3OGJGRzVGdEg3ZUt5VXNTTFlmTHF3TlRKdyUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFCdzRnMkhHcldrS25mV0ZyTDQwU1dKdFlvJTJCNGdTaXU1WGs3TDFkQ2ZuVFNnQUFBQUFPZ0FBQUFBSUFBQ0FBQUFBSUVzdDhNbjEyMHFkWnUxdEdncTJyaFhEYzBWUEx0d3lnM0F3bW9Da2dZakFBQUFDM2NmdW54Y0lZNXJYNEJRdFhxamtYWkVUWjUyODhKZ1glMkZTMm5XVzFnVzZUc21ndWtVaFZvUElzWURwSTRhbE5oQUFBQUEwcDZXMURiakJZcGQxUzRmcVNVJTJCOUpOWFQzOW1VYUFCUFJ2MDRiTlFHRUo3ZGI1SjU3R1pERjNOJTJGV0hKNzhiRkc1RnRIN2VLeVVzU0xZZkxxd05USnclM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcGlMaXN0IiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwaUxpc3QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHk+DQogICAgICAgIDxGb3JtUG9zdFBhcmFtZXRlciBOYW1lPSJkYXRhIiBWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7TWljcm9zb2Z0LlZpc3VhbFN0dWRpby5XZWIuQnJvd3NlckxpbmsuQ29yZUV4dGVuc2lvbkZhY3RvcnkuY29ubmVjdGVkJnF1b3Q7LCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6MX0iIFJlY29yZGVkVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O01pY3Jvc29mdC5WaXN1YWxTdHVkaW8uV2ViLkJyb3dzZXJMaW5rLkNvcmVFeHRlbnNpb25GYWN0b3J5LmNvbm5lY3RlZCZxdW90OywmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjF9IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJUcnVlIiAvPg0KICAgICAgPC9Gb3JtUG9zdEh0dHBCb2R5Pg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjhkNWM3YzdiLWUyOTYtNGQ5OS1hYzQ5LTQyMDBhMjdiY2U4NiIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9wb2xsIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwaUxpc3QiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFCdzRnMkhHcldrS25mV0ZyTDQwU1dKdFlvJTJCNGdTaXU1WGs3TDFkQ2ZuVFNnQUFBQUFPZ0FBQUFBSUFBQ0FBQUFBSUVzdDhNbjEyMHFkWnUxdEdncTJyaFhEYzBWUEx0d3lnM0F3bW9Da2dZakFBQUFDM2NmdW54Y0lZNXJYNEJRdFhxamtYWkVUWjUyODhKZ1glMkZTMm5XVzFnVzZUc21ndWtVaFZvUElzWURwSTRhbE5oQUFBQUEwcDZXMURiakJZcGQxUzRmcVNVJTJCOUpOWFQzOW1VYUFCUFJ2MDRiTlFHRUo3ZGI1SjU3R1pERjNOJTJGV0hKNzhiRkc1RnRIN2VLeVVzU0xZZkxxd05USnclM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQnc0ZzJIR3JXa0tuZldGckw0MFNXSnRZbyUyQjRnU2l1NVhrN0wxZENmblRTZ0FBQUFBT2dBQUFBQUlBQUNBQUFBQUlFc3Q4TW4xMjBxZFp1MXRHZ3EycmhYRGMwVlBMdHd5ZzNBd21vQ2tnWWpBQUFBQzNjZnVueGNJWTVyWDRCUXRYcWprWFpFVFo1Mjg4SmdYJTJGUzJuV1cxZ1c2VHNtZ3VrVWhWb1BJc1lEcEk0YWxOaEFBQUFBMHA2VzFEYmpCWXBkMVM0ZnFTVSUyQjlKTlhUMzltVWFBQlBSdjA0Yk5RR0VKN2RiNUo1N0daREYzTiUyRldISjc4YkZHNUZ0SDdlS3lVc1NMWWZMcXdOVEp3JTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0ibWVzc2FnZUlkIiBWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCSyUyQzElN0NCTCUyQzAiIFJlY29yZGVkVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQkslMkMxJTdDQkwlMkMwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBpTGlzdCIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcGlMaXN0IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSIxMCIgUmVjb3JkZWRWYWx1ZT0iMTAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQwNTIzMiIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQwNTIzMiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSJmNzliMTRmOS1hMGRjLTQ0ODUtYTJiMC1iNjVkMDc2OTBmMGQiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvc2VuZCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwaUxpc3QiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFCdzRnMkhHcldrS25mV0ZyTDQwU1dKdFlvJTJCNGdTaXU1WGs3TDFkQ2ZuVFNnQUFBQUFPZ0FBQUFBSUFBQ0FBQUFBSUVzdDhNbjEyMHFkWnUxdEdncTJyaFhEYzBWUEx0d3lnM0F3bW9Da2dZakFBQUFDM2NmdW54Y0lZNXJYNEJRdFhxamtYWkVUWjUyODhKZ1glMkZTMm5XVzFnVzZUc21ndWtVaFZvUElzWURwSTRhbE5oQUFBQUEwcDZXMURiakJZcGQxUzRmcVNVJTJCOUpOWFQzOW1VYUFCUFJ2MDRiTlFHRUo3ZGI1SjU3R1pERjNOJTJGV0hKNzhiRkc1RnRIN2VLeVVzU0xZZkxxd05USnclM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQnc0ZzJIR3JXa0tuZldGckw0MFNXSnRZbyUyQjRnU2l1NVhrN0wxZENmblRTZ0FBQUFBT2dBQUFBQUlBQUNBQUFBQUlFc3Q4TW4xMjBxZFp1MXRHZ3EycmhYRGMwVlBMdHd5ZzNBd21vQ2tnWWpBQUFBQzNjZnVueGNJWTVyWDRCUXRYcWprWFpFVFo1Mjg4SmdYJTJGUzJuV1cxZ1c2VHNtZ3VrVWhWb1BJc1lEcEk0YWxOaEFBQUFBMHA2VzFEYmpCWXBkMVM0ZnFTVSUyQjlKTlhUMzltVWFBQlBSdjA0Yk5RR0VKN2RiNUo1N0daREYzTiUyRldISjc4YkZHNUZ0SDdlS3lVc1NMWWZMcXdOVEp3JTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBpTGlzdCIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcGlMaXN0IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5Pg0KICAgICAgICA8Rm9ybVBvc3RQYXJhbWV0ZXIgTmFtZT0iZGF0YSIgVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O21pY3Jvc29mdC52aXN1YWxzdHVkaW8ud2ViLmJyb3dzZXJsaW5rLmh0bWxtYXBwaW5nZXh0ZW5zaW9uZmFjdG9yeS5yZXNvbHZlVXJsJnF1b3Q7LCZxdW90O2FyZ3MmcXVvdDs6WyZxdW90O34vX19icm93c2VyTGluay9yZXF1ZXN0RGF0YS8yNGVhNGM3YjU4ZDI0NzI4YThiZjU5ZjQzMTlmYzc1ZSZxdW90O10sJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzoyfSIgUmVjb3JkZWRWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7bWljcm9zb2Z0LnZpc3VhbHN0dWRpby53ZWIuYnJvd3NlcmxpbmsuaHRtbG1hcHBpbmdleHRlbnNpb25mYWN0b3J5LnJlc29sdmVVcmwmcXVvdDssJnF1b3Q7YXJncyZxdW90OzpbJnF1b3Q7fi9fX2Jyb3dzZXJMaW5rL3JlcXVlc3REYXRhLzI0ZWE0YzdiNThkMjQ3MjhhOGJmNTlmNDMxOWZjNzVlJnF1b3Q7XSwmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjJ9IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJUcnVlIiAvPg0KICAgICAgPC9Gb3JtUG9zdEh0dHBCb2R5Pg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9ImNhMDRjNDZkLTU4MjYtNDNmOC1hYmJkLTQwMTMyMjM5OGVkZCIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9wb2xsIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwaUxpc3QiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFCdzRnMkhHcldrS25mV0ZyTDQwU1dKdFlvJTJCNGdTaXU1WGs3TDFkQ2ZuVFNnQUFBQUFPZ0FBQUFBSUFBQ0FBQUFBSUVzdDhNbjEyMHFkWnUxdEdncTJyaFhEYzBWUEx0d3lnM0F3bW9Da2dZakFBQUFDM2NmdW54Y0lZNXJYNEJRdFhxamtYWkVUWjUyODhKZ1glMkZTMm5XVzFnVzZUc21ndWtVaFZvUElzWURwSTRhbE5oQUFBQUEwcDZXMURiakJZcGQxUzRmcVNVJTJCOUpOWFQzOW1VYUFCUFJ2MDRiTlFHRUo3ZGI1SjU3R1pERjNOJTJGV0hKNzhiRkc1RnRIN2VLeVVzU0xZZkxxd05USnclM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQnc0ZzJIR3JXa0tuZldGckw0MFNXSnRZbyUyQjRnU2l1NVhrN0wxZENmblRTZ0FBQUFBT2dBQUFBQUlBQUNBQUFBQUlFc3Q4TW4xMjBxZFp1MXRHZ3EycmhYRGMwVlBMdHd5ZzNBd21vQ2tnWWpBQUFBQzNjZnVueGNJWTVyWDRCUXRYcWprWFpFVFo1Mjg4SmdYJTJGUzJuV1cxZ1c2VHNtZ3VrVWhWb1BJc1lEcEk0YWxOaEFBQUFBMHA2VzFEYmpCWXBkMVM0ZnFTVSUyQjlKTlhUMzltVWFBQlBSdjA0Yk5RR0VKN2RiNUo1N0daREYzTiUyRldISjc4YkZHNUZ0SDdlS3lVc1NMWWZMcXdOVEp3JTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0ibWVzc2FnZUlkIiBWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCSyUyQzIlN0NCTCUyQzAiIFJlY29yZGVkVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQkslMkMyJTdDQkwlMkMwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBpTGlzdCIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcGlMaXN0IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSI0IiBSZWNvcmRlZFZhbHVlPSI0IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0MDUzNzYiIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0MDUzNzYiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iR0VUIiBHdWlkPSI3MWJhNTQ4NC02YWE4LTRiNGYtYTliYi0zZmNjZDliYjRiZGYiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvX19icm93c2VyTGluay9yZXF1ZXN0RGF0YS8yNGVhNGM3YjU4ZDI0NzI4YThiZjU5ZjQzMTlmYzc1ZSIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQsICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlgtUmVxdWVzdGVkLVdpdGgiIFZhbHVlPSJYTUxIdHRwUmVxdWVzdCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwaUxpc3QiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iMDc5M2Q2NTctZDgzOS00YTc4LTk4YTktMGU3ZTBhN2FlNGI0IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3BvbGwiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQ29udGVudC1UeXBlIiBWYWx1ZT0iYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBpTGlzdCIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUJ3NGcySEdyV2tLbmZXRnJMNDBTV0p0WW8lMkI0Z1NpdTVYazdMMWRDZm5UU2dBQUFBQU9nQUFBQUFJQUFDQUFBQUFJRXN0OE1uMTIwcWRadTF0R2dxMnJoWERjMFZQTHR3eWczQXdtb0NrZ1lqQUFBQUMzY2Z1bnhjSVk1clg0QlF0WHFqa1haRVRaNTI4OEpnWCUyRlMybldXMWdXNlRzbWd1a1VoVm9QSXNZRHBJNGFsTmhBQUFBQTBwNlcxRGJqQllwZDFTNGZxU1UlMkI5Sk5YVDM5bVVhQUJQUnYwNGJOUUdFSjdkYjVKNTdHWkRGM04lMkZXSEo3OGJGRzVGdEg3ZUt5VXNTTFlmTHF3TlRKdyUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFCdzRnMkhHcldrS25mV0ZyTDQwU1dKdFlvJTJCNGdTaXU1WGs3TDFkQ2ZuVFNnQUFBQUFPZ0FBQUFBSUFBQ0FBQUFBSUVzdDhNbjEyMHFkWnUxdEdncTJyaFhEYzBWUEx0d3lnM0F3bW9Da2dZakFBQUFDM2NmdW54Y0lZNXJYNEJRdFhxamtYWkVUWjUyODhKZ1glMkZTMm5XVzFnVzZUc21ndWtVaFZvUElzWURwSTRhbE5oQUFBQUEwcDZXMURiakJZcGQxUzRmcVNVJTJCOUpOWFQzOW1VYUFCUFJ2MDRiTlFHRUo3ZGI1SjU3R1pERjNOJTJGV0hKNzhiRkc1RnRIN2VLeVVzU0xZZkxxd05USnclM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJtZXNzYWdlSWQiIFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JLJTJDMyU3Q0JMJTJDMCIgUmVjb3JkZWRWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCSyUyQzMlN0NCTCUyQzAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcGlMaXN0IiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwaUxpc3QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRpZCIgVmFsdWU9IjEwIiBSZWNvcmRlZFZhbHVlPSIxMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Il8iIFZhbHVlPSIxMzk3NjMxNDA1NDQyIiBSZWNvcmRlZFZhbHVlPSIxMzk3NjMxNDA1NDQyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keSAvPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9ImZmNWMzNjhlLTE5ODYtNDcxYy04MThkLWRhNzlkZDRhNzE3YyIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9zZW5kIiBUaGlua1RpbWU9IjEiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBpTGlzdCIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUJ3NGcySEdyV2tLbmZXRnJMNDBTV0p0WW8lMkI0Z1NpdTVYazdMMWRDZm5UU2dBQUFBQU9nQUFBQUFJQUFDQUFBQUFJRXN0OE1uMTIwcWRadTF0R2dxMnJoWERjMFZQTHR3eWczQXdtb0NrZ1lqQUFBQUMzY2Z1bnhjSVk1clg0QlF0WHFqa1haRVRaNTI4OEpnWCUyRlMybldXMWdXNlRzbWd1a1VoVm9QSXNZRHBJNGFsTmhBQUFBQTBwNlcxRGJqQllwZDFTNGZxU1UlMkI5Sk5YVDM5bVVhQUJQUnYwNGJOUUdFSjdkYjVKNTdHWkRGM04lMkZXSEo3OGJGRzVGdEg3ZUt5VXNTTFlmTHF3TlRKdyUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFCdzRnMkhHcldrS25mV0ZyTDQwU1dKdFlvJTJCNGdTaXU1WGs3TDFkQ2ZuVFNnQUFBQUFPZ0FBQUFBSUFBQ0FBQUFBSUVzdDhNbjEyMHFkWnUxdEdncTJyaFhEYzBWUEx0d3lnM0F3bW9Da2dZakFBQUFDM2NmdW54Y0lZNXJYNEJRdFhxamtYWkVUWjUyODhKZ1glMkZTMm5XVzFnVzZUc21ndWtVaFZvUElzWURwSTRhbE5oQUFBQUEwcDZXMURiakJZcGQxUzRmcVNVJTJCOUpOWFQzOW1VYUFCUFJ2MDRiTlFHRUo3ZGI1SjU3R1pERjNOJTJGV0hKNzhiRkc1RnRIN2VLeVVzU0xZZkxxd05USnclM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcGlMaXN0IiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwaUxpc3QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHk+DQogICAgICAgIDxGb3JtUG9zdFBhcmFtZXRlciBOYW1lPSJkYXRhIiBWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7bWljcm9zb2Z0LnZpc3VhbHN0dWRpby53ZWIuYnJvd3NlcmxpbmsuaHRtbG1hcHBpbmdleHRlbnNpb25mYWN0b3J5LnJlc29sdmVTb3VyY2VGaWxlUGF0aHMmcXVvdDssJnF1b3Q7YXJncyZxdW90OzpbWyZxdW90O34vVmlld3MvQXBpTGlzdC9JbmRleC5jc2h0bWwmcXVvdDtdXSwmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjN9IiBSZWNvcmRlZFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDttaWNyb3NvZnQudmlzdWFsc3R1ZGlvLndlYi5icm93c2VybGluay5odG1sbWFwcGluZ2V4dGVuc2lvbmZhY3RvcnkucmVzb2x2ZVNvdXJjZUZpbGVQYXRocyZxdW90OywmcXVvdDthcmdzJnF1b3Q7OltbJnF1b3Q7fi9WaWV3cy9BcGlMaXN0L0luZGV4LmNzaHRtbCZxdW90O11dLCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6M30iIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IlRydWUiIC8+DQogICAgICA8L0Zvcm1Qb3N0SHR0cEJvZHk+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iR0VUIiBHdWlkPSJmMjg3NzNmNi1hYTE3LTQxMjctODJmYy0zMjc4ZTFhMTQzMmYiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBpTGlzdC9PYXV0aEF1dGhvcml6ZSIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwaUxpc3QiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iNmQ4NGUyNWMtM2UzNi00NDQ5LTg4ZjctMzc1YmI3ZGQwYmRjIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL2Fib3J0IiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBpTGlzdCIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUJ3NGcySEdyV2tLbmZXRnJMNDBTV0p0WW8lMkI0Z1NpdTVYazdMMWRDZm5UU2dBQUFBQU9nQUFBQUFJQUFDQUFBQUFJRXN0OE1uMTIwcWRadTF0R2dxMnJoWERjMFZQTHR3eWczQXdtb0NrZ1lqQUFBQUMzY2Z1bnhjSVk1clg0QlF0WHFqa1haRVRaNTI4OEpnWCUyRlMybldXMWdXNlRzbWd1a1VoVm9QSXNZRHBJNGFsTmhBQUFBQTBwNlcxRGJqQllwZDFTNGZxU1UlMkI5Sk5YVDM5bVVhQUJQUnYwNGJOUUdFSjdkYjVKNTdHWkRGM04lMkZXSEo3OGJGRzVGdEg3ZUt5VXNTTFlmTHF3TlRKdyUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFCdzRnMkhHcldrS25mV0ZyTDQwU1dKdFlvJTJCNGdTaXU1WGs3TDFkQ2ZuVFNnQUFBQUFPZ0FBQUFBSUFBQ0FBQUFBSUVzdDhNbjEyMHFkWnUxdEdncTJyaFhEYzBWUEx0d3lnM0F3bW9Da2dZakFBQUFDM2NmdW54Y0lZNXJYNEJRdFhxamtYWkVUWjUyODhKZ1glMkZTMm5XVzFnVzZUc21ndWtVaFZvUElzWURwSTRhbE5oQUFBQUEwcDZXMURiakJZcGQxUzRmcVNVJTJCOUpOWFQzOW1VYUFCUFJ2MDRiTlFHRUo3ZGI1SjU3R1pERjNOJTJGV0hKNzhiRkc1RnRIN2VLeVVzU0xZZkxxd05USnclM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcGlMaXN0IiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwaUxpc3QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSIzYmUyNGNhMS1lNzIxLTRlOTgtODkzOS1lYzllNzE3ODY1YjciIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvbmVnb3RpYXRlIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwaUxpc3QvT2F1dGhBdXRob3JpemUiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBpTGlzdCUyRk9hdXRoQXV0aG9yaXplIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwaUxpc3QlMkZPYXV0aEF1dGhvcml6ZSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY2xpZW50UHJvdG9jb2wiIFZhbHVlPSIxLjMiIFJlY29yZGVkVmFsdWU9IjEuMyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Il8iIFZhbHVlPSIxMzk3NjMxNDA3MTAzIiBSZWNvcmRlZFZhbHVlPSIxMzk3NjMxNDA3MTAzIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keSAvPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjIxMjRhODIyLTI1ZDktNDIxYy04MGYzLTEyYzQyMjRkMzdkZCIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9jb25uZWN0IiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwaUxpc3QvT2F1dGhBdXRob3JpemUiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFENFk5eXNuRXcwNDlPVEE0cWgwMzlDUzRNZTBEN2VBQThwd08lMkJ1cGRtc213QUFBQUFPZ0FBQUFBSUFBQ0FBQUFDOGlFNXNUJTJCaXRTYzR6S1dxTUZ2VEZIbGN4T3hGMEV6RDdKcEREb0olMkZYc3pBQUFBQWEzbEFLWFNCT1VDNFlwTXFjVE8yVXN1d3B5ZVlqdTkwZmxvV3ZUdFljOUJOUnRXcEFxQTdNJTJCbjFvMTh6dUhJTkFBQUFBTGFXdHE0bkduSVhSRDhPMTdQRTBzU2FyMzVaMnIlMkZBRTJnR21RQ2RSTnlkNXJuM1RTbjNGaVNZVmtZMDRKTW85cHJWTmtFWEN0TENTUnUlMkJnUkFYdllRJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUQ0WTl5c25FdzA0OU9UQTRxaDAzOUNTNE1lMEQ3ZUFBOHB3TyUyQnVwZG1zbXdBQUFBQU9nQUFBQUFJQUFDQUFBQUM4aUU1c1QlMkJpdFNjNHpLV3FNRnZURkhsY3hPeEYwRXpEN0pwRERvSiUyRlhzekFBQUFBYTNsQUtYU0JPVUM0WXBNcWNUTzJVc3V3cHllWWp1OTBmbG9XdlR0WWM5Qk5SdFdwQXFBN00lMkJuMW8xOHp1SElOQUFBQUFMYVd0cTRuR25JWFJEOE8xN1BFMHNTYXIzNVoyciUyRkFFMmdHbVFDZFJOeWQ1cm4zVFNuM0ZpU1lWa1kwNEpNbzlwclZOa0VYQ3RMQ1NSdSUyQmdSQVh2WVElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcGlMaXN0JTJGT2F1dGhBdXRob3JpemUiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBpTGlzdCUyRk9hdXRoQXV0aG9yaXplIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSI5IiBSZWNvcmRlZFZhbHVlPSI5IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0MDc0NjciIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0MDc0NjciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iNGM1ZTYwNmUtMmI2MC00NTk5LWFiZGYtMzNkNmRiZGRmYWIxIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3NlbmQiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcGlMaXN0L09hdXRoQXV0aG9yaXplIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBRDRZOXlzbkV3MDQ5T1RBNHFoMDM5Q1M0TWUwRDdlQUE4cHdPJTJCdXBkbXNtd0FBQUFBT2dBQUFBQUlBQUNBQUFBQzhpRTVzVCUyQml0U2M0ektXcU1GdlRGSGxjeE94RjBFekQ3SnBERG9KJTJGWHN6QUFBQUFhM2xBS1hTQk9VQzRZcE1xY1RPMlVzdXdweWVZanU5MGZsb1d2VHRZYzlCTlJ0V3BBcUE3TSUyQm4xbzE4enVISU5BQUFBQUxhV3RxNG5HbklYUkQ4TzE3UEUwc1NhcjM1WjJyJTJGQUUyZ0dtUUNkUk55ZDVybjNUU24zRmlTWVZrWTA0Sk1vOXByVk5rRVhDdExDU1J1JTJCZ1JBWHZZUSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFENFk5eXNuRXcwNDlPVEE0cWgwMzlDUzRNZTBEN2VBQThwd08lMkJ1cGRtc213QUFBQUFPZ0FBQUFBSUFBQ0FBQUFDOGlFNXNUJTJCaXRTYzR6S1dxTUZ2VEZIbGN4T3hGMEV6RDdKcEREb0olMkZYc3pBQUFBQWEzbEFLWFNCT1VDNFlwTXFjVE8yVXN1d3B5ZVlqdTkwZmxvV3ZUdFljOUJOUnRXcEFxQTdNJTJCbjFvMTh6dUhJTkFBQUFBTGFXdHE0bkduSVhSRDhPMTdQRTBzU2FyMzVaMnIlMkZBRTJnR21RQ2RSTnlkNXJuM1RTbjNGaVNZVmtZMDRKTW85cHJWTmtFWEN0TENTUnUlMkJnUkFYdllRJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBpTGlzdCUyRk9hdXRoQXV0aG9yaXplIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwaUxpc3QlMkZPYXV0aEF1dGhvcml6ZSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keT4NCiAgICAgICAgPEZvcm1Qb3N0UGFyYW1ldGVyIE5hbWU9ImRhdGEiIFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDtNaWNyb3NvZnQuVmlzdWFsU3R1ZGlvLldlYi5Ccm93c2VyTGluay5Db3JlRXh0ZW5zaW9uRmFjdG9yeS5jb25uZWN0ZWQmcXVvdDssJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzoxfSIgUmVjb3JkZWRWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7TWljcm9zb2Z0LlZpc3VhbFN0dWRpby5XZWIuQnJvd3NlckxpbmsuQ29yZUV4dGVuc2lvbkZhY3RvcnkuY29ubmVjdGVkJnF1b3Q7LCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6MX0iIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IlRydWUiIC8+DQogICAgICA8L0Zvcm1Qb3N0SHR0cEJvZHk+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iMTc2ODBiOTgtYzJiOC00NzBiLWJhMTAtNDQ1YWFiOGZjMDlmIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3BvbGwiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQ29udGVudC1UeXBlIiBWYWx1ZT0iYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBpTGlzdC9PYXV0aEF1dGhvcml6ZSIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUQ0WTl5c25FdzA0OU9UQTRxaDAzOUNTNE1lMEQ3ZUFBOHB3TyUyQnVwZG1zbXdBQUFBQU9nQUFBQUFJQUFDQUFBQUM4aUU1c1QlMkJpdFNjNHpLV3FNRnZURkhsY3hPeEYwRXpEN0pwRERvSiUyRlhzekFBQUFBYTNsQUtYU0JPVUM0WXBNcWNUTzJVc3V3cHllWWp1OTBmbG9XdlR0WWM5Qk5SdFdwQXFBN00lMkJuMW8xOHp1SElOQUFBQUFMYVd0cTRuR25JWFJEOE8xN1BFMHNTYXIzNVoyciUyRkFFMmdHbVFDZFJOeWQ1cm4zVFNuM0ZpU1lWa1kwNEpNbzlwclZOa0VYQ3RMQ1NSdSUyQmdSQVh2WVElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBRDRZOXlzbkV3MDQ5T1RBNHFoMDM5Q1M0TWUwRDdlQUE4cHdPJTJCdXBkbXNtd0FBQUFBT2dBQUFBQUlBQUNBQUFBQzhpRTVzVCUyQml0U2M0ektXcU1GdlRGSGxjeE94RjBFekQ3SnBERG9KJTJGWHN6QUFBQUFhM2xBS1hTQk9VQzRZcE1xY1RPMlVzdXdweWVZanU5MGZsb1d2VHRZYzlCTlJ0V3BBcUE3TSUyQm4xbzE4enVISU5BQUFBQUxhV3RxNG5HbklYUkQ4TzE3UEUwc1NhcjM1WjJyJTJGQUUyZ0dtUUNkUk55ZDVybjNUU24zRmlTWVZrWTA0Sk1vOXByVk5rRVhDdExDU1J1JTJCZ1JBWHZZUSUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Im1lc3NhZ2VJZCIgVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQk0lMkMxJTdDQk4lMkMwIiBSZWNvcmRlZFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JNJTJDMSU3Q0JOJTJDMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwaUxpc3QlMkZPYXV0aEF1dGhvcml6ZSIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcGlMaXN0JTJGT2F1dGhBdXRob3JpemUiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRpZCIgVmFsdWU9IjMiIFJlY29yZGVkVmFsdWU9IjMiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQwNzQ4MyIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQwNzQ4MyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSI0MzMwOThmNy02YWQ4LTRhZjgtODk2Ny0yNWI4YzFlMDcyMDgiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvc2VuZCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwaUxpc3QvT2F1dGhBdXRob3JpemUiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFENFk5eXNuRXcwNDlPVEE0cWgwMzlDUzRNZTBEN2VBQThwd08lMkJ1cGRtc213QUFBQUFPZ0FBQUFBSUFBQ0FBQUFDOGlFNXNUJTJCaXRTYzR6S1dxTUZ2VEZIbGN4T3hGMEV6RDdKcEREb0olMkZYc3pBQUFBQWEzbEFLWFNCT1VDNFlwTXFjVE8yVXN1d3B5ZVlqdTkwZmxvV3ZUdFljOUJOUnRXcEFxQTdNJTJCbjFvMTh6dUhJTkFBQUFBTGFXdHE0bkduSVhSRDhPMTdQRTBzU2FyMzVaMnIlMkZBRTJnR21RQ2RSTnlkNXJuM1RTbjNGaVNZVmtZMDRKTW85cHJWTmtFWEN0TENTUnUlMkJnUkFYdllRJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUQ0WTl5c25FdzA0OU9UQTRxaDAzOUNTNE1lMEQ3ZUFBOHB3TyUyQnVwZG1zbXdBQUFBQU9nQUFBQUFJQUFDQUFBQUM4aUU1c1QlMkJpdFNjNHpLV3FNRnZURkhsY3hPeEYwRXpEN0pwRERvSiUyRlhzekFBQUFBYTNsQUtYU0JPVUM0WXBNcWNUTzJVc3V3cHllWWp1OTBmbG9XdlR0WWM5Qk5SdFdwQXFBN00lMkJuMW8xOHp1SElOQUFBQUFMYVd0cTRuR25JWFJEOE8xN1BFMHNTYXIzNVoyciUyRkFFMmdHbVFDZFJOeWQ1cm4zVFNuM0ZpU1lWa1kwNEpNbzlwclZOa0VYQ3RMQ1NSdSUyQmdSQVh2WVElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcGlMaXN0JTJGT2F1dGhBdXRob3JpemUiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBpTGlzdCUyRk9hdXRoQXV0aG9yaXplIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5Pg0KICAgICAgICA8Rm9ybVBvc3RQYXJhbWV0ZXIgTmFtZT0iZGF0YSIgVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O21pY3Jvc29mdC52aXN1YWxzdHVkaW8ud2ViLmJyb3dzZXJsaW5rLmh0bWxtYXBwaW5nZXh0ZW5zaW9uZmFjdG9yeS5yZXNvbHZlVXJsJnF1b3Q7LCZxdW90O2FyZ3MmcXVvdDs6WyZxdW90O34vX19icm93c2VyTGluay9yZXF1ZXN0RGF0YS9lNGU1ZmM4MzE0Y2E0YTUwOTVjNzFjMDczYmU5M2EzNCZxdW90O10sJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzoyfSIgUmVjb3JkZWRWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7bWljcm9zb2Z0LnZpc3VhbHN0dWRpby53ZWIuYnJvd3NlcmxpbmsuaHRtbG1hcHBpbmdleHRlbnNpb25mYWN0b3J5LnJlc29sdmVVcmwmcXVvdDssJnF1b3Q7YXJncyZxdW90OzpbJnF1b3Q7fi9fX2Jyb3dzZXJMaW5rL3JlcXVlc3REYXRhL2U0ZTVmYzgzMTRjYTRhNTA5NWM3MWMwNzNiZTkzYTM0JnF1b3Q7XSwmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjJ9IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJUcnVlIiAvPg0KICAgICAgPC9Gb3JtUG9zdEh0dHBCb2R5Pg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9ImFlM2Q5MmM1LTc3YzQtNDdhNC05ZWZlLTAxNzhlOTdjZWIzYyIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9wb2xsIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwaUxpc3QvT2F1dGhBdXRob3JpemUiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFENFk5eXNuRXcwNDlPVEE0cWgwMzlDUzRNZTBEN2VBQThwd08lMkJ1cGRtc213QUFBQUFPZ0FBQUFBSUFBQ0FBQUFDOGlFNXNUJTJCaXRTYzR6S1dxTUZ2VEZIbGN4T3hGMEV6RDdKcEREb0olMkZYc3pBQUFBQWEzbEFLWFNCT1VDNFlwTXFjVE8yVXN1d3B5ZVlqdTkwZmxvV3ZUdFljOUJOUnRXcEFxQTdNJTJCbjFvMTh6dUhJTkFBQUFBTGFXdHE0bkduSVhSRDhPMTdQRTBzU2FyMzVaMnIlMkZBRTJnR21RQ2RSTnlkNXJuM1RTbjNGaVNZVmtZMDRKTW85cHJWTmtFWEN0TENTUnUlMkJnUkFYdllRJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUQ0WTl5c25FdzA0OU9UQTRxaDAzOUNTNE1lMEQ3ZUFBOHB3TyUyQnVwZG1zbXdBQUFBQU9nQUFBQUFJQUFDQUFBQUM4aUU1c1QlMkJpdFNjNHpLV3FNRnZURkhsY3hPeEYwRXpEN0pwRERvSiUyRlhzekFBQUFBYTNsQUtYU0JPVUM0WXBNcWNUTzJVc3V3cHllWWp1OTBmbG9XdlR0WWM5Qk5SdFdwQXFBN00lMkJuMW8xOHp1SElOQUFBQUFMYVd0cTRuR25JWFJEOE8xN1BFMHNTYXIzNVoyciUyRkFFMmdHbVFDZFJOeWQ1cm4zVFNuM0ZpU1lWa1kwNEpNbzlwclZOa0VYQ3RMQ1NSdSUyQmdSQVh2WVElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJtZXNzYWdlSWQiIFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JNJTJDMiU3Q0JOJTJDMCIgUmVjb3JkZWRWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCTSUyQzIlN0NCTiUyQzAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcGlMaXN0JTJGT2F1dGhBdXRob3JpemUiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBpTGlzdCUyRk9hdXRoQXV0aG9yaXplIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSI0IiBSZWNvcmRlZFZhbHVlPSI0IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0MDc1ODMiIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0MDc1ODMiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iR0VUIiBHdWlkPSJmNDc1OWVhNi1mMTU1LTQxNzItYWZkMS05NDZkMjNjYjg1NDQiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvX19icm93c2VyTGluay9yZXF1ZXN0RGF0YS9lNGU1ZmM4MzE0Y2E0YTUwOTVjNzFjMDczYmU5M2EzNCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQsICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlgtUmVxdWVzdGVkLVdpdGgiIFZhbHVlPSJYTUxIdHRwUmVxdWVzdCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwaUxpc3QvT2F1dGhBdXRob3JpemUiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iNDBmODNmM2QtMzFiMC00ZWE2LTlmYTctYzVjNDI5OTJjZmFmIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3BvbGwiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQ29udGVudC1UeXBlIiBWYWx1ZT0iYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBpTGlzdC9PYXV0aEF1dGhvcml6ZSIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUQ0WTl5c25FdzA0OU9UQTRxaDAzOUNTNE1lMEQ3ZUFBOHB3TyUyQnVwZG1zbXdBQUFBQU9nQUFBQUFJQUFDQUFBQUM4aUU1c1QlMkJpdFNjNHpLV3FNRnZURkhsY3hPeEYwRXpEN0pwRERvSiUyRlhzekFBQUFBYTNsQUtYU0JPVUM0WXBNcWNUTzJVc3V3cHllWWp1OTBmbG9XdlR0WWM5Qk5SdFdwQXFBN00lMkJuMW8xOHp1SElOQUFBQUFMYVd0cTRuR25JWFJEOE8xN1BFMHNTYXIzNVoyciUyRkFFMmdHbVFDZFJOeWQ1cm4zVFNuM0ZpU1lWa1kwNEpNbzlwclZOa0VYQ3RMQ1NSdSUyQmdSQVh2WVElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBRDRZOXlzbkV3MDQ5T1RBNHFoMDM5Q1M0TWUwRDdlQUE4cHdPJTJCdXBkbXNtd0FBQUFBT2dBQUFBQUlBQUNBQUFBQzhpRTVzVCUyQml0U2M0ektXcU1GdlRGSGxjeE94RjBFekQ3SnBERG9KJTJGWHN6QUFBQUFhM2xBS1hTQk9VQzRZcE1xY1RPMlVzdXdweWVZanU5MGZsb1d2VHRZYzlCTlJ0V3BBcUE3TSUyQm4xbzE4enVISU5BQUFBQUxhV3RxNG5HbklYUkQ4TzE3UEUwc1NhcjM1WjJyJTJGQUUyZ0dtUUNkUk55ZDVybjNUU24zRmlTWVZrWTA0Sk1vOXByVk5rRVhDdExDU1J1JTJCZ1JBWHZZUSUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Im1lc3NhZ2VJZCIgVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQk0lMkMzJTdDQk4lMkMwIiBSZWNvcmRlZFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JNJTJDMyU3Q0JOJTJDMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwaUxpc3QlMkZPYXV0aEF1dGhvcml6ZSIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcGlMaXN0JTJGT2F1dGhBdXRob3JpemUiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRpZCIgVmFsdWU9IjEiIFJlY29yZGVkVmFsdWU9IjEiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQwNzg0OCIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQwNzg0OCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSI1MjQyN2M0NC02NjFkLTQ0YTktOWJiZi03MzJmM2I5MDQ1MjIiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvc2VuZCIgVGhpbmtUaW1lPSIxIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwaUxpc3QvT2F1dGhBdXRob3JpemUiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFENFk5eXNuRXcwNDlPVEE0cWgwMzlDUzRNZTBEN2VBQThwd08lMkJ1cGRtc213QUFBQUFPZ0FBQUFBSUFBQ0FBQUFDOGlFNXNUJTJCaXRTYzR6S1dxTUZ2VEZIbGN4T3hGMEV6RDdKcEREb0olMkZYc3pBQUFBQWEzbEFLWFNCT1VDNFlwTXFjVE8yVXN1d3B5ZVlqdTkwZmxvV3ZUdFljOUJOUnRXcEFxQTdNJTJCbjFvMTh6dUhJTkFBQUFBTGFXdHE0bkduSVhSRDhPMTdQRTBzU2FyMzVaMnIlMkZBRTJnR21RQ2RSTnlkNXJuM1RTbjNGaVNZVmtZMDRKTW85cHJWTmtFWEN0TENTUnUlMkJnUkFYdllRJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUQ0WTl5c25FdzA0OU9UQTRxaDAzOUNTNE1lMEQ3ZUFBOHB3TyUyQnVwZG1zbXdBQUFBQU9nQUFBQUFJQUFDQUFBQUM4aUU1c1QlMkJpdFNjNHpLV3FNRnZURkhsY3hPeEYwRXpEN0pwRERvSiUyRlhzekFBQUFBYTNsQUtYU0JPVUM0WXBNcWNUTzJVc3V3cHllWWp1OTBmbG9XdlR0WWM5Qk5SdFdwQXFBN00lMkJuMW8xOHp1SElOQUFBQUFMYVd0cTRuR25JWFJEOE8xN1BFMHNTYXIzNVoyciUyRkFFMmdHbVFDZFJOeWQ1cm4zVFNuM0ZpU1lWa1kwNEpNbzlwclZOa0VYQ3RMQ1NSdSUyQmdSQVh2WVElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcGlMaXN0JTJGT2F1dGhBdXRob3JpemUiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBpTGlzdCUyRk9hdXRoQXV0aG9yaXplIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5Pg0KICAgICAgICA8Rm9ybVBvc3RQYXJhbWV0ZXIgTmFtZT0iZGF0YSIgVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O21pY3Jvc29mdC52aXN1YWxzdHVkaW8ud2ViLmJyb3dzZXJsaW5rLmh0bWxtYXBwaW5nZXh0ZW5zaW9uZmFjdG9yeS5yZXNvbHZlU291cmNlRmlsZVBhdGhzJnF1b3Q7LCZxdW90O2FyZ3MmcXVvdDs6W1smcXVvdDt+L1ZpZXdzL0FwaUxpc3QvT2F1dGhBdXRob3JpemUuY3NodG1sJnF1b3Q7XV0sJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzozfSIgUmVjb3JkZWRWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7bWljcm9zb2Z0LnZpc3VhbHN0dWRpby53ZWIuYnJvd3NlcmxpbmsuaHRtbG1hcHBpbmdleHRlbnNpb25mYWN0b3J5LnJlc29sdmVTb3VyY2VGaWxlUGF0aHMmcXVvdDssJnF1b3Q7YXJncyZxdW90OzpbWyZxdW90O34vVmlld3MvQXBpTGlzdC9PYXV0aEF1dGhvcml6ZS5jc2h0bWwmcXVvdDtdXSwmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjN9IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJUcnVlIiAvPg0KICAgICAgPC9Gb3JtUG9zdEh0dHBCb2R5Pg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IkdFVCIgR3VpZD0iMzNkMjMzMDQtOGEzYy00YTk4LTg3MjYtOTBiNDc2NjdiOGEyIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FjY291bnQvTG9naW4iIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcGlMaXN0L09hdXRoQXV0aG9yaXplIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPEV4dHJhY3Rpb25SdWxlcz4NCiAgICAgICAgPEV4dHJhY3Rpb25SdWxlIENsYXNzbmFtZT0iTWljcm9zb2Z0LlZpc3VhbFN0dWRpby5UZXN0VG9vbHMuV2ViVGVzdGluZy5SdWxlcy5FeHRyYWN0SGlkZGVuRmllbGRzLCBNaWNyb3NvZnQuVmlzdWFsU3R1ZGlvLlF1YWxpdHlUb29scy5XZWJUZXN0RnJhbWV3b3JrLCBWZXJzaW9uPTEwLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EiIFZhcmlhYmxlTmFtZT0iMSIgRGlzcGxheU5hbWU9IuaPkOWPlumakOiXj+eahOWtl+autSIgRGVzY3JpcHRpb249IuS7juWTjeW6lOS4reaPkOWPluaJgOaciemakOiXj+eahOWtl+aute+8jOW5tuWwhui/meS6m+Wtl+auteaUvuWFpea1i+ivleS4iuS4i+aWh+S4reOAgiI+DQogICAgICAgICAgPFJ1bGVQYXJhbWV0ZXJzPg0KICAgICAgICAgICAgPFJ1bGVQYXJhbWV0ZXIgTmFtZT0iUmVxdWlyZWQiIFZhbHVlPSJUcnVlIiAvPg0KICAgICAgICAgICAgPFJ1bGVQYXJhbWV0ZXIgTmFtZT0iSHRtbERlY29kZSIgVmFsdWU9IlRydWUiIC8+DQogICAgICAgICAgPC9SdWxlUGFyYW1ldGVycz4NCiAgICAgICAgPC9FeHRyYWN0aW9uUnVsZT4NCiAgICAgIDwvRXh0cmFjdGlvblJ1bGVzPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9ImI1NzJkNmIzLWFkNzUtNDMxNS1iMTMyLWQ1YTU5YTJhOWJhNiIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9hYm9ydCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwaUxpc3QvT2F1dGhBdXRob3JpemUiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFENFk5eXNuRXcwNDlPVEE0cWgwMzlDUzRNZTBEN2VBQThwd08lMkJ1cGRtc213QUFBQUFPZ0FBQUFBSUFBQ0FBQUFDOGlFNXNUJTJCaXRTYzR6S1dxTUZ2VEZIbGN4T3hGMEV6RDdKcEREb0olMkZYc3pBQUFBQWEzbEFLWFNCT1VDNFlwTXFjVE8yVXN1d3B5ZVlqdTkwZmxvV3ZUdFljOUJOUnRXcEFxQTdNJTJCbjFvMTh6dUhJTkFBQUFBTGFXdHE0bkduSVhSRDhPMTdQRTBzU2FyMzVaMnIlMkZBRTJnR21RQ2RSTnlkNXJuM1RTbjNGaVNZVmtZMDRKTW85cHJWTmtFWEN0TENTUnUlMkJnUkFYdllRJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUQ0WTl5c25FdzA0OU9UQTRxaDAzOUNTNE1lMEQ3ZUFBOHB3TyUyQnVwZG1zbXdBQUFBQU9nQUFBQUFJQUFDQUFBQUM4aUU1c1QlMkJpdFNjNHpLV3FNRnZURkhsY3hPeEYwRXpEN0pwRERvSiUyRlhzekFBQUFBYTNsQUtYU0JPVUM0WXBNcWNUTzJVc3V3cHllWWp1OTBmbG9XdlR0WWM5Qk5SdFdwQXFBN00lMkJuMW8xOHp1SElOQUFBQUFMYVd0cTRuR25JWFJEOE8xN1BFMHNTYXIzNVoyciUyRkFFMmdHbVFDZFJOeWQ1cm4zVFNuM0ZpU1lWa1kwNEpNbzlwclZOa0VYQ3RMQ1NSdSUyQmdSQVh2WVElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcGlMaXN0JTJGT2F1dGhBdXRob3JpemUiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBpTGlzdCUyRk9hdXRoQXV0aG9yaXplIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iOWQ2YzQ0ZTgtMjcxZi00ODM0LWE0MGUtMGY1NTFlYmNhMDU1IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL25lZ290aWF0ZSIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BY2NvdW50L0xvZ2luIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFjY291bnQlMkZMb2dpbiIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBY2NvdW50JTJGTG9naW4iIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNsaWVudFByb3RvY29sIiBWYWx1ZT0iMS4zIiBSZWNvcmRlZFZhbHVlPSIxLjMiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQwOTI2MSIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQwOTI2MSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSJmOGU2OTQ4NC01M2I3LTQ1NGItYjY2OC0wMDRiOWQzYzVlYzUiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvY29ubmVjdCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BY2NvdW50L0xvZ2luIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQkh4c3pqNlhYOE1Gak95OW9NbjE3QjNjOXZMbGRlZnlwJTJCTldjY2VKSEhmQUFBQUFBT2dBQUFBQUlBQUNBQUFBQjZSMm9ZSW8wTlJwb2oyWmM4OU5SSk5Sb1pVYkx2bDc5dk1ubm9FR3dLZ2pBQUFBQ1A5a2Q3T28zdDRvUEhYZUV2UTBnT0lSS1QlMkIlMkZxMjZBd0s3bklXUG9YJTJGb0ZEUGhSZCUyQmNxczlsQnlIeGtYcFo0bEFBQUFBNjFNN3clMkIlMkJFSFVNNUYlMkZCOHhwNEZFT0RWNnd0TTJJeEFaaUF5Z2l5RERDcUdBTUh1MGNiSVYwRndoQVN2R1hxcVlaYXc0QmRnMkFxZU9GTVdON2YxaEElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQkh4c3pqNlhYOE1Gak95OW9NbjE3QjNjOXZMbGRlZnlwJTJCTldjY2VKSEhmQUFBQUFBT2dBQUFBQUlBQUNBQUFBQjZSMm9ZSW8wTlJwb2oyWmM4OU5SSk5Sb1pVYkx2bDc5dk1ubm9FR3dLZ2pBQUFBQ1A5a2Q3T28zdDRvUEhYZUV2UTBnT0lSS1QlMkIlMkZxMjZBd0s3bklXUG9YJTJGb0ZEUGhSZCUyQmNxczlsQnlIeGtYcFo0bEFBQUFBNjFNN3clMkIlMkJFSFVNNUYlMkZCOHhwNEZFT0RWNnd0TTJJeEFaaUF5Z2l5RERDcUdBTUh1MGNiSVYwRndoQVN2R1hxcVlaYXc0QmRnMkFxZU9GTVdON2YxaEElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBY2NvdW50JTJGTG9naW4iIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQWNjb3VudCUyRkxvZ2luIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSIxMCIgUmVjb3JkZWRWYWx1ZT0iMTAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQwOTYwMCIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQwOTYwMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSJkYWZjYmQ2ZS03Yzg1LTQ3YjktOTVjYi04NzQ4NjIyMmRkMDgiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvc2VuZCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FjY291bnQvTG9naW4iIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFCSHhzemo2WFg4TUZqT3k5b01uMTdCM2M5dkxsZGVmeXAlMkJOV2NjZUpISGZBQUFBQUFPZ0FBQUFBSUFBQ0FBQUFCNlIyb1lJbzBOUnBvajJaYzg5TlJKTlJvWlViTHZsNzl2TW5ub0VHd0tnakFBQUFDUDlrZDdPbzN0NG9QSFhlRXZRMGdPSVJLVCUyQiUyRnEyNkF3SzduSVdQb1glMkZvRkRQaFJkJTJCY3FzOWxCeUh4a1hwWjRsQUFBQUE2MU03dyUyQiUyQkVIVU01RiUyRkI4eHA0RkVPRFY2d3RNMkl4QVppQXlnaXlERENxR0FNSHUwY2JJVjBGd2hBU3ZHWHFxWVphdzRCZGcyQXFlT0ZNV043ZjFoQSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFCSHhzemo2WFg4TUZqT3k5b01uMTdCM2M5dkxsZGVmeXAlMkJOV2NjZUpISGZBQUFBQUFPZ0FBQUFBSUFBQ0FBQUFCNlIyb1lJbzBOUnBvajJaYzg5TlJKTlJvWlViTHZsNzl2TW5ub0VHd0tnakFBQUFDUDlrZDdPbzN0NG9QSFhlRXZRMGdPSVJLVCUyQiUyRnEyNkF3SzduSVdQb1glMkZvRkRQaFJkJTJCY3FzOWxCeUh4a1hwWjRsQUFBQUE2MU03dyUyQiUyQkVIVU01RiUyRkI4eHA0RkVPRFY2d3RNMkl4QVppQXlnaXlERENxR0FNSHUwY2JJVjBGd2hBU3ZHWHFxWVphdzRCZGcyQXFlT0ZNV043ZjFoQSUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFjY291bnQlMkZMb2dpbiIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBY2NvdW50JTJGTG9naW4iIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHk+DQogICAgICAgIDxGb3JtUG9zdFBhcmFtZXRlciBOYW1lPSJkYXRhIiBWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7TWljcm9zb2Z0LlZpc3VhbFN0dWRpby5XZWIuQnJvd3NlckxpbmsuQ29yZUV4dGVuc2lvbkZhY3RvcnkuY29ubmVjdGVkJnF1b3Q7LCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6MX0iIFJlY29yZGVkVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O01pY3Jvc29mdC5WaXN1YWxTdHVkaW8uV2ViLkJyb3dzZXJMaW5rLkNvcmVFeHRlbnNpb25GYWN0b3J5LmNvbm5lY3RlZCZxdW90OywmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjF9IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJUcnVlIiAvPg0KICAgICAgPC9Gb3JtUG9zdEh0dHBCb2R5Pg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjAxNmJlNjBkLTRmNTMtNGM2ZS1iOWY2LWE0OWNiNDE5OGVlMCIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9wb2xsIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FjY291bnQvTG9naW4iIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFCSHhzemo2WFg4TUZqT3k5b01uMTdCM2M5dkxsZGVmeXAlMkJOV2NjZUpISGZBQUFBQUFPZ0FBQUFBSUFBQ0FBQUFCNlIyb1lJbzBOUnBvajJaYzg5TlJKTlJvWlViTHZsNzl2TW5ub0VHd0tnakFBQUFDUDlrZDdPbzN0NG9QSFhlRXZRMGdPSVJLVCUyQiUyRnEyNkF3SzduSVdQb1glMkZvRkRQaFJkJTJCY3FzOWxCeUh4a1hwWjRsQUFBQUE2MU03dyUyQiUyQkVIVU01RiUyRkI4eHA0RkVPRFY2d3RNMkl4QVppQXlnaXlERENxR0FNSHUwY2JJVjBGd2hBU3ZHWHFxWVphdzRCZGcyQXFlT0ZNV043ZjFoQSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFCSHhzemo2WFg4TUZqT3k5b01uMTdCM2M5dkxsZGVmeXAlMkJOV2NjZUpISGZBQUFBQUFPZ0FBQUFBSUFBQ0FBQUFCNlIyb1lJbzBOUnBvajJaYzg5TlJKTlJvWlViTHZsNzl2TW5ub0VHd0tnakFBQUFDUDlrZDdPbzN0NG9QSFhlRXZRMGdPSVJLVCUyQiUyRnEyNkF3SzduSVdQb1glMkZvRkRQaFJkJTJCY3FzOWxCeUh4a1hwWjRsQUFBQUE2MU03dyUyQiUyQkVIVU01RiUyRkI4eHA0RkVPRFY2d3RNMkl4QVppQXlnaXlERENxR0FNSHUwY2JJVjBGd2hBU3ZHWHFxWVphdzRCZGcyQXFlT0ZNV043ZjFoQSUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Im1lc3NhZ2VJZCIgVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQk8lMkMxJTdDQlAlMkMwIiBSZWNvcmRlZFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JPJTJDMSU3Q0JQJTJDMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFjY291bnQlMkZMb2dpbiIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBY2NvdW50JTJGTG9naW4iIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRpZCIgVmFsdWU9IjUiIFJlY29yZGVkVmFsdWU9IjUiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQwOTYyMCIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQwOTYyMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSI0YWI4NWI5Yi0xYzBjLTRhODYtYTVjZS1kMzk4ZTZiNmQ2ZWUiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvc2VuZCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FjY291bnQvTG9naW4iIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFCSHhzemo2WFg4TUZqT3k5b01uMTdCM2M5dkxsZGVmeXAlMkJOV2NjZUpISGZBQUFBQUFPZ0FBQUFBSUFBQ0FBQUFCNlIyb1lJbzBOUnBvajJaYzg5TlJKTlJvWlViTHZsNzl2TW5ub0VHd0tnakFBQUFDUDlrZDdPbzN0NG9QSFhlRXZRMGdPSVJLVCUyQiUyRnEyNkF3SzduSVdQb1glMkZvRkRQaFJkJTJCY3FzOWxCeUh4a1hwWjRsQUFBQUE2MU03dyUyQiUyQkVIVU01RiUyRkI4eHA0RkVPRFY2d3RNMkl4QVppQXlnaXlERENxR0FNSHUwY2JJVjBGd2hBU3ZHWHFxWVphdzRCZGcyQXFlT0ZNV043ZjFoQSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFCSHhzemo2WFg4TUZqT3k5b01uMTdCM2M5dkxsZGVmeXAlMkJOV2NjZUpISGZBQUFBQUFPZ0FBQUFBSUFBQ0FBQUFCNlIyb1lJbzBOUnBvajJaYzg5TlJKTlJvWlViTHZsNzl2TW5ub0VHd0tnakFBQUFDUDlrZDdPbzN0NG9QSFhlRXZRMGdPSVJLVCUyQiUyRnEyNkF3SzduSVdQb1glMkZvRkRQaFJkJTJCY3FzOWxCeUh4a1hwWjRsQUFBQUE2MU03dyUyQiUyQkVIVU01RiUyRkI4eHA0RkVPRFY2d3RNMkl4QVppQXlnaXlERENxR0FNSHUwY2JJVjBGd2hBU3ZHWHFxWVphdzRCZGcyQXFlT0ZNV043ZjFoQSUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFjY291bnQlMkZMb2dpbiIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBY2NvdW50JTJGTG9naW4iIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHk+DQogICAgICAgIDxGb3JtUG9zdFBhcmFtZXRlciBOYW1lPSJkYXRhIiBWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7bWljcm9zb2Z0LnZpc3VhbHN0dWRpby53ZWIuYnJvd3NlcmxpbmsuaHRtbG1hcHBpbmdleHRlbnNpb25mYWN0b3J5LnJlc29sdmVVcmwmcXVvdDssJnF1b3Q7YXJncyZxdW90OzpbJnF1b3Q7fi9fX2Jyb3dzZXJMaW5rL3JlcXVlc3REYXRhLzU3YTJlY2FlMDYyZjRmMjE4NTUwNTcyODc5ZDg2MTZmJnF1b3Q7XSwmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjJ9IiBSZWNvcmRlZFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDttaWNyb3NvZnQudmlzdWFsc3R1ZGlvLndlYi5icm93c2VybGluay5odG1sbWFwcGluZ2V4dGVuc2lvbmZhY3RvcnkucmVzb2x2ZVVybCZxdW90OywmcXVvdDthcmdzJnF1b3Q7OlsmcXVvdDt+L19fYnJvd3NlckxpbmsvcmVxdWVzdERhdGEvNTdhMmVjYWUwNjJmNGYyMTg1NTA1NzI4NzlkODYxNmYmcXVvdDtdLCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6Mn0iIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IlRydWUiIC8+DQogICAgICA8L0Zvcm1Qb3N0SHR0cEJvZHk+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iZWQ0YTBiOWYtMTdjYS00ZjUyLWJlNWItZjdlNjU3ZTQyOTBkIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3BvbGwiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQ29udGVudC1UeXBlIiBWYWx1ZT0iYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQWNjb3VudC9Mb2dpbiIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUJIeHN6ajZYWDhNRmpPeTlvTW4xN0IzYzl2TGxkZWZ5cCUyQk5XY2NlSkhIZkFBQUFBQU9nQUFBQUFJQUFDQUFBQUI2UjJvWUlvME5ScG9qMlpjODlOUkpOUm9aVWJMdmw3OXZNbm5vRUd3S2dqQUFBQUNQOWtkN09vM3Q0b1BIWGVFdlEwZ09JUktUJTJCJTJGcTI2QXdLN25JV1BvWCUyRm9GRFBoUmQlMkJjcXM5bEJ5SHhrWHBaNGxBQUFBQTYxTTd3JTJCJTJCRUhVTTVGJTJGQjh4cDRGRU9EVjZ3dE0ySXhBWmlBeWdpeUREQ3FHQU1IdTBjYklWMEZ3aEFTdkdYcXFZWmF3NEJkZzJBcWVPRk1XTjdmMWhBJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUJIeHN6ajZYWDhNRmpPeTlvTW4xN0IzYzl2TGxkZWZ5cCUyQk5XY2NlSkhIZkFBQUFBQU9nQUFBQUFJQUFDQUFBQUI2UjJvWUlvME5ScG9qMlpjODlOUkpOUm9aVWJMdmw3OXZNbm5vRUd3S2dqQUFBQUNQOWtkN09vM3Q0b1BIWGVFdlEwZ09JUktUJTJCJTJGcTI2QXdLN25JV1BvWCUyRm9GRFBoUmQlMkJjcXM5bEJ5SHhrWHBaNGxBQUFBQTYxTTd3JTJCJTJCRUhVTTVGJTJGQjh4cDRGRU9EVjZ3dE0ySXhBWmlBeWdpeUREQ3FHQU1IdTBjYklWMEZ3aEFTdkdYcXFZWmF3NEJkZzJBcWVPRk1XTjdmMWhBJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0ibWVzc2FnZUlkIiBWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCTyUyQzIlN0NCUCUyQzAiIFJlY29yZGVkVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQk8lMkMyJTdDQlAlMkMwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQWNjb3VudCUyRkxvZ2luIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFjY291bnQlMkZMb2dpbiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idGlkIiBWYWx1ZT0iMTAiIFJlY29yZGVkVmFsdWU9IjEwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0MDk4MzYiIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0MDk4MzYiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iR0VUIiBHdWlkPSIyNDM5NjZlMS03ODQ4LTQ4ODAtYmIwNS1mNDlhN2FkZDllMGIiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvX19icm93c2VyTGluay9yZXF1ZXN0RGF0YS81N2EyZWNhZTA2MmY0ZjIxODU1MDU3Mjg3OWQ4NjE2ZiIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQsICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlgtUmVxdWVzdGVkLVdpdGgiIFZhbHVlPSJYTUxIdHRwUmVxdWVzdCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FjY291bnQvTG9naW4iIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iYjYyZjY0NTktMGYyZS00OWU1LThiZTctMzk0ZTcxODUyZTM2IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3BvbGwiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQ29udGVudC1UeXBlIiBWYWx1ZT0iYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQWNjb3VudC9Mb2dpbiIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUJIeHN6ajZYWDhNRmpPeTlvTW4xN0IzYzl2TGxkZWZ5cCUyQk5XY2NlSkhIZkFBQUFBQU9nQUFBQUFJQUFDQUFBQUI2UjJvWUlvME5ScG9qMlpjODlOUkpOUm9aVWJMdmw3OXZNbm5vRUd3S2dqQUFBQUNQOWtkN09vM3Q0b1BIWGVFdlEwZ09JUktUJTJCJTJGcTI2QXdLN25JV1BvWCUyRm9GRFBoUmQlMkJjcXM5bEJ5SHhrWHBaNGxBQUFBQTYxTTd3JTJCJTJCRUhVTTVGJTJGQjh4cDRGRU9EVjZ3dE0ySXhBWmlBeWdpeUREQ3FHQU1IdTBjYklWMEZ3aEFTdkdYcXFZWmF3NEJkZzJBcWVPRk1XTjdmMWhBJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUJIeHN6ajZYWDhNRmpPeTlvTW4xN0IzYzl2TGxkZWZ5cCUyQk5XY2NlSkhIZkFBQUFBQU9nQUFBQUFJQUFDQUFBQUI2UjJvWUlvME5ScG9qMlpjODlOUkpOUm9aVWJMdmw3OXZNbm5vRUd3S2dqQUFBQUNQOWtkN09vM3Q0b1BIWGVFdlEwZ09JUktUJTJCJTJGcTI2QXdLN25JV1BvWCUyRm9GRFBoUmQlMkJjcXM5bEJ5SHhrWHBaNGxBQUFBQTYxTTd3JTJCJTJCRUhVTTVGJTJGQjh4cDRGRU9EVjZ3dE0ySXhBWmlBeWdpeUREQ3FHQU1IdTBjYklWMEZ3aEFTdkdYcXFZWmF3NEJkZzJBcWVPRk1XTjdmMWhBJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0ibWVzc2FnZUlkIiBWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCTyUyQzMlN0NCUCUyQzAiIFJlY29yZGVkVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQk8lMkMzJTdDQlAlMkMwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQWNjb3VudCUyRkxvZ2luIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFjY291bnQlMkZMb2dpbiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idGlkIiBWYWx1ZT0iMiIgUmVjb3JkZWRWYWx1ZT0iMiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Il8iIFZhbHVlPSIxMzk3NjMxNDEwMTM2IiBSZWNvcmRlZFZhbHVlPSIxMzk3NjMxNDEwMTM2IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keSAvPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9ImViMmIyMzcxLTdlMjgtNGE0OC1hYzQ5LWVlMWNkMTYxYTI1NSIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9zZW5kIiBUaGlua1RpbWU9IjUiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQWNjb3VudC9Mb2dpbiIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUJIeHN6ajZYWDhNRmpPeTlvTW4xN0IzYzl2TGxkZWZ5cCUyQk5XY2NlSkhIZkFBQUFBQU9nQUFBQUFJQUFDQUFBQUI2UjJvWUlvME5ScG9qMlpjODlOUkpOUm9aVWJMdmw3OXZNbm5vRUd3S2dqQUFBQUNQOWtkN09vM3Q0b1BIWGVFdlEwZ09JUktUJTJCJTJGcTI2QXdLN25JV1BvWCUyRm9GRFBoUmQlMkJjcXM5bEJ5SHhrWHBaNGxBQUFBQTYxTTd3JTJCJTJCRUhVTTVGJTJGQjh4cDRGRU9EVjZ3dE0ySXhBWmlBeWdpeUREQ3FHQU1IdTBjYklWMEZ3aEFTdkdYcXFZWmF3NEJkZzJBcWVPRk1XTjdmMWhBJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUJIeHN6ajZYWDhNRmpPeTlvTW4xN0IzYzl2TGxkZWZ5cCUyQk5XY2NlSkhIZkFBQUFBQU9nQUFBQUFJQUFDQUFBQUI2UjJvWUlvME5ScG9qMlpjODlOUkpOUm9aVWJMdmw3OXZNbm5vRUd3S2dqQUFBQUNQOWtkN09vM3Q0b1BIWGVFdlEwZ09JUktUJTJCJTJGcTI2QXdLN25JV1BvWCUyRm9GRFBoUmQlMkJjcXM5bEJ5SHhrWHBaNGxBQUFBQTYxTTd3JTJCJTJCRUhVTTVGJTJGQjh4cDRGRU9EVjZ3dE0ySXhBWmlBeWdpeUREQ3FHQU1IdTBjYklWMEZ3aEFTdkdYcXFZWmF3NEJkZzJBcWVPRk1XTjdmMWhBJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQWNjb3VudCUyRkxvZ2luIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFjY291bnQlMkZMb2dpbiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keT4NCiAgICAgICAgPEZvcm1Qb3N0UGFyYW1ldGVyIE5hbWU9ImRhdGEiIFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDttaWNyb3NvZnQudmlzdWFsc3R1ZGlvLndlYi5icm93c2VybGluay5odG1sbWFwcGluZ2V4dGVuc2lvbmZhY3RvcnkucmVzb2x2ZVNvdXJjZUZpbGVQYXRocyZxdW90OywmcXVvdDthcmdzJnF1b3Q7OltbJnF1b3Q7fi9WaWV3cy9BY2NvdW50L0xvZ2luLmNzaHRtbCZxdW90O11dLCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6M30iIFJlY29yZGVkVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O21pY3Jvc29mdC52aXN1YWxzdHVkaW8ud2ViLmJyb3dzZXJsaW5rLmh0bWxtYXBwaW5nZXh0ZW5zaW9uZmFjdG9yeS5yZXNvbHZlU291cmNlRmlsZVBhdGhzJnF1b3Q7LCZxdW90O2FyZ3MmcXVvdDs6W1smcXVvdDt+L1ZpZXdzL0FjY291bnQvTG9naW4uY3NodG1sJnF1b3Q7XV0sJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzozfSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iVHJ1ZSIgLz4NCiAgICAgIDwvRm9ybVBvc3RIdHRwQm9keT4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSI4MjNjMTg5ZS03ZTUxLTRiOTctYWI5OC1iYTMwMmRiMTdhY2QiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQWNjb3VudC9Mb2dpbiIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8RGVwZW5kZW50UmVxdWVzdHM+DQogICAgICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iMjhlMjMwMWItZDYyMS00NDk3LWJlNjItYTk3MGEyMjc4Y2Q1IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL2Fib3J0IiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgICAgICA8SGVhZGVycz4NCiAgICAgICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQWNjb3VudC9Mb2dpbiIgLz4NCiAgICAgICAgICA8L0hlYWRlcnM+DQogICAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFCSHhzemo2WFg4TUZqT3k5b01uMTdCM2M5dkxsZGVmeXAlMkJOV2NjZUpISGZBQUFBQUFPZ0FBQUFBSUFBQ0FBQUFCNlIyb1lJbzBOUnBvajJaYzg5TlJKTlJvWlViTHZsNzl2TW5ub0VHd0tnakFBQUFDUDlrZDdPbzN0NG9QSFhlRXZRMGdPSVJLVCUyQiUyRnEyNkF3SzduSVdQb1glMkZvRkRQaFJkJTJCY3FzOWxCeUh4a1hwWjRsQUFBQUE2MU03dyUyQiUyQkVIVU01RiUyRkI4eHA0RkVPRFY2d3RNMkl4QVppQXlnaXlERENxR0FNSHUwY2JJVjBGd2hBU3ZHWHFxWVphdzRCZGcyQXFlT0ZNV043ZjFoQSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFCSHhzemo2WFg4TUZqT3k5b01uMTdCM2M5dkxsZGVmeXAlMkJOV2NjZUpISGZBQUFBQUFPZ0FBQUFBSUFBQ0FBQUFCNlIyb1lJbzBOUnBvajJaYzg5TlJKTlJvWlViTHZsNzl2TW5ub0VHd0tnakFBQUFDUDlrZDdPbzN0NG9QSFhlRXZRMGdPSVJLVCUyQiUyRnEyNkF3SzduSVdQb1glMkZvRkRQaFJkJTJCY3FzOWxCeUh4a1hwWjRsQUFBQUE2MU03dyUyQiUyQkVIVU01RiUyRkI4eHA0RkVPRFY2d3RNMkl4QVppQXlnaXlERENxR0FNSHUwY2JJVjBGd2hBU3ZHWHFxWVphdzRCZGcyQXFlT0ZNV043ZjFoQSUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBY2NvdW50JTJGTG9naW4iIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQWNjb3VudCUyRkxvZ2luIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgICAgIDwvUmVxdWVzdD4NCiAgICAgIDwvRGVwZW5kZW50UmVxdWVzdHM+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FjY291bnQvTG9naW4iIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8RXh0cmFjdGlvblJ1bGVzPg0KICAgICAgICA8RXh0cmFjdGlvblJ1bGUgQ2xhc3NuYW1lPSJNaWNyb3NvZnQuVmlzdWFsU3R1ZGlvLlRlc3RUb29scy5XZWJUZXN0aW5nLlJ1bGVzLkV4dHJhY3RIaWRkZW5GaWVsZHMsIE1pY3Jvc29mdC5WaXN1YWxTdHVkaW8uUXVhbGl0eVRvb2xzLldlYlRlc3RGcmFtZXdvcmssIFZlcnNpb249MTAuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYSIgVmFyaWFibGVOYW1lPSIxIiBEaXNwbGF5TmFtZT0i5o+Q5Y+W6ZqQ6JeP55qE5a2X5q61IiBEZXNjcmlwdGlvbj0i5LuO5ZON5bqU5Lit5o+Q5Y+W5omA5pyJ6ZqQ6JeP55qE5a2X5q6177yM5bm25bCG6L+Z5Lqb5a2X5q615pS+5YWl5rWL6K+V5LiK5LiL5paH5Lit44CCIj4NCiAgICAgICAgICA8UnVsZVBhcmFtZXRlcnM+DQogICAgICAgICAgICA8UnVsZVBhcmFtZXRlciBOYW1lPSJSZXF1aXJlZCIgVmFsdWU9IlRydWUiIC8+DQogICAgICAgICAgICA8UnVsZVBhcmFtZXRlciBOYW1lPSJIdG1sRGVjb2RlIiBWYWx1ZT0iVHJ1ZSIgLz4NCiAgICAgICAgICA8L1J1bGVQYXJhbWV0ZXJzPg0KICAgICAgICA8L0V4dHJhY3Rpb25SdWxlPg0KICAgICAgPC9FeHRyYWN0aW9uUnVsZXM+DQogICAgICA8Q29ycmVsYXRpb25FeHRyYWN0aW9uUnVsZXM+DQogICAgICAgIDxFeHRyYWN0aW9uUnVsZSBDbGFzc25hbWU9Ik1pY3Jvc29mdC5WaXN1YWxTdHVkaW8uVGVzdFRvb2xzLldlYlRlc3RpbmcuUnVsZXMuRXh0cmFjdEZvcm1GaWVsZCwgTWljcm9zb2Z0LlZpc3VhbFN0dWRpby5RdWFsaXR5VG9vbHMuV2ViVGVzdEZyYW1ld29yaywgVmVyc2lvbj0xMC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iMDNmNWY3ZjExZDUwYTNhIiBWYXJpYWJsZU5hbWU9IkZvcm1Qb3N0UGFyYW0xLlVzZXJJZCIgRGlzcGxheU5hbWU9IiIgRGVzY3JpcHRpb249IiI+DQogICAgICAgICAgPFJ1bGVQYXJhbWV0ZXJzPg0KICAgICAgICAgICAgPFJ1bGVQYXJhbWV0ZXIgTmFtZT0iTmFtZSIgVmFsdWU9IlVzZXJJZCIgLz4NCiAgICAgICAgICAgIDxSdWxlUGFyYW1ldGVyIE5hbWU9Ikh0bWxEZWNvZGUiIFZhbHVlPSJUcnVlIiAvPg0KICAgICAgICAgICAgPFJ1bGVQYXJhbWV0ZXIgTmFtZT0iUmVxdWlyZWQiIFZhbHVlPSJGYWxzZSIgLz4NCiAgICAgICAgICAgIDxSdWxlUGFyYW1ldGVyIE5hbWU9IkluZGV4IiBWYWx1ZT0iMCIgLz4NCiAgICAgICAgICA8L1J1bGVQYXJhbWV0ZXJzPg0KICAgICAgICA8L0V4dHJhY3Rpb25SdWxlPg0KICAgICAgPC9Db3JyZWxhdGlvbkV4dHJhY3Rpb25SdWxlcz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5Pg0KICAgICAgICA8Rm9ybVBvc3RQYXJhbWV0ZXIgTmFtZT0iVXNlcklkIiBWYWx1ZT0iMTAxMDIxMDI1MyIgUmVjb3JkZWRWYWx1ZT0iMTAxMDIxMDI1MyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iVHJ1ZSIgLz4NCiAgICAgICAgPEZvcm1Qb3N0UGFyYW1ldGVyIE5hbWU9IlBhc3N3b3JkIiBWYWx1ZT0iMTAxMDIxMzAyNTMiIFJlY29yZGVkVmFsdWU9IjEwMTAyMTMwMjUzIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJUcnVlIiAvPg0KICAgICAgICA8Rm9ybVBvc3RQYXJhbWV0ZXIgTmFtZT0iQXV0b0xvZ2luIiBWYWx1ZT0ie3skSElEREVOMS5BdXRvTG9naW59fSIgUmVjb3JkZWRWYWx1ZT0iZmFsc2UiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IlRydWUiIC8+DQogICAgICA8L0Zvcm1Qb3N0SHR0cEJvZHk+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iNDA4MGQzMTQtODk0ZC00ZDM4LTk1NjgtZjU5MzgwYzhlYzA4IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL25lZ290aWF0ZSIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BY2NvdW50L0xvZ2luIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFjY291bnQlMkZMb2dpbiIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBY2NvdW50JTJGTG9naW4iIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNsaWVudFByb3RvY29sIiBWYWx1ZT0iMS4zIiBSZWNvcmRlZFZhbHVlPSIxLjMiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQxNjE2MyIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQxNjE2MyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSI0N2M3MTU3Ny0yMzQwLTRiZTYtODcxNi1lZjRmZmY3NGQ3NzMiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvY29ubmVjdCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BY2NvdW50L0xvZ2luIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQW50RUpuOUJpcTcwWlBycEk3WDM0ekZETVdDRnVWJTJCTE1xVHJOWXBRaDVrd0FBQUFBT2dBQUFBQUlBQUNBQUFBQWRkbFRHSGFNUnRLUkN2eGtWNTklMkZHSWhFSXBrM2pUQXluWkFabEsyREljREFBQUFBd25KelkzY3JDN2lLM3ZrV3pOVHA4UnJ1eFFRM0NjTzZHUk5ldkdmVnpNWCUyQmxScWVBZFBsa3hSODFTMnNUVjB4QUFBQUElMkIlMkJOTDlyczVkUzhLaFlmUWx0eXphbSUyRmVheWtVVnk3Y005d0dIT3BmYVljc3NSeDkyTDhjckxNbjJtejZGT09QMVVkYWNPaWVHWUpzVjhwV0NlemgwZyUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBbnRFSm45QmlxNzBaUHJwSTdYMzR6RkRNV0NGdVYlMkJMTXFUck5ZcFFoNWt3QUFBQUFPZ0FBQUFBSUFBQ0FBQUFBZGRsVEdIYU1SdEtSQ3Z4a1Y1OSUyRkdJaEVJcGszalRBeW5aQVpsSzJESWNEQUFBQUF3bkp6WTNjckM3aUszdmtXek5UcDhScnV4UVEzQ2NPNkdSTmV2R2ZWek1YJTJCbFJxZUFkUGxreFI4MVMyc1RWMHhBQUFBQSUyQiUyQk5MOXJzNWRTOEtoWWZRbHR5emFtJTJGZWF5a1VWeTdjTTl3R0hPcGZhWWNzc1J4OTJMOGNyTE1uMm16NkZPT1AxVWRhY09pZUdZSnNWOHBXQ2V6aDBnJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQWNjb3VudCUyRkxvZ2luIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFjY291bnQlMkZMb2dpbiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idGlkIiBWYWx1ZT0iMyIgUmVjb3JkZWRWYWx1ZT0iMyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Il8iIFZhbHVlPSIxMzk3NjMxNDE2NTM0IiBSZWNvcmRlZFZhbHVlPSIxMzk3NjMxNDE2NTM0IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keSAvPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9Ijk5ODY5OTIyLWVlZWQtNDlkMC04YjlkLWUzNTE3OWZmZGU4OSIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9zZW5kIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQWNjb3VudC9Mb2dpbiIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFudEVKbjlCaXE3MFpQcnBJN1gzNHpGRE1XQ0Z1ViUyQkxNcVRyTllwUWg1a3dBQUFBQU9nQUFBQUFJQUFDQUFBQUFkZGxUR0hhTVJ0S1JDdnhrVjU5JTJGR0loRUlwazNqVEF5blpBWmxLMkRJY0RBQUFBQXduSnpZM2NyQzdpSzN2a1d6TlRwOFJydXhRUTNDY082R1JOZXZHZlZ6TVglMkJsUnFlQWRQbGt4UjgxUzJzVFYweEFBQUFBJTJCJTJCTkw5cnM1ZFM4S2hZZlFsdHl6YW0lMkZlYXlrVVZ5N2NNOXdHSE9wZmFZY3NzUng5Mkw4Y3JMTW4ybXo2Rk9PUDFVZGFjT2llR1lKc1Y4cFdDZXpoMGclM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQW50RUpuOUJpcTcwWlBycEk3WDM0ekZETVdDRnVWJTJCTE1xVHJOWXBRaDVrd0FBQUFBT2dBQUFBQUlBQUNBQUFBQWRkbFRHSGFNUnRLUkN2eGtWNTklMkZHSWhFSXBrM2pUQXluWkFabEsyREljREFBQUFBd25KelkzY3JDN2lLM3ZrV3pOVHA4UnJ1eFFRM0NjTzZHUk5ldkdmVnpNWCUyQmxScWVBZFBsa3hSODFTMnNUVjB4QUFBQUElMkIlMkJOTDlyczVkUzhLaFlmUWx0eXphbSUyRmVheWtVVnk3Y005d0dIT3BmYVljc3NSeDkyTDhjckxNbjJtejZGT09QMVVkYWNPaWVHWUpzVjhwV0NlemgwZyUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFjY291bnQlMkZMb2dpbiIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBY2NvdW50JTJGTG9naW4iIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHk+DQogICAgICAgIDxGb3JtUG9zdFBhcmFtZXRlciBOYW1lPSJkYXRhIiBWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7TWljcm9zb2Z0LlZpc3VhbFN0dWRpby5XZWIuQnJvd3NlckxpbmsuQ29yZUV4dGVuc2lvbkZhY3RvcnkuY29ubmVjdGVkJnF1b3Q7LCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6MX0iIFJlY29yZGVkVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O01pY3Jvc29mdC5WaXN1YWxTdHVkaW8uV2ViLkJyb3dzZXJMaW5rLkNvcmVFeHRlbnNpb25GYWN0b3J5LmNvbm5lY3RlZCZxdW90OywmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjF9IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJUcnVlIiAvPg0KICAgICAgPC9Gb3JtUG9zdEh0dHBCb2R5Pg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9Ijg2NjUxMzYzLWZjZjQtNDhlMi1iMDVmLWQ4YjQ5M2U2NWNjNSIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9wb2xsIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FjY291bnQvTG9naW4iIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBbnRFSm45QmlxNzBaUHJwSTdYMzR6RkRNV0NGdVYlMkJMTXFUck5ZcFFoNWt3QUFBQUFPZ0FBQUFBSUFBQ0FBQUFBZGRsVEdIYU1SdEtSQ3Z4a1Y1OSUyRkdJaEVJcGszalRBeW5aQVpsSzJESWNEQUFBQUF3bkp6WTNjckM3aUszdmtXek5UcDhScnV4UVEzQ2NPNkdSTmV2R2ZWek1YJTJCbFJxZUFkUGxreFI4MVMyc1RWMHhBQUFBQSUyQiUyQk5MOXJzNWRTOEtoWWZRbHR5emFtJTJGZWF5a1VWeTdjTTl3R0hPcGZhWWNzc1J4OTJMOGNyTE1uMm16NkZPT1AxVWRhY09pZUdZSnNWOHBXQ2V6aDBnJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFudEVKbjlCaXE3MFpQcnBJN1gzNHpGRE1XQ0Z1ViUyQkxNcVRyTllwUWg1a3dBQUFBQU9nQUFBQUFJQUFDQUFBQUFkZGxUR0hhTVJ0S1JDdnhrVjU5JTJGR0loRUlwazNqVEF5blpBWmxLMkRJY0RBQUFBQXduSnpZM2NyQzdpSzN2a1d6TlRwOFJydXhRUTNDY082R1JOZXZHZlZ6TVglMkJsUnFlQWRQbGt4UjgxUzJzVFYweEFBQUFBJTJCJTJCTkw5cnM1ZFM4S2hZZlFsdHl6YW0lMkZlYXlrVVZ5N2NNOXdHSE9wZmFZY3NzUng5Mkw4Y3JMTW4ybXo2Rk9PUDFVZGFjT2llR1lKc1Y4cFdDZXpoMGclM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJtZXNzYWdlSWQiIFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JRJTJDMSU3Q0JSJTJDMCIgUmVjb3JkZWRWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCUSUyQzElN0NCUiUyQzAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBY2NvdW50JTJGTG9naW4iIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQWNjb3VudCUyRkxvZ2luIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSIyIiBSZWNvcmRlZFZhbHVlPSIyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0MTY1NDkiIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0MTY1NDkiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iYzk2ZDY2OTMtY2IzOC00NDNmLWFhN2QtMzdiMmQ0Y2U3NmU1IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3NlbmQiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BY2NvdW50L0xvZ2luIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQW50RUpuOUJpcTcwWlBycEk3WDM0ekZETVdDRnVWJTJCTE1xVHJOWXBRaDVrd0FBQUFBT2dBQUFBQUlBQUNBQUFBQWRkbFRHSGFNUnRLUkN2eGtWNTklMkZHSWhFSXBrM2pUQXluWkFabEsyREljREFBQUFBd25KelkzY3JDN2lLM3ZrV3pOVHA4UnJ1eFFRM0NjTzZHUk5ldkdmVnpNWCUyQmxScWVBZFBsa3hSODFTMnNUVjB4QUFBQUElMkIlMkJOTDlyczVkUzhLaFlmUWx0eXphbSUyRmVheWtVVnk3Y005d0dIT3BmYVljc3NSeDkyTDhjckxNbjJtejZGT09QMVVkYWNPaWVHWUpzVjhwV0NlemgwZyUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBbnRFSm45QmlxNzBaUHJwSTdYMzR6RkRNV0NGdVYlMkJMTXFUck5ZcFFoNWt3QUFBQUFPZ0FBQUFBSUFBQ0FBQUFBZGRsVEdIYU1SdEtSQ3Z4a1Y1OSUyRkdJaEVJcGszalRBeW5aQVpsSzJESWNEQUFBQUF3bkp6WTNjckM3aUszdmtXek5UcDhScnV4UVEzQ2NPNkdSTmV2R2ZWek1YJTJCbFJxZUFkUGxreFI4MVMyc1RWMHhBQUFBQSUyQiUyQk5MOXJzNWRTOEtoWWZRbHR5emFtJTJGZWF5a1VWeTdjTTl3R0hPcGZhWWNzc1J4OTJMOGNyTE1uMm16NkZPT1AxVWRhY09pZUdZSnNWOHBXQ2V6aDBnJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQWNjb3VudCUyRkxvZ2luIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFjY291bnQlMkZMb2dpbiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keT4NCiAgICAgICAgPEZvcm1Qb3N0UGFyYW1ldGVyIE5hbWU9ImRhdGEiIFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDttaWNyb3NvZnQudmlzdWFsc3R1ZGlvLndlYi5icm93c2VybGluay5odG1sbWFwcGluZ2V4dGVuc2lvbmZhY3RvcnkucmVzb2x2ZVVybCZxdW90OywmcXVvdDthcmdzJnF1b3Q7OlsmcXVvdDt+L19fYnJvd3NlckxpbmsvcmVxdWVzdERhdGEvZmIyYmI2NTg3YzY5NGM0MzkyNTY0YTExYzhlOTYxYTAmcXVvdDtdLCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6Mn0iIFJlY29yZGVkVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O21pY3Jvc29mdC52aXN1YWxzdHVkaW8ud2ViLmJyb3dzZXJsaW5rLmh0bWxtYXBwaW5nZXh0ZW5zaW9uZmFjdG9yeS5yZXNvbHZlVXJsJnF1b3Q7LCZxdW90O2FyZ3MmcXVvdDs6WyZxdW90O34vX19icm93c2VyTGluay9yZXF1ZXN0RGF0YS9mYjJiYjY1ODdjNjk0YzQzOTI1NjRhMTFjOGU5NjFhMCZxdW90O10sJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzoyfSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iVHJ1ZSIgLz4NCiAgICAgIDwvRm9ybVBvc3RIdHRwQm9keT4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSIzOWQzOWQ5NS02MTEyLTQwMDYtYTdhZi0yMDE3MzNiZmYzZDMiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvcG9sbCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BY2NvdW50L0xvZ2luIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQW50RUpuOUJpcTcwWlBycEk3WDM0ekZETVdDRnVWJTJCTE1xVHJOWXBRaDVrd0FBQUFBT2dBQUFBQUlBQUNBQUFBQWRkbFRHSGFNUnRLUkN2eGtWNTklMkZHSWhFSXBrM2pUQXluWkFabEsyREljREFBQUFBd25KelkzY3JDN2lLM3ZrV3pOVHA4UnJ1eFFRM0NjTzZHUk5ldkdmVnpNWCUyQmxScWVBZFBsa3hSODFTMnNUVjB4QUFBQUElMkIlMkJOTDlyczVkUzhLaFlmUWx0eXphbSUyRmVheWtVVnk3Y005d0dIT3BmYVljc3NSeDkyTDhjckxNbjJtejZGT09QMVVkYWNPaWVHWUpzVjhwV0NlemgwZyUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBbnRFSm45QmlxNzBaUHJwSTdYMzR6RkRNV0NGdVYlMkJMTXFUck5ZcFFoNWt3QUFBQUFPZ0FBQUFBSUFBQ0FBQUFBZGRsVEdIYU1SdEtSQ3Z4a1Y1OSUyRkdJaEVJcGszalRBeW5aQVpsSzJESWNEQUFBQUF3bkp6WTNjckM3aUszdmtXek5UcDhScnV4UVEzQ2NPNkdSTmV2R2ZWek1YJTJCbFJxZUFkUGxreFI4MVMyc1RWMHhBQUFBQSUyQiUyQk5MOXJzNWRTOEtoWWZRbHR5emFtJTJGZWF5a1VWeTdjTTl3R0hPcGZhWWNzc1J4OTJMOGNyTE1uMm16NkZPT1AxVWRhY09pZUdZSnNWOHBXQ2V6aDBnJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0ibWVzc2FnZUlkIiBWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCUSUyQzIlN0NCUiUyQzAiIFJlY29yZGVkVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQlElMkMyJTdDQlIlMkMwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQWNjb3VudCUyRkxvZ2luIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFjY291bnQlMkZMb2dpbiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idGlkIiBWYWx1ZT0iOSIgUmVjb3JkZWRWYWx1ZT0iOSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Il8iIFZhbHVlPSIxMzk3NjMxNDE2NjIyIiBSZWNvcmRlZFZhbHVlPSIxMzk3NjMxNDE2NjIyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keSAvPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IkdFVCIgR3VpZD0iYTc0NjA3ZTQtYzRjYy00MjgxLTg4ZGUtMzY3MGI5ODg2OGIwIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL19fYnJvd3NlckxpbmsvcmVxdWVzdERhdGEvZmIyYmI2NTg3YzY5NGM0MzkyNTY0YTExYzhlOTYxYTAiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0iYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJYLVJlcXVlc3RlZC1XaXRoIiBWYWx1ZT0iWE1MSHR0cFJlcXVlc3QiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BY2NvdW50L0xvZ2luIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9ImIxNWZhZTM2LTllOWUtNDM2NC05OTg3LWUwMmIwMGJkMDM0NCIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9wb2xsIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FjY291bnQvTG9naW4iIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBbnRFSm45QmlxNzBaUHJwSTdYMzR6RkRNV0NGdVYlMkJMTXFUck5ZcFFoNWt3QUFBQUFPZ0FBQUFBSUFBQ0FBQUFBZGRsVEdIYU1SdEtSQ3Z4a1Y1OSUyRkdJaEVJcGszalRBeW5aQVpsSzJESWNEQUFBQUF3bkp6WTNjckM3aUszdmtXek5UcDhScnV4UVEzQ2NPNkdSTmV2R2ZWek1YJTJCbFJxZUFkUGxreFI4MVMyc1RWMHhBQUFBQSUyQiUyQk5MOXJzNWRTOEtoWWZRbHR5emFtJTJGZWF5a1VWeTdjTTl3R0hPcGZhWWNzc1J4OTJMOGNyTE1uMm16NkZPT1AxVWRhY09pZUdZSnNWOHBXQ2V6aDBnJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFudEVKbjlCaXE3MFpQcnBJN1gzNHpGRE1XQ0Z1ViUyQkxNcVRyTllwUWg1a3dBQUFBQU9nQUFBQUFJQUFDQUFBQUFkZGxUR0hhTVJ0S1JDdnhrVjU5JTJGR0loRUlwazNqVEF5blpBWmxLMkRJY0RBQUFBQXduSnpZM2NyQzdpSzN2a1d6TlRwOFJydXhRUTNDY082R1JOZXZHZlZ6TVglMkJsUnFlQWRQbGt4UjgxUzJzVFYweEFBQUFBJTJCJTJCTkw5cnM1ZFM4S2hZZlFsdHl6YW0lMkZlYXlrVVZ5N2NNOXdHSE9wZmFZY3NzUng5Mkw4Y3JMTW4ybXo2Rk9PUDFVZGFjT2llR1lKc1Y4cFdDZXpoMGclM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJtZXNzYWdlSWQiIFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JRJTJDMyU3Q0JSJTJDMCIgUmVjb3JkZWRWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCUSUyQzMlN0NCUiUyQzAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBY2NvdW50JTJGTG9naW4iIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQWNjb3VudCUyRkxvZ2luIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSIzIiBSZWNvcmRlZFZhbHVlPSIzIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0MTY2NjgiIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0MTY2NjgiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iOWQxZGVmZmItNTI1OS00MWFlLWI1MWMtNDQyNjY5ZmVlNzJhIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3NlbmQiIFRoaW5rVGltZT0iNiIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BY2NvdW50L0xvZ2luIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQW50RUpuOUJpcTcwWlBycEk3WDM0ekZETVdDRnVWJTJCTE1xVHJOWXBRaDVrd0FBQUFBT2dBQUFBQUlBQUNBQUFBQWRkbFRHSGFNUnRLUkN2eGtWNTklMkZHSWhFSXBrM2pUQXluWkFabEsyREljREFBQUFBd25KelkzY3JDN2lLM3ZrV3pOVHA4UnJ1eFFRM0NjTzZHUk5ldkdmVnpNWCUyQmxScWVBZFBsa3hSODFTMnNUVjB4QUFBQUElMkIlMkJOTDlyczVkUzhLaFlmUWx0eXphbSUyRmVheWtVVnk3Y005d0dIT3BmYVljc3NSeDkyTDhjckxNbjJtejZGT09QMVVkYWNPaWVHWUpzVjhwV0NlemgwZyUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBbnRFSm45QmlxNzBaUHJwSTdYMzR6RkRNV0NGdVYlMkJMTXFUck5ZcFFoNWt3QUFBQUFPZ0FBQUFBSUFBQ0FBQUFBZGRsVEdIYU1SdEtSQ3Z4a1Y1OSUyRkdJaEVJcGszalRBeW5aQVpsSzJESWNEQUFBQUF3bkp6WTNjckM3aUszdmtXek5UcDhScnV4UVEzQ2NPNkdSTmV2R2ZWek1YJTJCbFJxZUFkUGxreFI4MVMyc1RWMHhBQUFBQSUyQiUyQk5MOXJzNWRTOEtoWWZRbHR5emFtJTJGZWF5a1VWeTdjTTl3R0hPcGZhWWNzc1J4OTJMOGNyTE1uMm16NkZPT1AxVWRhY09pZUdZSnNWOHBXQ2V6aDBnJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQWNjb3VudCUyRkxvZ2luIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFjY291bnQlMkZMb2dpbiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keT4NCiAgICAgICAgPEZvcm1Qb3N0UGFyYW1ldGVyIE5hbWU9ImRhdGEiIFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDttaWNyb3NvZnQudmlzdWFsc3R1ZGlvLndlYi5icm93c2VybGluay5odG1sbWFwcGluZ2V4dGVuc2lvbmZhY3RvcnkucmVzb2x2ZVNvdXJjZUZpbGVQYXRocyZxdW90OywmcXVvdDthcmdzJnF1b3Q7OltbJnF1b3Q7fi9WaWV3cy9BY2NvdW50L0xvZ2luLmNzaHRtbCZxdW90O11dLCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6M30iIFJlY29yZGVkVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O21pY3Jvc29mdC52aXN1YWxzdHVkaW8ud2ViLmJyb3dzZXJsaW5rLmh0bWxtYXBwaW5nZXh0ZW5zaW9uZmFjdG9yeS5yZXNvbHZlU291cmNlRmlsZVBhdGhzJnF1b3Q7LCZxdW90O2FyZ3MmcXVvdDs6W1smcXVvdDt+L1ZpZXdzL0FjY291bnQvTG9naW4uY3NodG1sJnF1b3Q7XV0sJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzozfSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iVHJ1ZSIgLz4NCiAgICAgIDwvRm9ybVBvc3RIdHRwQm9keT4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSJkZDA5ZjQ5Mi05M2U0LTQ4ZTUtOTc5Zi0wZWIwMzZhMjM5ZTkiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQWNjb3VudC9Mb2dpbiIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8RGVwZW5kZW50UmVxdWVzdHM+DQogICAgICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iMjVmNTZlMDUtM2FiYi00MWIxLThiMTctMjE2YzcwM2VmNTMzIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL2Fib3J0IiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgICAgICA8SGVhZGVycz4NCiAgICAgICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQWNjb3VudC9Mb2dpbiIgLz4NCiAgICAgICAgICA8L0hlYWRlcnM+DQogICAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBbnRFSm45QmlxNzBaUHJwSTdYMzR6RkRNV0NGdVYlMkJMTXFUck5ZcFFoNWt3QUFBQUFPZ0FBQUFBSUFBQ0FBQUFBZGRsVEdIYU1SdEtSQ3Z4a1Y1OSUyRkdJaEVJcGszalRBeW5aQVpsSzJESWNEQUFBQUF3bkp6WTNjckM3aUszdmtXek5UcDhScnV4UVEzQ2NPNkdSTmV2R2ZWek1YJTJCbFJxZUFkUGxreFI4MVMyc1RWMHhBQUFBQSUyQiUyQk5MOXJzNWRTOEtoWWZRbHR5emFtJTJGZWF5a1VWeTdjTTl3R0hPcGZhWWNzc1J4OTJMOGNyTE1uMm16NkZPT1AxVWRhY09pZUdZSnNWOHBXQ2V6aDBnJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFudEVKbjlCaXE3MFpQcnBJN1gzNHpGRE1XQ0Z1ViUyQkxNcVRyTllwUWg1a3dBQUFBQU9nQUFBQUFJQUFDQUFBQUFkZGxUR0hhTVJ0S1JDdnhrVjU5JTJGR0loRUlwazNqVEF5blpBWmxLMkRJY0RBQUFBQXduSnpZM2NyQzdpSzN2a1d6TlRwOFJydXhRUTNDY082R1JOZXZHZlZ6TVglMkJsUnFlQWRQbGt4UjgxUzJzVFYweEFBQUFBJTJCJTJCTkw5cnM1ZFM4S2hZZlFsdHl6YW0lMkZlYXlrVVZ5N2NNOXdHSE9wZmFZY3NzUng5Mkw4Y3JMTW4ybXo2Rk9PUDFVZGFjT2llR1lKc1Y4cFdDZXpoMGclM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQWNjb3VudCUyRkxvZ2luIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFjY291bnQlMkZMb2dpbiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgICA8Rm9ybVBvc3RIdHRwQm9keSAvPg0KICAgICAgICA8L1JlcXVlc3Q+DQogICAgICA8L0RlcGVuZGVudFJlcXVlc3RzPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BY2NvdW50L0xvZ2luIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPEV4dHJhY3Rpb25SdWxlcz4NCiAgICAgICAgPEV4dHJhY3Rpb25SdWxlIENsYXNzbmFtZT0iTWljcm9zb2Z0LlZpc3VhbFN0dWRpby5UZXN0VG9vbHMuV2ViVGVzdGluZy5SdWxlcy5FeHRyYWN0SGlkZGVuRmllbGRzLCBNaWNyb3NvZnQuVmlzdWFsU3R1ZGlvLlF1YWxpdHlUb29scy5XZWJUZXN0RnJhbWV3b3JrLCBWZXJzaW9uPTEwLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EiIFZhcmlhYmxlTmFtZT0iMSIgRGlzcGxheU5hbWU9IuaPkOWPlumakOiXj+eahOWtl+autSIgRGVzY3JpcHRpb249IuS7juWTjeW6lOS4reaPkOWPluaJgOaciemakOiXj+eahOWtl+aute+8jOW5tuWwhui/meS6m+Wtl+auteaUvuWFpea1i+ivleS4iuS4i+aWh+S4reOAgiI+DQogICAgICAgICAgPFJ1bGVQYXJhbWV0ZXJzPg0KICAgICAgICAgICAgPFJ1bGVQYXJhbWV0ZXIgTmFtZT0iUmVxdWlyZWQiIFZhbHVlPSJUcnVlIiAvPg0KICAgICAgICAgICAgPFJ1bGVQYXJhbWV0ZXIgTmFtZT0iSHRtbERlY29kZSIgVmFsdWU9IlRydWUiIC8+DQogICAgICAgICAgPC9SdWxlUGFyYW1ldGVycz4NCiAgICAgICAgPC9FeHRyYWN0aW9uUnVsZT4NCiAgICAgIDwvRXh0cmFjdGlvblJ1bGVzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHk+DQogICAgICAgIDxGb3JtUG9zdFBhcmFtZXRlciBOYW1lPSJVc2VySWQiIFZhbHVlPSIxMDEwMjEwMjUzIiBSZWNvcmRlZFZhbHVlPSIxMDEwMjEwMjUzIiBDb3JyZWxhdGlvbkJpbmRpbmc9Int7Rm9ybVBvc3RQYXJhbTEuVXNlcklkfX0iIFVybEVuY29kZT0iVHJ1ZSIgLz4NCiAgICAgICAgPEZvcm1Qb3N0UGFyYW1ldGVyIE5hbWU9IlBhc3N3b3JkIiBWYWx1ZT0iMTAxMDIxMzAyNTMiIFJlY29yZGVkVmFsdWU9IjEwMTAyMTMwMjUzIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJUcnVlIiAvPg0KICAgICAgICA8Rm9ybVBvc3RQYXJhbWV0ZXIgTmFtZT0iQXV0b0xvZ2luIiBWYWx1ZT0ie3skSElEREVOMS5BdXRvTG9naW59fSIgUmVjb3JkZWRWYWx1ZT0iZmFsc2UiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IlRydWUiIC8+DQogICAgICA8L0Zvcm1Qb3N0SHR0cEJvZHk+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iNzFhZmM3ODUtZTZlOS00MTQxLWEyOWItNmM3ZGUxZDE4ZTk4IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL25lZ290aWF0ZSIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BY2NvdW50L0xvZ2luIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFjY291bnQlMkZMb2dpbiIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBY2NvdW50JTJGTG9naW4iIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNsaWVudFByb3RvY29sIiBWYWx1ZT0iMS4zIiBSZWNvcmRlZFZhbHVlPSIxLjMiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQyMjY1OCIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQyMjY1OCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSIyZTMyYjI0Ny1mYWFjLTRiNjEtODQwOC0yODFiMmQxYjE3NTIiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvY29ubmVjdCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BY2NvdW50L0xvZ2luIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQWFFcXlIczhWYlVoRGRwSk41YjR6T0xKQ3N1VTk1Z2xBOUx6NzhSbkNUV2dBQUFBQU9nQUFBQUFJQUFDQUFBQUFZdE00dGhKQXNmSmpnT29ESEJ0UUE0YXBRT3dPbGtxV2d0TVhib0g0dXFqQUFBQUM5cDkxclIwMWNHM2FPeVZXayUyQk8xY1B4MkxiQTQ3eTUyQUFlZW5XNWJSUWQwTDlZN3JVTzhTc01VcEJyS0Z3bGxBQUFBQWthbVMwSFdxU25NNXQ2Uk84NDNvZWNlNWxVUWNqQWJRdnpFV0tGJTJGYkcxOWRZV3h3NXBEWllJT1U2WEJrSG84NllSc2t6a0sxOXdZQ1Joc0xydnZLTkElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQWFFcXlIczhWYlVoRGRwSk41YjR6T0xKQ3N1VTk1Z2xBOUx6NzhSbkNUV2dBQUFBQU9nQUFBQUFJQUFDQUFBQUFZdE00dGhKQXNmSmpnT29ESEJ0UUE0YXBRT3dPbGtxV2d0TVhib0g0dXFqQUFBQUM5cDkxclIwMWNHM2FPeVZXayUyQk8xY1B4MkxiQTQ3eTUyQUFlZW5XNWJSUWQwTDlZN3JVTzhTc01VcEJyS0Z3bGxBQUFBQWthbVMwSFdxU25NNXQ2Uk84NDNvZWNlNWxVUWNqQWJRdnpFV0tGJTJGYkcxOWRZV3h3NXBEWllJT1U2WEJrSG84NllSc2t6a0sxOXdZQ1Joc0xydnZLTkElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBY2NvdW50JTJGTG9naW4iIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQWNjb3VudCUyRkxvZ2luIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSI5IiBSZWNvcmRlZFZhbHVlPSI5IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0MjMwNjAiIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0MjMwNjAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iNmQ0OTM4YjUtNjBiMC00NGJiLThkN2QtZTk0NGFmOWFkYTM3IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3NlbmQiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BY2NvdW50L0xvZ2luIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQWFFcXlIczhWYlVoRGRwSk41YjR6T0xKQ3N1VTk1Z2xBOUx6NzhSbkNUV2dBQUFBQU9nQUFBQUFJQUFDQUFBQUFZdE00dGhKQXNmSmpnT29ESEJ0UUE0YXBRT3dPbGtxV2d0TVhib0g0dXFqQUFBQUM5cDkxclIwMWNHM2FPeVZXayUyQk8xY1B4MkxiQTQ3eTUyQUFlZW5XNWJSUWQwTDlZN3JVTzhTc01VcEJyS0Z3bGxBQUFBQWthbVMwSFdxU25NNXQ2Uk84NDNvZWNlNWxVUWNqQWJRdnpFV0tGJTJGYkcxOWRZV3h3NXBEWllJT1U2WEJrSG84NllSc2t6a0sxOXdZQ1Joc0xydnZLTkElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQWFFcXlIczhWYlVoRGRwSk41YjR6T0xKQ3N1VTk1Z2xBOUx6NzhSbkNUV2dBQUFBQU9nQUFBQUFJQUFDQUFBQUFZdE00dGhKQXNmSmpnT29ESEJ0UUE0YXBRT3dPbGtxV2d0TVhib0g0dXFqQUFBQUM5cDkxclIwMWNHM2FPeVZXayUyQk8xY1B4MkxiQTQ3eTUyQUFlZW5XNWJSUWQwTDlZN3JVTzhTc01VcEJyS0Z3bGxBQUFBQWthbVMwSFdxU25NNXQ2Uk84NDNvZWNlNWxVUWNqQWJRdnpFV0tGJTJGYkcxOWRZV3h3NXBEWllJT1U2WEJrSG84NllSc2t6a0sxOXdZQ1Joc0xydnZLTkElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBY2NvdW50JTJGTG9naW4iIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQWNjb3VudCUyRkxvZ2luIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5Pg0KICAgICAgICA8Rm9ybVBvc3RQYXJhbWV0ZXIgTmFtZT0iZGF0YSIgVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O01pY3Jvc29mdC5WaXN1YWxTdHVkaW8uV2ViLkJyb3dzZXJMaW5rLkNvcmVFeHRlbnNpb25GYWN0b3J5LmNvbm5lY3RlZCZxdW90OywmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjF9IiBSZWNvcmRlZFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDtNaWNyb3NvZnQuVmlzdWFsU3R1ZGlvLldlYi5Ccm93c2VyTGluay5Db3JlRXh0ZW5zaW9uRmFjdG9yeS5jb25uZWN0ZWQmcXVvdDssJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzoxfSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iVHJ1ZSIgLz4NCiAgICAgIDwvRm9ybVBvc3RIdHRwQm9keT4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSJmNWQ2NmI1Ny1lNDdkLTRhZWItOWVjMi1lOGVlZTcwNjNlM2MiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvcG9sbCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BY2NvdW50L0xvZ2luIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQWFFcXlIczhWYlVoRGRwSk41YjR6T0xKQ3N1VTk1Z2xBOUx6NzhSbkNUV2dBQUFBQU9nQUFBQUFJQUFDQUFBQUFZdE00dGhKQXNmSmpnT29ESEJ0UUE0YXBRT3dPbGtxV2d0TVhib0g0dXFqQUFBQUM5cDkxclIwMWNHM2FPeVZXayUyQk8xY1B4MkxiQTQ3eTUyQUFlZW5XNWJSUWQwTDlZN3JVTzhTc01VcEJyS0Z3bGxBQUFBQWthbVMwSFdxU25NNXQ2Uk84NDNvZWNlNWxVUWNqQWJRdnpFV0tGJTJGYkcxOWRZV3h3NXBEWllJT1U2WEJrSG84NllSc2t6a0sxOXdZQ1Joc0xydnZLTkElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQWFFcXlIczhWYlVoRGRwSk41YjR6T0xKQ3N1VTk1Z2xBOUx6NzhSbkNUV2dBQUFBQU9nQUFBQUFJQUFDQUFBQUFZdE00dGhKQXNmSmpnT29ESEJ0UUE0YXBRT3dPbGtxV2d0TVhib0g0dXFqQUFBQUM5cDkxclIwMWNHM2FPeVZXayUyQk8xY1B4MkxiQTQ3eTUyQUFlZW5XNWJSUWQwTDlZN3JVTzhTc01VcEJyS0Z3bGxBQUFBQWthbVMwSFdxU25NNXQ2Uk84NDNvZWNlNWxVUWNqQWJRdnpFV0tGJTJGYkcxOWRZV3h3NXBEWllJT1U2WEJrSG84NllSc2t6a0sxOXdZQ1Joc0xydnZLTkElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJtZXNzYWdlSWQiIFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JTJTJDMSU3Q0JUJTJDMCIgUmVjb3JkZWRWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCUyUyQzElN0NCVCUyQzAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBY2NvdW50JTJGTG9naW4iIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQWNjb3VudCUyRkxvZ2luIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSIzIiBSZWNvcmRlZFZhbHVlPSIzIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0MjMwNzgiIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0MjMwNzgiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iMTNkZmI3ZDctNTk4ZS00NzUyLWI3M2EtNzZiMDUzNDlmMWJiIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3NlbmQiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BY2NvdW50L0xvZ2luIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQWFFcXlIczhWYlVoRGRwSk41YjR6T0xKQ3N1VTk1Z2xBOUx6NzhSbkNUV2dBQUFBQU9nQUFBQUFJQUFDQUFBQUFZdE00dGhKQXNmSmpnT29ESEJ0UUE0YXBRT3dPbGtxV2d0TVhib0g0dXFqQUFBQUM5cDkxclIwMWNHM2FPeVZXayUyQk8xY1B4MkxiQTQ3eTUyQUFlZW5XNWJSUWQwTDlZN3JVTzhTc01VcEJyS0Z3bGxBQUFBQWthbVMwSFdxU25NNXQ2Uk84NDNvZWNlNWxVUWNqQWJRdnpFV0tGJTJGYkcxOWRZV3h3NXBEWllJT1U2WEJrSG84NllSc2t6a0sxOXdZQ1Joc0xydnZLTkElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQWFFcXlIczhWYlVoRGRwSk41YjR6T0xKQ3N1VTk1Z2xBOUx6NzhSbkNUV2dBQUFBQU9nQUFBQUFJQUFDQUFBQUFZdE00dGhKQXNmSmpnT29ESEJ0UUE0YXBRT3dPbGtxV2d0TVhib0g0dXFqQUFBQUM5cDkxclIwMWNHM2FPeVZXayUyQk8xY1B4MkxiQTQ3eTUyQUFlZW5XNWJSUWQwTDlZN3JVTzhTc01VcEJyS0Z3bGxBQUFBQWthbVMwSFdxU25NNXQ2Uk84NDNvZWNlNWxVUWNqQWJRdnpFV0tGJTJGYkcxOWRZV3h3NXBEWllJT1U2WEJrSG84NllSc2t6a0sxOXdZQ1Joc0xydnZLTkElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBY2NvdW50JTJGTG9naW4iIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQWNjb3VudCUyRkxvZ2luIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5Pg0KICAgICAgICA8Rm9ybVBvc3RQYXJhbWV0ZXIgTmFtZT0iZGF0YSIgVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O21pY3Jvc29mdC52aXN1YWxzdHVkaW8ud2ViLmJyb3dzZXJsaW5rLmh0bWxtYXBwaW5nZXh0ZW5zaW9uZmFjdG9yeS5yZXNvbHZlVXJsJnF1b3Q7LCZxdW90O2FyZ3MmcXVvdDs6WyZxdW90O34vX19icm93c2VyTGluay9yZXF1ZXN0RGF0YS84N2NkMGY2M2E2Njc0MzFhYTZlYzZkOGNlMzUzYzU3MSZxdW90O10sJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzoyfSIgUmVjb3JkZWRWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7bWljcm9zb2Z0LnZpc3VhbHN0dWRpby53ZWIuYnJvd3NlcmxpbmsuaHRtbG1hcHBpbmdleHRlbnNpb25mYWN0b3J5LnJlc29sdmVVcmwmcXVvdDssJnF1b3Q7YXJncyZxdW90OzpbJnF1b3Q7fi9fX2Jyb3dzZXJMaW5rL3JlcXVlc3REYXRhLzg3Y2QwZjYzYTY2NzQzMWFhNmVjNmQ4Y2UzNTNjNTcxJnF1b3Q7XSwmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjJ9IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJUcnVlIiAvPg0KICAgICAgPC9Gb3JtUG9zdEh0dHBCb2R5Pg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9ImNiMzYxM2NiLTFkMzAtNGYxZS1iNWI2LTY2ZWVmNzIxNTY0YiIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9wb2xsIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FjY291bnQvTG9naW4iIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBYUVxeUhzOFZiVWhEZHBKTjViNHpPTEpDc3VVOTVnbEE5THo3OFJuQ1RXZ0FBQUFBT2dBQUFBQUlBQUNBQUFBQVl0TTR0aEpBc2ZKamdPb0RIQnRRQTRhcFFPd09sa3FXZ3RNWGJvSDR1cWpBQUFBQzlwOTFyUjAxY0czYU95VldrJTJCTzFjUHgyTGJBNDd5NTJBQWVlblc1YlJRZDBMOVk3clVPOFNzTVVwQnJLRndsbEFBQUFBa2FtUzBIV3FTbk01dDZSTzg0M29lY2U1bFVRY2pBYlF2ekVXS0YlMkZiRzE5ZFlXeHc1cERaWUlPVTZYQmtIbzg2WVJza3prSzE5d1lDUmhzTHJ2dktOQSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBYUVxeUhzOFZiVWhEZHBKTjViNHpPTEpDc3VVOTVnbEE5THo3OFJuQ1RXZ0FBQUFBT2dBQUFBQUlBQUNBQUFBQVl0TTR0aEpBc2ZKamdPb0RIQnRRQTRhcFFPd09sa3FXZ3RNWGJvSDR1cWpBQUFBQzlwOTFyUjAxY0czYU95VldrJTJCTzFjUHgyTGJBNDd5NTJBQWVlblc1YlJRZDBMOVk3clVPOFNzTVVwQnJLRndsbEFBQUFBa2FtUzBIV3FTbk01dDZSTzg0M29lY2U1bFVRY2pBYlF2ekVXS0YlMkZiRzE5ZFlXeHc1cERaWUlPVTZYQmtIbzg2WVJza3prSzE5d1lDUmhzTHJ2dktOQSUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Im1lc3NhZ2VJZCIgVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQlMlMkMyJTdDQlQlMkMwIiBSZWNvcmRlZFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JTJTJDMiU3Q0JUJTJDMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFjY291bnQlMkZMb2dpbiIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBY2NvdW50JTJGTG9naW4iIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRpZCIgVmFsdWU9IjQiIFJlY29yZGVkVmFsdWU9IjQiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQyMzI5MSIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQyMzI5MSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJHRVQiIEd1aWQ9IjE2MDBjZGFiLTI0MmEtNGVlZS1hNWM3LWYxYjVhZTA3YmI3MCIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9fX2Jyb3dzZXJMaW5rL3JlcXVlc3REYXRhLzg3Y2QwZjYzYTY2NzQzMWFhNmVjNmQ4Y2UzNTNjNTcxIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9ImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iWC1SZXF1ZXN0ZWQtV2l0aCIgVmFsdWU9IlhNTEh0dHBSZXF1ZXN0IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQWNjb3VudC9Mb2dpbiIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSI1YTRiYzk0NC1jMTFkLTQ1M2UtYWQ2OS0yNWNiZTczMGI5Y2EiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvcG9sbCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BY2NvdW50L0xvZ2luIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQWFFcXlIczhWYlVoRGRwSk41YjR6T0xKQ3N1VTk1Z2xBOUx6NzhSbkNUV2dBQUFBQU9nQUFBQUFJQUFDQUFBQUFZdE00dGhKQXNmSmpnT29ESEJ0UUE0YXBRT3dPbGtxV2d0TVhib0g0dXFqQUFBQUM5cDkxclIwMWNHM2FPeVZXayUyQk8xY1B4MkxiQTQ3eTUyQUFlZW5XNWJSUWQwTDlZN3JVTzhTc01VcEJyS0Z3bGxBQUFBQWthbVMwSFdxU25NNXQ2Uk84NDNvZWNlNWxVUWNqQWJRdnpFV0tGJTJGYkcxOWRZV3h3NXBEWllJT1U2WEJrSG84NllSc2t6a0sxOXdZQ1Joc0xydnZLTkElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQWFFcXlIczhWYlVoRGRwSk41YjR6T0xKQ3N1VTk1Z2xBOUx6NzhSbkNUV2dBQUFBQU9nQUFBQUFJQUFDQUFBQUFZdE00dGhKQXNmSmpnT29ESEJ0UUE0YXBRT3dPbGtxV2d0TVhib0g0dXFqQUFBQUM5cDkxclIwMWNHM2FPeVZXayUyQk8xY1B4MkxiQTQ3eTUyQUFlZW5XNWJSUWQwTDlZN3JVTzhTc01VcEJyS0Z3bGxBQUFBQWthbVMwSFdxU25NNXQ2Uk84NDNvZWNlNWxVUWNqQWJRdnpFV0tGJTJGYkcxOWRZV3h3NXBEWllJT1U2WEJrSG84NllSc2t6a0sxOXdZQ1Joc0xydnZLTkElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJtZXNzYWdlSWQiIFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JTJTJDMyU3Q0JUJTJDMCIgUmVjb3JkZWRWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCUyUyQzMlN0NCVCUyQzAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBY2NvdW50JTJGTG9naW4iIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQWNjb3VudCUyRkxvZ2luIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSI3IiBSZWNvcmRlZFZhbHVlPSI3IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0MjMzNjYiIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0MjMzNjYiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iOGIwMzc4NGQtZWVlZS00OGI4LWFlMTUtYzJlZmVmM2M2YTNlIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3NlbmQiIFRoaW5rVGltZT0iNSIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BY2NvdW50L0xvZ2luIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQWFFcXlIczhWYlVoRGRwSk41YjR6T0xKQ3N1VTk1Z2xBOUx6NzhSbkNUV2dBQUFBQU9nQUFBQUFJQUFDQUFBQUFZdE00dGhKQXNmSmpnT29ESEJ0UUE0YXBRT3dPbGtxV2d0TVhib0g0dXFqQUFBQUM5cDkxclIwMWNHM2FPeVZXayUyQk8xY1B4MkxiQTQ3eTUyQUFlZW5XNWJSUWQwTDlZN3JVTzhTc01VcEJyS0Z3bGxBQUFBQWthbVMwSFdxU25NNXQ2Uk84NDNvZWNlNWxVUWNqQWJRdnpFV0tGJTJGYkcxOWRZV3h3NXBEWllJT1U2WEJrSG84NllSc2t6a0sxOXdZQ1Joc0xydnZLTkElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQWFFcXlIczhWYlVoRGRwSk41YjR6T0xKQ3N1VTk1Z2xBOUx6NzhSbkNUV2dBQUFBQU9nQUFBQUFJQUFDQUFBQUFZdE00dGhKQXNmSmpnT29ESEJ0UUE0YXBRT3dPbGtxV2d0TVhib0g0dXFqQUFBQUM5cDkxclIwMWNHM2FPeVZXayUyQk8xY1B4MkxiQTQ3eTUyQUFlZW5XNWJSUWQwTDlZN3JVTzhTc01VcEJyS0Z3bGxBQUFBQWthbVMwSFdxU25NNXQ2Uk84NDNvZWNlNWxVUWNqQWJRdnpFV0tGJTJGYkcxOWRZV3h3NXBEWllJT1U2WEJrSG84NllSc2t6a0sxOXdZQ1Joc0xydnZLTkElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBY2NvdW50JTJGTG9naW4iIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQWNjb3VudCUyRkxvZ2luIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5Pg0KICAgICAgICA8Rm9ybVBvc3RQYXJhbWV0ZXIgTmFtZT0iZGF0YSIgVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O21pY3Jvc29mdC52aXN1YWxzdHVkaW8ud2ViLmJyb3dzZXJsaW5rLmh0bWxtYXBwaW5nZXh0ZW5zaW9uZmFjdG9yeS5yZXNvbHZlU291cmNlRmlsZVBhdGhzJnF1b3Q7LCZxdW90O2FyZ3MmcXVvdDs6W1smcXVvdDt+L1ZpZXdzL0FjY291bnQvTG9naW4uY3NodG1sJnF1b3Q7XV0sJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzozfSIgUmVjb3JkZWRWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7bWljcm9zb2Z0LnZpc3VhbHN0dWRpby53ZWIuYnJvd3NlcmxpbmsuaHRtbG1hcHBpbmdleHRlbnNpb25mYWN0b3J5LnJlc29sdmVTb3VyY2VGaWxlUGF0aHMmcXVvdDssJnF1b3Q7YXJncyZxdW90OzpbWyZxdW90O34vVmlld3MvQWNjb3VudC9Mb2dpbi5jc2h0bWwmcXVvdDtdXSwmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjN9IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJUcnVlIiAvPg0KICAgICAgPC9Gb3JtUG9zdEh0dHBCb2R5Pg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjU0YzhlZDEyLTk2ZTUtNDhiNS1iYjUzLWRlNzQ3N2MzNzk1MiIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BY2NvdW50L0xvZ2luIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FjY291bnQvTG9naW4iIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keT4NCiAgICAgICAgPEZvcm1Qb3N0UGFyYW1ldGVyIE5hbWU9IlVzZXJJZCIgVmFsdWU9IjEwMTAyMTMwMjUzIiBSZWNvcmRlZFZhbHVlPSIxMDEwMjEzMDI1MyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iVHJ1ZSIgLz4NCiAgICAgICAgPEZvcm1Qb3N0UGFyYW1ldGVyIE5hbWU9IlBhc3N3b3JkIiBWYWx1ZT0iMTAxMDIxMzAyNTMiIFJlY29yZGVkVmFsdWU9IjEwMTAyMTMwMjUzIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJUcnVlIiAvPg0KICAgICAgICA8Rm9ybVBvc3RQYXJhbWV0ZXIgTmFtZT0iQXV0b0xvZ2luIiBWYWx1ZT0ie3skSElEREVOMS5BdXRvTG9naW59fSIgUmVjb3JkZWRWYWx1ZT0iZmFsc2UiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IlRydWUiIC8+DQogICAgICA8L0Zvcm1Qb3N0SHR0cEJvZHk+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iZGIwZmJiOTItOGE3MC00NDEzLWEzODgtZDU0ODY1ZmI2ZmQ1IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL2Fib3J0IiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQWNjb3VudC9Mb2dpbiIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFhRXF5SHM4VmJVaERkcEpONWI0ek9MSkNzdVU5NWdsQTlMejc4Um5DVFdnQUFBQUFPZ0FBQUFBSUFBQ0FBQUFBWXRNNHRoSkFzZkpqZ09vREhCdFFBNGFwUU93T2xrcVdndE1YYm9INHVxakFBQUFDOXA5MXJSMDFjRzNhT3lWV2slMkJPMWNQeDJMYkE0N3k1MkFBZWVuVzViUlFkMEw5WTdyVU84U3NNVXBCcktGd2xsQUFBQUFrYW1TMEhXcVNuTTV0NlJPODQzb2VjZTVsVVFjakFiUXZ6RVdLRiUyRmJHMTlkWVd4dzVwRFpZSU9VNlhCa0hvODZZUnNremtLMTl3WUNSaHNMcnZ2S05BJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFhRXF5SHM4VmJVaERkcEpONWI0ek9MSkNzdVU5NWdsQTlMejc4Um5DVFdnQUFBQUFPZ0FBQUFBSUFBQ0FBQUFBWXRNNHRoSkFzZkpqZ09vREhCdFFBNGFwUU93T2xrcVdndE1YYm9INHVxakFBQUFDOXA5MXJSMDFjRzNhT3lWV2slMkJPMWNQeDJMYkE0N3k1MkFBZWVuVzViUlFkMEw5WTdyVU84U3NNVXBCcktGd2xsQUFBQUFrYW1TMEhXcVNuTTV0NlJPODQzb2VjZTVsVVFjakFiUXZ6RVdLRiUyRmJHMTlkWVd4dzVwRFpZSU9VNlhCa0hvODZZUnNremtLMTl3WUNSaHNMcnZ2S05BJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQWNjb3VudCUyRkxvZ2luIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFjY291bnQlMkZMb2dpbiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keSAvPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjQ3MDYyNzI5LTBlN2MtNDFiOS04NTViLTc0MTgxNmY5YjIyYyIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9uZWdvdGlhdGUiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQ29udGVudC1UeXBlIiBWYWx1ZT0iYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRiIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkYiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNsaWVudFByb3RvY29sIiBWYWx1ZT0iMS4zIiBSZWNvcmRlZFZhbHVlPSIxLjMiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQyOTcyMiIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQyOTcyMiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSJhZTlmMDRjZi0wNTVjLTQyNzEtYWE0OC0zOTE2YTE4NWYwYjIiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvY29ubmVjdCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy8iIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBdFNqSVY5T1phdG1xdU1Fdzc2eWxXb3Buclg4T3g0Vmh1WmdITWRoZWFxd0FBQUFBT2dBQUFBQUlBQUNBQUFBQzlPNkMyVGp4SmNxdjV2bFA5Q0IwSVJjU2xjR1hnUmpTcFElMkZlb29BcVVNREFBQUFDM2ZVUE5UeE1sZ0FaM2EwTkMwOGY0TmtSSTY3b0ZFZ3dZeWFKdm1DMzZRJTJGWkxBVjFHWVN1Wmc1UWtJdVVDZVF4QUFBQUFZdmdqT2J1TDZTM1V1WG9YcnF3QzhsTThCWnQ5aVZNZklraUthSGN5UnlHNHBRQ1BFWVBKVkc5ZmNZMm53bFQwbVNpTVpqV0FXRkFvUmh1RHFWQkc1USUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBdFNqSVY5T1phdG1xdU1Fdzc2eWxXb3Buclg4T3g0Vmh1WmdITWRoZWFxd0FBQUFBT2dBQUFBQUlBQUNBQUFBQzlPNkMyVGp4SmNxdjV2bFA5Q0IwSVJjU2xjR1hnUmpTcFElMkZlb29BcVVNREFBQUFDM2ZVUE5UeE1sZ0FaM2EwTkMwOGY0TmtSSTY3b0ZFZ3dZeWFKdm1DMzZRJTJGWkxBVjFHWVN1Wmc1UWtJdVVDZVF4QUFBQUFZdmdqT2J1TDZTM1V1WG9YcnF3QzhsTThCWnQ5aVZNZklraUthSGN5UnlHNHBRQ1BFWVBKVkc5ZmNZMm53bFQwbVNpTVpqV0FXRkFvUmh1RHFWQkc1USUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRiIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkYiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRpZCIgVmFsdWU9IjUiIFJlY29yZGVkVmFsdWU9IjUiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQzMDE1MSIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQzMDE1MSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSJhY2IzYmVhYy05OGIwLTQyNjAtYjk0Yi1jODg3NGRhZWNjMDIiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvc2VuZCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzLyIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUF0U2pJVjlPWmF0bXF1TUV3NzZ5bFdvcG5yWDhPeDRWaHVaZ0hNZGhlYXF3QUFBQUFPZ0FBQUFBSUFBQ0FBQUFDOU82QzJUanhKY3F2NXZsUDlDQjBJUmNTbGNHWGdSalNwUSUyRmVvb0FxVU1EQUFBQUMzZlVQTlR4TWxnQVozYTBOQzA4ZjROa1JJNjdvRkVnd1l5YUp2bUMzNlElMkZaTEFWMUdZU3VaZzVRa0l1VUNlUXhBQUFBQVl2Z2pPYnVMNlMzVXVYb1hycXdDOGxNOEJadDlpVk1mSWtpS2FIY3lSeUc0cFFDUEVZUEpWRzlmY1kybndsVDBtU2lNWmpXQVdGQW9SaHVEcVZCRzVRJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUF0U2pJVjlPWmF0bXF1TUV3NzZ5bFdvcG5yWDhPeDRWaHVaZ0hNZGhlYXF3QUFBQUFPZ0FBQUFBSUFBQ0FBQUFDOU82QzJUanhKY3F2NXZsUDlDQjBJUmNTbGNHWGdSalNwUSUyRmVvb0FxVU1EQUFBQUMzZlVQTlR4TWxnQVozYTBOQzA4ZjROa1JJNjdvRkVnd1l5YUp2bUMzNlElMkZaTEFWMUdZU3VaZzVRa0l1VUNlUXhBQUFBQVl2Z2pPYnVMNlMzVXVYb1hycXdDOGxNOEJadDlpVk1mSWtpS2FIY3lSeUc0cFFDUEVZUEpWRzlmY1kybndsVDBtU2lNWmpXQVdGQW9SaHVEcVZCRzVRJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keT4NCiAgICAgICAgPEZvcm1Qb3N0UGFyYW1ldGVyIE5hbWU9ImRhdGEiIFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDtNaWNyb3NvZnQuVmlzdWFsU3R1ZGlvLldlYi5Ccm93c2VyTGluay5Db3JlRXh0ZW5zaW9uRmFjdG9yeS5jb25uZWN0ZWQmcXVvdDssJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzoxfSIgUmVjb3JkZWRWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7TWljcm9zb2Z0LlZpc3VhbFN0dWRpby5XZWIuQnJvd3NlckxpbmsuQ29yZUV4dGVuc2lvbkZhY3RvcnkuY29ubmVjdGVkJnF1b3Q7LCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6MX0iIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IlRydWUiIC8+DQogICAgICA8L0Zvcm1Qb3N0SHR0cEJvZHk+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iMzIwNmJlZGYtY2FlMy00NGVlLWJlZGMtMWUzMTIxOWQyMzQzIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3BvbGwiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQ29udGVudC1UeXBlIiBWYWx1ZT0iYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQXRTaklWOU9aYXRtcXVNRXc3NnlsV29wbnJYOE94NFZodVpnSE1kaGVhcXdBQUFBQU9nQUFBQUFJQUFDQUFBQUM5TzZDMlRqeEpjcXY1dmxQOUNCMElSY1NsY0dYZ1JqU3BRJTJGZW9vQXFVTURBQUFBQzNmVVBOVHhNbGdBWjNhME5DMDhmNE5rUkk2N29GRWd3WXlhSnZtQzM2USUyRlpMQVYxR1lTdVpnNVFrSXVVQ2VReEFBQUFBWXZnak9idUw2UzNVdVhvWHJxd0M4bE04Qlp0OWlWTWZJa2lLYUhjeVJ5RzRwUUNQRVlQSlZHOWZjWTJud2xUMG1TaU1aaldBV0ZBb1JodURxVkJHNVElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQXRTaklWOU9aYXRtcXVNRXc3NnlsV29wbnJYOE94NFZodVpnSE1kaGVhcXdBQUFBQU9nQUFBQUFJQUFDQUFBQUM5TzZDMlRqeEpjcXY1dmxQOUNCMElSY1NsY0dYZ1JqU3BRJTJGZW9vQXFVTURBQUFBQzNmVVBOVHhNbGdBWjNhME5DMDhmNE5rUkk2N29GRWd3WXlhSnZtQzM2USUyRlpMQVYxR1lTdVpnNVFrSXVVQ2VReEFBQUFBWXZnak9idUw2UzNVdVhvWHJxd0M4bE04Qlp0OWlWTWZJa2lLYUhjeVJ5RzRwUUNQRVlQSlZHOWZjWTJud2xUMG1TaU1aaldBV0ZBb1JodURxVkJHNVElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJtZXNzYWdlSWQiIFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JVJTJDMSU3Q0JWJTJDMCIgUmVjb3JkZWRWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCVSUyQzElN0NCViUyQzAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkYiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSI1IiBSZWNvcmRlZFZhbHVlPSI1IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0MzAxODUiIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0MzAxODUiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iNDg5NjMxYWQtYjkxOC00NjVhLThiODgtNzE5ODVjMGY5NWZmIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3NlbmQiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy8iIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBdFNqSVY5T1phdG1xdU1Fdzc2eWxXb3Buclg4T3g0Vmh1WmdITWRoZWFxd0FBQUFBT2dBQUFBQUlBQUNBQUFBQzlPNkMyVGp4SmNxdjV2bFA5Q0IwSVJjU2xjR1hnUmpTcFElMkZlb29BcVVNREFBQUFDM2ZVUE5UeE1sZ0FaM2EwTkMwOGY0TmtSSTY3b0ZFZ3dZeWFKdm1DMzZRJTJGWkxBVjFHWVN1Wmc1UWtJdVVDZVF4QUFBQUFZdmdqT2J1TDZTM1V1WG9YcnF3QzhsTThCWnQ5aVZNZklraUthSGN5UnlHNHBRQ1BFWVBKVkc5ZmNZMm53bFQwbVNpTVpqV0FXRkFvUmh1RHFWQkc1USUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBdFNqSVY5T1phdG1xdU1Fdzc2eWxXb3Buclg4T3g0Vmh1WmdITWRoZWFxd0FBQUFBT2dBQUFBQUlBQUNBQUFBQzlPNkMyVGp4SmNxdjV2bFA5Q0IwSVJjU2xjR1hnUmpTcFElMkZlb29BcVVNREFBQUFDM2ZVUE5UeE1sZ0FaM2EwTkMwOGY0TmtSSTY3b0ZFZ3dZeWFKdm1DMzZRJTJGWkxBVjFHWVN1Wmc1UWtJdVVDZVF4QUFBQUFZdmdqT2J1TDZTM1V1WG9YcnF3QzhsTThCWnQ5aVZNZklraUthSGN5UnlHNHBRQ1BFWVBKVkc5ZmNZMm53bFQwbVNpTVpqV0FXRkFvUmh1RHFWQkc1USUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRiIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkYiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHk+DQogICAgICAgIDxGb3JtUG9zdFBhcmFtZXRlciBOYW1lPSJkYXRhIiBWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7bWljcm9zb2Z0LnZpc3VhbHN0dWRpby53ZWIuYnJvd3NlcmxpbmsuaHRtbG1hcHBpbmdleHRlbnNpb25mYWN0b3J5LnJlc29sdmVVcmwmcXVvdDssJnF1b3Q7YXJncyZxdW90OzpbJnF1b3Q7fi9fX2Jyb3dzZXJMaW5rL3JlcXVlc3REYXRhLzgxMDA4NzExMWQwZDQzMmM5ZDA1ZjdhMmM3OGQ4YmQ0JnF1b3Q7XSwmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjJ9IiBSZWNvcmRlZFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDttaWNyb3NvZnQudmlzdWFsc3R1ZGlvLndlYi5icm93c2VybGluay5odG1sbWFwcGluZ2V4dGVuc2lvbmZhY3RvcnkucmVzb2x2ZVVybCZxdW90OywmcXVvdDthcmdzJnF1b3Q7OlsmcXVvdDt+L19fYnJvd3NlckxpbmsvcmVxdWVzdERhdGEvODEwMDg3MTExZDBkNDMyYzlkMDVmN2EyYzc4ZDhiZDQmcXVvdDtdLCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6Mn0iIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IlRydWUiIC8+DQogICAgICA8L0Zvcm1Qb3N0SHR0cEJvZHk+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iMmZiMjEyYmItNmRmMC00NjhmLWFkMDEtZWExZDM1NzYzZjI0IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3BvbGwiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQ29udGVudC1UeXBlIiBWYWx1ZT0iYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQXRTaklWOU9aYXRtcXVNRXc3NnlsV29wbnJYOE94NFZodVpnSE1kaGVhcXdBQUFBQU9nQUFBQUFJQUFDQUFBQUM5TzZDMlRqeEpjcXY1dmxQOUNCMElSY1NsY0dYZ1JqU3BRJTJGZW9vQXFVTURBQUFBQzNmVVBOVHhNbGdBWjNhME5DMDhmNE5rUkk2N29GRWd3WXlhSnZtQzM2USUyRlpMQVYxR1lTdVpnNVFrSXVVQ2VReEFBQUFBWXZnak9idUw2UzNVdVhvWHJxd0M4bE04Qlp0OWlWTWZJa2lLYUhjeVJ5RzRwUUNQRVlQSlZHOWZjWTJud2xUMG1TaU1aaldBV0ZBb1JodURxVkJHNVElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQXRTaklWOU9aYXRtcXVNRXc3NnlsV29wbnJYOE94NFZodVpnSE1kaGVhcXdBQUFBQU9nQUFBQUFJQUFDQUFBQUM5TzZDMlRqeEpjcXY1dmxQOUNCMElSY1NsY0dYZ1JqU3BRJTJGZW9vQXFVTURBQUFBQzNmVVBOVHhNbGdBWjNhME5DMDhmNE5rUkk2N29GRWd3WXlhSnZtQzM2USUyRlpMQVYxR1lTdVpnNVFrSXVVQ2VReEFBQUFBWXZnak9idUw2UzNVdVhvWHJxd0M4bE04Qlp0OWlWTWZJa2lLYUhjeVJ5RzRwUUNQRVlQSlZHOWZjWTJud2xUMG1TaU1aaldBV0ZBb1JodURxVkJHNVElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJtZXNzYWdlSWQiIFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JVJTJDMiU3Q0JWJTJDMCIgUmVjb3JkZWRWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCVSUyQzIlN0NCViUyQzAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkYiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSIxMCIgUmVjb3JkZWRWYWx1ZT0iMTAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQzMDMzMSIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQzMDMzMSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJHRVQiIEd1aWQ9IjM4YzQ1MGY2LTcxNDctNGVlNy05YTMwLTBkNTA0ZTQwMTdhYSIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9fX2Jyb3dzZXJMaW5rL3JlcXVlc3REYXRhLzgxMDA4NzExMWQwZDQzMmM5ZDA1ZjdhMmM3OGQ4YmQ0IiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9ImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iWC1SZXF1ZXN0ZWQtV2l0aCIgVmFsdWU9IlhNTEh0dHBSZXF1ZXN0IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjliMjZmZjdiLWFmYmYtNGRmMS04MTM1LTExYWU3N2E2ZDlmYSIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9wb2xsIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzLyIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUF0U2pJVjlPWmF0bXF1TUV3NzZ5bFdvcG5yWDhPeDRWaHVaZ0hNZGhlYXF3QUFBQUFPZ0FBQUFBSUFBQ0FBQUFDOU82QzJUanhKY3F2NXZsUDlDQjBJUmNTbGNHWGdSalNwUSUyRmVvb0FxVU1EQUFBQUMzZlVQTlR4TWxnQVozYTBOQzA4ZjROa1JJNjdvRkVnd1l5YUp2bUMzNlElMkZaTEFWMUdZU3VaZzVRa0l1VUNlUXhBQUFBQVl2Z2pPYnVMNlMzVXVYb1hycXdDOGxNOEJadDlpVk1mSWtpS2FIY3lSeUc0cFFDUEVZUEpWRzlmY1kybndsVDBtU2lNWmpXQVdGQW9SaHVEcVZCRzVRJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUF0U2pJVjlPWmF0bXF1TUV3NzZ5bFdvcG5yWDhPeDRWaHVaZ0hNZGhlYXF3QUFBQUFPZ0FBQUFBSUFBQ0FBQUFDOU82QzJUanhKY3F2NXZsUDlDQjBJUmNTbGNHWGdSalNwUSUyRmVvb0FxVU1EQUFBQUMzZlVQTlR4TWxnQVozYTBOQzA4ZjROa1JJNjdvRkVnd1l5YUp2bUMzNlElMkZaTEFWMUdZU3VaZzVRa0l1VUNlUXhBQUFBQVl2Z2pPYnVMNlMzVXVYb1hycXdDOGxNOEJadDlpVk1mSWtpS2FIY3lSeUc0cFFDUEVZUEpWRzlmY1kybndsVDBtU2lNWmpXQVdGQW9SaHVEcVZCRzVRJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0ibWVzc2FnZUlkIiBWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCVSUyQzMlN0NCViUyQzAiIFJlY29yZGVkVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQlUlMkMzJTdDQlYlMkMwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idGlkIiBWYWx1ZT0iOSIgUmVjb3JkZWRWYWx1ZT0iOSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Il8iIFZhbHVlPSIxMzk3NjMxNDMwNDYwIiBSZWNvcmRlZFZhbHVlPSIxMzk3NjMxNDMwNDYwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keSAvPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9Ijc4YmM1NTg1LWI5MDQtNGJlZS04NTE1LTM2NjVlYzY3YTQyOCIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9zZW5kIiBUaGlua1RpbWU9IjEiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQXRTaklWOU9aYXRtcXVNRXc3NnlsV29wbnJYOE94NFZodVpnSE1kaGVhcXdBQUFBQU9nQUFBQUFJQUFDQUFBQUM5TzZDMlRqeEpjcXY1dmxQOUNCMElSY1NsY0dYZ1JqU3BRJTJGZW9vQXFVTURBQUFBQzNmVVBOVHhNbGdBWjNhME5DMDhmNE5rUkk2N29GRWd3WXlhSnZtQzM2USUyRlpMQVYxR1lTdVpnNVFrSXVVQ2VReEFBQUFBWXZnak9idUw2UzNVdVhvWHJxd0M4bE04Qlp0OWlWTWZJa2lLYUhjeVJ5RzRwUUNQRVlQSlZHOWZjWTJud2xUMG1TaU1aaldBV0ZBb1JodURxVkJHNVElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQXRTaklWOU9aYXRtcXVNRXc3NnlsV29wbnJYOE94NFZodVpnSE1kaGVhcXdBQUFBQU9nQUFBQUFJQUFDQUFBQUM5TzZDMlRqeEpjcXY1dmxQOUNCMElSY1NsY0dYZ1JqU3BRJTJGZW9vQXFVTURBQUFBQzNmVVBOVHhNbGdBWjNhME5DMDhmNE5rUkk2N29GRWd3WXlhSnZtQzM2USUyRlpMQVYxR1lTdVpnNVFrSXVVQ2VReEFBQUFBWXZnak9idUw2UzNVdVhvWHJxd0M4bE04Qlp0OWlWTWZJa2lLYUhjeVJ5RzRwUUNQRVlQSlZHOWZjWTJud2xUMG1TaU1aaldBV0ZBb1JodURxVkJHNVElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkYiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5Pg0KICAgICAgICA8Rm9ybVBvc3RQYXJhbWV0ZXIgTmFtZT0iZGF0YSIgVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O21pY3Jvc29mdC52aXN1YWxzdHVkaW8ud2ViLmJyb3dzZXJsaW5rLmh0bWxtYXBwaW5nZXh0ZW5zaW9uZmFjdG9yeS5yZXNvbHZlU291cmNlRmlsZVBhdGhzJnF1b3Q7LCZxdW90O2FyZ3MmcXVvdDs6W1smcXVvdDt+L1ZpZXdzL0hvbWUvSW5kZXguY3NodG1sJnF1b3Q7XV0sJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzozfSIgUmVjb3JkZWRWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7bWljcm9zb2Z0LnZpc3VhbHN0dWRpby53ZWIuYnJvd3NlcmxpbmsuaHRtbG1hcHBpbmdleHRlbnNpb25mYWN0b3J5LnJlc29sdmVTb3VyY2VGaWxlUGF0aHMmcXVvdDssJnF1b3Q7YXJncyZxdW90OzpbWyZxdW90O34vVmlld3MvSG9tZS9JbmRleC5jc2h0bWwmcXVvdDtdXSwmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjN9IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJUcnVlIiAvPg0KICAgICAgPC9Gb3JtUG9zdEh0dHBCb2R5Pg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IkdFVCIgR3VpZD0iMzgwZDZiZDEtOGNlNS00MjkzLWJlZTgtZjk3M2IyNzAxYWE1IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzLyIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSI5NzkyN2E4OS1iYTA2LTQxNGQtYWRjZS02YWI3OTcyYTZjZTIiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvYWJvcnQiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy8iIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBdFNqSVY5T1phdG1xdU1Fdzc2eWxXb3Buclg4T3g0Vmh1WmdITWRoZWFxd0FBQUFBT2dBQUFBQUlBQUNBQUFBQzlPNkMyVGp4SmNxdjV2bFA5Q0IwSVJjU2xjR1hnUmpTcFElMkZlb29BcVVNREFBQUFDM2ZVUE5UeE1sZ0FaM2EwTkMwOGY0TmtSSTY3b0ZFZ3dZeWFKdm1DMzZRJTJGWkxBVjFHWVN1Wmc1UWtJdVVDZVF4QUFBQUFZdmdqT2J1TDZTM1V1WG9YcnF3QzhsTThCWnQ5aVZNZklraUthSGN5UnlHNHBRQ1BFWVBKVkc5ZmNZMm53bFQwbVNpTVpqV0FXRkFvUmh1RHFWQkc1USUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBdFNqSVY5T1phdG1xdU1Fdzc2eWxXb3Buclg4T3g0Vmh1WmdITWRoZWFxd0FBQUFBT2dBQUFBQUlBQUNBQUFBQzlPNkMyVGp4SmNxdjV2bFA5Q0IwSVJjU2xjR1hnUmpTcFElMkZlb29BcVVNREFBQUFDM2ZVUE5UeE1sZ0FaM2EwTkMwOGY0TmtSSTY3b0ZFZ3dZeWFKdm1DMzZRJTJGWkxBVjFHWVN1Wmc1UWtJdVVDZVF4QUFBQUFZdmdqT2J1TDZTM1V1WG9YcnF3QzhsTThCWnQ5aVZNZklraUthSGN5UnlHNHBRQ1BFWVBKVkc5ZmNZMm53bFQwbVNpTVpqV0FXRkFvUmh1RHFWQkc1USUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRiIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkYiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSI2YWU4MGZmZS0xZWJiLTRjZjAtYmUyYi01ZDNhMmRhYjIzMDUiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvbmVnb3RpYXRlIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcCIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjbGllbnRQcm90b2NvbCIgVmFsdWU9IjEuMyIgUmVjb3JkZWRWYWx1ZT0iMS4zIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0MzI0MDAiIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0MzI0MDAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iNjYzMzQ2ZmUtMTY3MS00YjdmLWE0ZGUtNjM2ZDY3YmMwYzRiIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL2Nvbm5lY3QiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQ29udGVudC1UeXBlIiBWYWx1ZT0iYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBwIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBRGdzNWIzVGU2UnIyOXdJWUtDZmtUWDkxZzZ4TUU1TUh5REZZVzNFaXR4SFFBQUFBQU9nQUFBQUFJQUFDQUFBQUJFMGdXdHRTJTJGQVF0N1FpNFBoZllTaXNVRmpka3BaTExoR1VMUjhvaE9PTmpBQUFBRDQyajM3JTJGNktJMW82RlFxSE85dTRXWmtnUHYwSlplbXlHRUNHMVVuc1c4cmV5ejl4UkZKY25mJTJGMTlWV2d1WFNaQUFBQUFJSWtWaGVCc2xHWlVkRDJ0THRXdE5jcWw0WVlPRUprcTB0T09EJTJCcXBaaTR3RThiamg2MEZ3bnYlMkZEZXdaMjY1c2pqU3c1NXNXTDA5RE5XNnQ5ZjlGNkElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBRGdzNWIzVGU2UnIyOXdJWUtDZmtUWDkxZzZ4TUU1TUh5REZZVzNFaXR4SFFBQUFBQU9nQUFBQUFJQUFDQUFBQUJFMGdXdHRTJTJGQVF0N1FpNFBoZllTaXNVRmpka3BaTExoR1VMUjhvaE9PTmpBQUFBRDQyajM3JTJGNktJMW82RlFxSE85dTRXWmtnUHYwSlplbXlHRUNHMVVuc1c4cmV5ejl4UkZKY25mJTJGMTlWV2d1WFNaQUFBQUFJSWtWaGVCc2xHWlVkRDJ0THRXdE5jcWw0WVlPRUprcTB0T09EJTJCcXBaaTR3RThiamg2MEZ3bnYlMkZEZXdaMjY1c2pqU3c1NXNXTDA5RE5XNnQ5ZjlGNkElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSI2IiBSZWNvcmRlZFZhbHVlPSI2IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0MzI3NTEiIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0MzI3NTEiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iYWMyMzM2MDktMzQ5Yy00MzZkLWFmNTAtZTg3YjA3MGQ1Mjg2IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3NlbmQiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFEZ3M1YjNUZTZScjI5d0lZS0Nma1RYOTFnNnhNRTVNSHlERllXM0VpdHhIUUFBQUFBT2dBQUFBQUlBQUNBQUFBQkUwZ1d0dFMlMkZBUXQ3UWk0UGhmWVNpc1VGamRrcFpMTGhHVUxSOG9oT09OakFBQUFENDJqMzclMkY2S0kxbzZGUXFITzl1NFdaa2dQdjBKWmVteUdFQ0cxVW5zVzhyZXl6OXhSRkpjbmYlMkYxOVZXZ3VYU1pBQUFBQUlJa1ZoZUJzbEdaVWREMnRMdFd0TmNxbDRZWU9FSmtxMHRPT0QlMkJxcFppNHdFOGJqaDYwRndudiUyRkRld1oyNjVzampTdzU1c1dMMDlETlc2dDlmOUY2QSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFEZ3M1YjNUZTZScjI5d0lZS0Nma1RYOTFnNnhNRTVNSHlERllXM0VpdHhIUUFBQUFBT2dBQUFBQUlBQUNBQUFBQkUwZ1d0dFMlMkZBUXQ3UWk0UGhmWVNpc1VGamRrcFpMTGhHVUxSOG9oT09OakFBQUFENDJqMzclMkY2S0kxbzZGUXFITzl1NFdaa2dQdjBKWmVteUdFQ0cxVW5zVzhyZXl6OXhSRkpjbmYlMkYxOVZXZ3VYU1pBQUFBQUlJa1ZoZUJzbEdaVWREMnRMdFd0TmNxbDRZWU9FSmtxMHRPT0QlMkJxcFppNHdFOGJqaDYwRndudiUyRkRld1oyNjVzampTdzU1c1dMMDlETlc2dDlmOUY2QSUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwcCIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHk+DQogICAgICAgIDxGb3JtUG9zdFBhcmFtZXRlciBOYW1lPSJkYXRhIiBWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7TWljcm9zb2Z0LlZpc3VhbFN0dWRpby5XZWIuQnJvd3NlckxpbmsuQ29yZUV4dGVuc2lvbkZhY3RvcnkuY29ubmVjdGVkJnF1b3Q7LCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6MX0iIFJlY29yZGVkVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O01pY3Jvc29mdC5WaXN1YWxTdHVkaW8uV2ViLkJyb3dzZXJMaW5rLkNvcmVFeHRlbnNpb25GYWN0b3J5LmNvbm5lY3RlZCZxdW90OywmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjF9IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJUcnVlIiAvPg0KICAgICAgPC9Gb3JtUG9zdEh0dHBCb2R5Pg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjczZGQxYWI3LWYxNDYtNDJjMy1hMGM2LTcyYTI3ZGYwNTUxZSIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9wb2xsIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcCIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQURnczViM1RlNlJyMjl3SVlLQ2ZrVFg5MWc2eE1FNU1IeURGWVczRWl0eEhRQUFBQUFPZ0FBQUFBSUFBQ0FBQUFCRTBnV3R0UyUyRkFRdDdRaTRQaGZZU2lzVUZqZGtwWkxMaEdVTFI4b2hPT05qQUFBQUQ0MmozNyUyRjZLSTFvNkZRcUhPOXU0V1prZ1B2MEpaZW15R0VDRzFVbnNXOHJleXo5eFJGSmNuZiUyRjE5VldndVhTWkFBQUFBSUlrVmhlQnNsR1pVZEQydEx0V3ROY3FsNFlZT0VKa3EwdE9PRCUyQnFwWmk0d0U4YmpoNjBGd252JTJGRGV3WjI2NXNqalN3NTVzV0wwOUROVzZ0OWY5RjZBJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQURnczViM1RlNlJyMjl3SVlLQ2ZrVFg5MWc2eE1FNU1IeURGWVczRWl0eEhRQUFBQUFPZ0FBQUFBSUFBQ0FBQUFCRTBnV3R0UyUyRkFRdDdRaTRQaGZZU2lzVUZqZGtwWkxMaEdVTFI4b2hPT05qQUFBQUQ0MmozNyUyRjZLSTFvNkZRcUhPOXU0V1prZ1B2MEpaZW15R0VDRzFVbnNXOHJleXo5eFJGSmNuZiUyRjE5VldndVhTWkFBQUFBSUlrVmhlQnNsR1pVZEQydEx0V3ROY3FsNFlZT0VKa3EwdE9PRCUyQnFwWmk0d0U4YmpoNjBGd252JTJGRGV3WjI2NXNqalN3NTVzV0wwOUROVzZ0OWY5RjZBJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0ibWVzc2FnZUlkIiBWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCVyUyQzElN0NCWCUyQzAiIFJlY29yZGVkVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQlclMkMxJTdDQlglMkMwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwcCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idGlkIiBWYWx1ZT0iMyIgUmVjb3JkZWRWYWx1ZT0iMyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Il8iIFZhbHVlPSIxMzk3NjMxNDMyNzcwIiBSZWNvcmRlZFZhbHVlPSIxMzk3NjMxNDMyNzcwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keSAvPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IkdFVCIgR3VpZD0iNjRlZGUyYjQtOTY4Zi00ZmEyLTgzY2UtY2ZiNDBmYWMyYjcwIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcC9DcmVhdGUiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iODhhZTM2YzYtY2ZkYS00NWE3LWFmODktMmRmOTZhZjQzYWNjIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3NlbmQiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFEZ3M1YjNUZTZScjI5d0lZS0Nma1RYOTFnNnhNRTVNSHlERllXM0VpdHhIUUFBQUFBT2dBQUFBQUlBQUNBQUFBQkUwZ1d0dFMlMkZBUXQ3UWk0UGhmWVNpc1VGamRrcFpMTGhHVUxSOG9oT09OakFBQUFENDJqMzclMkY2S0kxbzZGUXFITzl1NFdaa2dQdjBKWmVteUdFQ0cxVW5zVzhyZXl6OXhSRkpjbmYlMkYxOVZXZ3VYU1pBQUFBQUlJa1ZoZUJzbEdaVWREMnRMdFd0TmNxbDRZWU9FSmtxMHRPT0QlMkJxcFppNHdFOGJqaDYwRndudiUyRkRld1oyNjVzampTdzU1c1dMMDlETlc2dDlmOUY2QSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFEZ3M1YjNUZTZScjI5d0lZS0Nma1RYOTFnNnhNRTVNSHlERllXM0VpdHhIUUFBQUFBT2dBQUFBQUlBQUNBQUFBQkUwZ1d0dFMlMkZBUXQ3UWk0UGhmWVNpc1VGamRrcFpMTGhHVUxSOG9oT09OakFBQUFENDJqMzclMkY2S0kxbzZGUXFITzl1NFdaa2dQdjBKWmVteUdFQ0cxVW5zVzhyZXl6OXhSRkpjbmYlMkYxOVZXZ3VYU1pBQUFBQUlJa1ZoZUJzbEdaVWREMnRMdFd0TmNxbDRZWU9FSmtxMHRPT0QlMkJxcFppNHdFOGJqaDYwRndudiUyRkRld1oyNjVzampTdzU1c1dMMDlETlc2dDlmOUY2QSUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwcCIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHk+DQogICAgICAgIDxGb3JtUG9zdFBhcmFtZXRlciBOYW1lPSJkYXRhIiBWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7bWljcm9zb2Z0LnZpc3VhbHN0dWRpby53ZWIuYnJvd3NlcmxpbmsuaHRtbG1hcHBpbmdleHRlbnNpb25mYWN0b3J5LnJlc29sdmVVcmwmcXVvdDssJnF1b3Q7YXJncyZxdW90OzpbJnF1b3Q7fi9fX2Jyb3dzZXJMaW5rL3JlcXVlc3REYXRhLzAzMTAyNWNkOTgyYTQ1NGFhYjg2OTFlYTk5NGE2ZjZhJnF1b3Q7XSwmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjJ9IiBSZWNvcmRlZFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDttaWNyb3NvZnQudmlzdWFsc3R1ZGlvLndlYi5icm93c2VybGluay5odG1sbWFwcGluZ2V4dGVuc2lvbmZhY3RvcnkucmVzb2x2ZVVybCZxdW90OywmcXVvdDthcmdzJnF1b3Q7OlsmcXVvdDt+L19fYnJvd3NlckxpbmsvcmVxdWVzdERhdGEvMDMxMDI1Y2Q5ODJhNDU0YWFiODY5MWVhOTk0YTZmNmEmcXVvdDtdLCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6Mn0iIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IlRydWUiIC8+DQogICAgICA8L0Zvcm1Qb3N0SHR0cEJvZHk+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iYWZmNjFiMjQtZGVlOC00YTgyLTk0NjUtMmZkNzVjNDE0Yjg4IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3BvbGwiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQ29udGVudC1UeXBlIiBWYWx1ZT0iYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBwIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBRGdzNWIzVGU2UnIyOXdJWUtDZmtUWDkxZzZ4TUU1TUh5REZZVzNFaXR4SFFBQUFBQU9nQUFBQUFJQUFDQUFBQUJFMGdXdHRTJTJGQVF0N1FpNFBoZllTaXNVRmpka3BaTExoR1VMUjhvaE9PTmpBQUFBRDQyajM3JTJGNktJMW82RlFxSE85dTRXWmtnUHYwSlplbXlHRUNHMVVuc1c4cmV5ejl4UkZKY25mJTJGMTlWV2d1WFNaQUFBQUFJSWtWaGVCc2xHWlVkRDJ0THRXdE5jcWw0WVlPRUprcTB0T09EJTJCcXBaaTR3RThiamg2MEZ3bnYlMkZEZXdaMjY1c2pqU3c1NXNXTDA5RE5XNnQ5ZjlGNkElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBRGdzNWIzVGU2UnIyOXdJWUtDZmtUWDkxZzZ4TUU1TUh5REZZVzNFaXR4SFFBQUFBQU9nQUFBQUFJQUFDQUFBQUJFMGdXdHRTJTJGQVF0N1FpNFBoZllTaXNVRmpka3BaTExoR1VMUjhvaE9PTmpBQUFBRDQyajM3JTJGNktJMW82RlFxSE85dTRXWmtnUHYwSlplbXlHRUNHMVVuc1c4cmV5ejl4UkZKY25mJTJGMTlWV2d1WFNaQUFBQUFJSWtWaGVCc2xHWlVkRDJ0THRXdE5jcWw0WVlPRUprcTB0T09EJTJCcXBaaTR3RThiamg2MEZ3bnYlMkZEZXdaMjY1c2pqU3c1NXNXTDA5RE5XNnQ5ZjlGNkElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJtZXNzYWdlSWQiIFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JXJTJDMiU3Q0JYJTJDMCIgUmVjb3JkZWRWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCVyUyQzIlN0NCWCUyQzAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSI1IiBSZWNvcmRlZFZhbHVlPSI1IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0MzI5ODYiIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0MzI5ODYiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iR0VUIiBHdWlkPSJjMmQ4ZWI1YS1kMWVjLTRjZDEtYmExNS1hZWYwNzk1ZGRiNjgiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvX19icm93c2VyTGluay9yZXF1ZXN0RGF0YS8wMzEwMjVjZDk4MmE0NTRhYWI4NjkxZWE5OTRhNmY2YSIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQsICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlgtUmVxdWVzdGVkLVdpdGgiIFZhbHVlPSJYTUxIdHRwUmVxdWVzdCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcCIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSI4YTZhOTZmMy02ZjgwLTQ2ZTMtOTU5Mi01NmFjMzEyY2JjNjQiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvcG9sbCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFEZ3M1YjNUZTZScjI5d0lZS0Nma1RYOTFnNnhNRTVNSHlERllXM0VpdHhIUUFBQUFBT2dBQUFBQUlBQUNBQUFBQkUwZ1d0dFMlMkZBUXQ3UWk0UGhmWVNpc1VGamRrcFpMTGhHVUxSOG9oT09OakFBQUFENDJqMzclMkY2S0kxbzZGUXFITzl1NFdaa2dQdjBKWmVteUdFQ0cxVW5zVzhyZXl6OXhSRkpjbmYlMkYxOVZXZ3VYU1pBQUFBQUlJa1ZoZUJzbEdaVWREMnRMdFd0TmNxbDRZWU9FSmtxMHRPT0QlMkJxcFppNHdFOGJqaDYwRndudiUyRkRld1oyNjVzampTdzU1c1dMMDlETlc2dDlmOUY2QSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFEZ3M1YjNUZTZScjI5d0lZS0Nma1RYOTFnNnhNRTVNSHlERllXM0VpdHhIUUFBQUFBT2dBQUFBQUlBQUNBQUFBQkUwZ1d0dFMlMkZBUXQ3UWk0UGhmWVNpc1VGamRrcFpMTGhHVUxSOG9oT09OakFBQUFENDJqMzclMkY2S0kxbzZGUXFITzl1NFdaa2dQdjBKWmVteUdFQ0cxVW5zVzhyZXl6OXhSRkpjbmYlMkYxOVZXZ3VYU1pBQUFBQUlJa1ZoZUJzbEdaVWREMnRMdFd0TmNxbDRZWU9FSmtxMHRPT0QlMkJxcFppNHdFOGJqaDYwRndudiUyRkRld1oyNjVzampTdzU1c1dMMDlETlc2dDlmOUY2QSUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Im1lc3NhZ2VJZCIgVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQlclMkMzJTdDQlglMkMwIiBSZWNvcmRlZFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JXJTJDMyU3Q0JYJTJDMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwcCIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRpZCIgVmFsdWU9IjAiIFJlY29yZGVkVmFsdWU9IjAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQzMzA3OSIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQzMzA3OSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSJiMDcyMDM1ZC05NjlhLTQwMGYtOTZlZS1mZDA1MDY3MmQwZDIiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvc2VuZCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcCIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQURnczViM1RlNlJyMjl3SVlLQ2ZrVFg5MWc2eE1FNU1IeURGWVczRWl0eEhRQUFBQUFPZ0FBQUFBSUFBQ0FBQUFCRTBnV3R0UyUyRkFRdDdRaTRQaGZZU2lzVUZqZGtwWkxMaEdVTFI4b2hPT05qQUFBQUQ0MmozNyUyRjZLSTFvNkZRcUhPOXU0V1prZ1B2MEpaZW15R0VDRzFVbnNXOHJleXo5eFJGSmNuZiUyRjE5VldndVhTWkFBQUFBSUlrVmhlQnNsR1pVZEQydEx0V3ROY3FsNFlZT0VKa3EwdE9PRCUyQnFwWmk0d0U4YmpoNjBGd252JTJGRGV3WjI2NXNqalN3NTVzV0wwOUROVzZ0OWY5RjZBJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQURnczViM1RlNlJyMjl3SVlLQ2ZrVFg5MWc2eE1FNU1IeURGWVczRWl0eEhRQUFBQUFPZ0FBQUFBSUFBQ0FBQUFCRTBnV3R0UyUyRkFRdDdRaTRQaGZZU2lzVUZqZGtwWkxMaEdVTFI4b2hPT05qQUFBQUQ0MmozNyUyRjZLSTFvNkZRcUhPOXU0V1prZ1B2MEpaZW15R0VDRzFVbnNXOHJleXo5eFJGSmNuZiUyRjE5VldndVhTWkFBQUFBSUlrVmhlQnNsR1pVZEQydEx0V3ROY3FsNFlZT0VKa3EwdE9PRCUyQnFwWmk0d0U4YmpoNjBGd252JTJGRGV3WjI2NXNqalN3NTVzV0wwOUROVzZ0OWY5RjZBJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwcCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keT4NCiAgICAgICAgPEZvcm1Qb3N0UGFyYW1ldGVyIE5hbWU9ImRhdGEiIFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDttaWNyb3NvZnQudmlzdWFsc3R1ZGlvLndlYi5icm93c2VybGluay5odG1sbWFwcGluZ2V4dGVuc2lvbmZhY3RvcnkucmVzb2x2ZVNvdXJjZUZpbGVQYXRocyZxdW90OywmcXVvdDthcmdzJnF1b3Q7OltbJnF1b3Q7fi9WaWV3cy9BcHAvSW5kZXguY3NodG1sJnF1b3Q7XV0sJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzozfSIgUmVjb3JkZWRWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7bWljcm9zb2Z0LnZpc3VhbHN0dWRpby53ZWIuYnJvd3NlcmxpbmsuaHRtbG1hcHBpbmdleHRlbnNpb25mYWN0b3J5LnJlc29sdmVTb3VyY2VGaWxlUGF0aHMmcXVvdDssJnF1b3Q7YXJncyZxdW90OzpbWyZxdW90O34vVmlld3MvQXBwL0luZGV4LmNzaHRtbCZxdW90O11dLCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6M30iIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IlRydWUiIC8+DQogICAgICA8L0Zvcm1Qb3N0SHR0cEJvZHk+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iNTlkZTI0ZjEtMWZkNy00ZjcwLTlmMDYtZmUzNGEzMjJjMDY0IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL2Fib3J0IiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBwIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBRGdzNWIzVGU2UnIyOXdJWUtDZmtUWDkxZzZ4TUU1TUh5REZZVzNFaXR4SFFBQUFBQU9nQUFBQUFJQUFDQUFBQUJFMGdXdHRTJTJGQVF0N1FpNFBoZllTaXNVRmpka3BaTExoR1VMUjhvaE9PTmpBQUFBRDQyajM3JTJGNktJMW82RlFxSE85dTRXWmtnUHYwSlplbXlHRUNHMVVuc1c4cmV5ejl4UkZKY25mJTJGMTlWV2d1WFNaQUFBQUFJSWtWaGVCc2xHWlVkRDJ0THRXdE5jcWw0WVlPRUprcTB0T09EJTJCcXBaaTR3RThiamg2MEZ3bnYlMkZEZXdaMjY1c2pqU3c1NXNXTDA5RE5XNnQ5ZjlGNkElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBRGdzNWIzVGU2UnIyOXdJWUtDZmtUWDkxZzZ4TUU1TUh5REZZVzNFaXR4SFFBQUFBQU9nQUFBQUFJQUFDQUFBQUJFMGdXdHRTJTJGQVF0N1FpNFBoZllTaXNVRmpka3BaTExoR1VMUjhvaE9PTmpBQUFBRDQyajM3JTJGNktJMW82RlFxSE85dTRXWmtnUHYwSlplbXlHRUNHMVVuc1c4cmV5ejl4UkZKY25mJTJGMTlWV2d1WFNaQUFBQUFJSWtWaGVCc2xHWlVkRDJ0THRXdE5jcWw0WVlPRUprcTB0T09EJTJCcXBaaTR3RThiamg2MEZ3bnYlMkZEZXdaMjY1c2pqU3c1NXNXTDA5RE5XNnQ5ZjlGNkElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iOWMyNThkN2EtNWYyMC00ZDg1LWFmMDctNjM3ZmVhNTMxNDY1IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL25lZ290aWF0ZSIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAvQ3JlYXRlIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwcCUyRkNyZWF0ZSIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZDcmVhdGUiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNsaWVudFByb3RvY29sIiBWYWx1ZT0iMS4zIiBSZWNvcmRlZFZhbHVlPSIxLjMiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQzMzc1OSIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQzMzc1OSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSI0ZWU5MWJhYS00ZWZiLTQ5Y2ItOGNiMS1jMzBmMjM5Y2U5ZTQiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvY29ubmVjdCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAvQ3JlYXRlIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQTdPOGExVnNlc01zQmp2ZWRMSU9FU1RkaCUyQjlLbnpFamYlMkJzWHZlUm45bW1BQUFBQUFPZ0FBQUFBSUFBQ0FBQUFBMThXa0FVclElMkZBeXZ2bzdtZCUyRm1BOHVUTkMzd3luODlTR1lsZXdFRkpWQURBQUFBQTRXUk5vYyUyQm9uejU5aDd4MFJwRW9qTzQyNjRTalZrYmJoQkJESWsyMkVxdGxNOUNJd1NkS01SVHZ1Znp6R2JWcEFBQUFBaiUyQlptU1BkSXhOMkl2UlB1S3R5T09nMWVZT2RvZEFlJTJCT3ZIcVBHSW94c0FSbUlWdTRidDJiU2dSVm8zZDRXQ3FGRkhxcHV1bzd4SEpIWmJiZ2ZjdFhBJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUE3TzhhMVZzZXNNc0JqdmVkTElPRVNUZGglMkI5S256RWpmJTJCc1h2ZVJuOW1tQUFBQUFBT2dBQUFBQUlBQUNBQUFBQTE4V2tBVXJRJTJGQXl2dm83bWQlMkZtQTh1VE5DM3d5bjg5U0dZbGV3RUZKVkFEQUFBQUE0V1JOb2MlMkJvbno1OWg3eDBScEVvak80MjY0U2pWa2JiaEJCRElrMjJFcXRsTTlDSXdTZEtNUlR2dWZ6ekdiVnBBQUFBQWolMkJabVNQZEl4TjJJdlJQdUt0eU9PZzFlWU9kb2RBZSUyQk92SHFQR0lveHNBUm1JVnU0YnQyYlNnUlZvM2Q0V0NxRkZIcXB1dW83eEhKSFpiYmdmY3RYQSUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwcCUyRkNyZWF0ZSIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZDcmVhdGUiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRpZCIgVmFsdWU9IjAiIFJlY29yZGVkVmFsdWU9IjAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQzNDY5MSIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQzNDY5MSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSJjOGFlN2ViYi1mNzJmLTRjZWEtYTgzZC1lMzg4NDQ3ZDY2NTkiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvc2VuZCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcC9DcmVhdGUiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBN084YTFWc2VzTXNCanZlZExJT0VTVGRoJTJCOUtuekVqZiUyQnNYdmVSbjltbUFBQUFBQU9nQUFBQUFJQUFDQUFBQUExOFdrQVVyUSUyRkF5dnZvN21kJTJGbUE4dVROQzN3eW44OVNHWWxld0VGSlZBREFBQUFBNFdSTm9jJTJCb256NTloN3gwUnBFb2pPNDI2NFNqVmtiYmhCQkRJazIyRXF0bE05Q0l3U2RLTVJUdnVmenpHYlZwQUFBQUFqJTJCWm1TUGRJeE4ySXZSUHVLdHlPT2cxZVlPZG9kQWUlMkJPdkhxUEdJb3hzQVJtSVZ1NGJ0MmJTZ1JWbzNkNFdDcUZGSHFwdXVvN3hISkhaYmJnZmN0WEElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQTdPOGExVnNlc01zQmp2ZWRMSU9FU1RkaCUyQjlLbnpFamYlMkJzWHZlUm45bW1BQUFBQUFPZ0FBQUFBSUFBQ0FBQUFBMThXa0FVclElMkZBeXZ2bzdtZCUyRm1BOHVUTkMzd3luODlTR1lsZXdFRkpWQURBQUFBQTRXUk5vYyUyQm9uejU5aDd4MFJwRW9qTzQyNjRTalZrYmJoQkJESWsyMkVxdGxNOUNJd1NkS01SVHZ1Znp6R2JWcEFBQUFBaiUyQlptU1BkSXhOMkl2UlB1S3R5T09nMWVZT2RvZEFlJTJCT3ZIcVBHSW94c0FSbUlWdTRidDJiU2dSVm8zZDRXQ3FGRkhxcHV1bzd4SEpIWmJiZ2ZjdFhBJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwJTJGQ3JlYXRlIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwcCUyRkNyZWF0ZSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keT4NCiAgICAgICAgPEZvcm1Qb3N0UGFyYW1ldGVyIE5hbWU9ImRhdGEiIFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDtNaWNyb3NvZnQuVmlzdWFsU3R1ZGlvLldlYi5Ccm93c2VyTGluay5Db3JlRXh0ZW5zaW9uRmFjdG9yeS5jb25uZWN0ZWQmcXVvdDssJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzoxfSIgUmVjb3JkZWRWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7TWljcm9zb2Z0LlZpc3VhbFN0dWRpby5XZWIuQnJvd3NlckxpbmsuQ29yZUV4dGVuc2lvbkZhY3RvcnkuY29ubmVjdGVkJnF1b3Q7LCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6MX0iIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IlRydWUiIC8+DQogICAgICA8L0Zvcm1Qb3N0SHR0cEJvZHk+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iMGEwN2Y3NzEtYzIyOC00YzYwLTlhYmUtZjMwODQxYzE0YWEwIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3BvbGwiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQ29udGVudC1UeXBlIiBWYWx1ZT0iYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBwL0NyZWF0ZSIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUE3TzhhMVZzZXNNc0JqdmVkTElPRVNUZGglMkI5S256RWpmJTJCc1h2ZVJuOW1tQUFBQUFBT2dBQUFBQUlBQUNBQUFBQTE4V2tBVXJRJTJGQXl2dm83bWQlMkZtQTh1VE5DM3d5bjg5U0dZbGV3RUZKVkFEQUFBQUE0V1JOb2MlMkJvbno1OWg3eDBScEVvak80MjY0U2pWa2JiaEJCRElrMjJFcXRsTTlDSXdTZEtNUlR2dWZ6ekdiVnBBQUFBQWolMkJabVNQZEl4TjJJdlJQdUt0eU9PZzFlWU9kb2RBZSUyQk92SHFQR0lveHNBUm1JVnU0YnQyYlNnUlZvM2Q0V0NxRkZIcXB1dW83eEhKSFpiYmdmY3RYQSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBN084YTFWc2VzTXNCanZlZExJT0VTVGRoJTJCOUtuekVqZiUyQnNYdmVSbjltbUFBQUFBQU9nQUFBQUFJQUFDQUFBQUExOFdrQVVyUSUyRkF5dnZvN21kJTJGbUE4dVROQzN3eW44OVNHWWxld0VGSlZBREFBQUFBNFdSTm9jJTJCb256NTloN3gwUnBFb2pPNDI2NFNqVmtiYmhCQkRJazIyRXF0bE05Q0l3U2RLTVJUdnVmenpHYlZwQUFBQUFqJTJCWm1TUGRJeE4ySXZSUHVLdHlPT2cxZVlPZG9kQWUlMkJPdkhxUEdJb3hzQVJtSVZ1NGJ0MmJTZ1JWbzNkNFdDcUZGSHFwdXVvN3hISkhaYmJnZmN0WEElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJtZXNzYWdlSWQiIFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JZJTJDMSU3Q0JaJTJDMCIgUmVjb3JkZWRWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCWSUyQzElN0NCWiUyQzAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZDcmVhdGUiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwJTJGQ3JlYXRlIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSI1IiBSZWNvcmRlZFZhbHVlPSI1IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0MzQ3MTMiIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0MzQ3MTMiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iNzRlYTFiNGEtZDBiOC00NTYwLTk5YmEtYzVhZmY0OGU4YjdkIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3NlbmQiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAvQ3JlYXRlIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQTdPOGExVnNlc01zQmp2ZWRMSU9FU1RkaCUyQjlLbnpFamYlMkJzWHZlUm45bW1BQUFBQUFPZ0FBQUFBSUFBQ0FBQUFBMThXa0FVclElMkZBeXZ2bzdtZCUyRm1BOHVUTkMzd3luODlTR1lsZXdFRkpWQURBQUFBQTRXUk5vYyUyQm9uejU5aDd4MFJwRW9qTzQyNjRTalZrYmJoQkJESWsyMkVxdGxNOUNJd1NkS01SVHZ1Znp6R2JWcEFBQUFBaiUyQlptU1BkSXhOMkl2UlB1S3R5T09nMWVZT2RvZEFlJTJCT3ZIcVBHSW94c0FSbUlWdTRidDJiU2dSVm8zZDRXQ3FGRkhxcHV1bzd4SEpIWmJiZ2ZjdFhBJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUE3TzhhMVZzZXNNc0JqdmVkTElPRVNUZGglMkI5S256RWpmJTJCc1h2ZVJuOW1tQUFBQUFBT2dBQUFBQUlBQUNBQUFBQTE4V2tBVXJRJTJGQXl2dm83bWQlMkZtQTh1VE5DM3d5bjg5U0dZbGV3RUZKVkFEQUFBQUE0V1JOb2MlMkJvbno1OWg3eDBScEVvak80MjY0U2pWa2JiaEJCRElrMjJFcXRsTTlDSXdTZEtNUlR2dWZ6ekdiVnBBQUFBQWolMkJabVNQZEl4TjJJdlJQdUt0eU9PZzFlWU9kb2RBZSUyQk92SHFQR0lveHNBUm1JVnU0YnQyYlNnUlZvM2Q0V0NxRkZIcXB1dW83eEhKSFpiYmdmY3RYQSUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwcCUyRkNyZWF0ZSIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZDcmVhdGUiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHk+DQogICAgICAgIDxGb3JtUG9zdFBhcmFtZXRlciBOYW1lPSJkYXRhIiBWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7bWljcm9zb2Z0LnZpc3VhbHN0dWRpby53ZWIuYnJvd3NlcmxpbmsuaHRtbG1hcHBpbmdleHRlbnNpb25mYWN0b3J5LnJlc29sdmVVcmwmcXVvdDssJnF1b3Q7YXJncyZxdW90OzpbJnF1b3Q7fi9fX2Jyb3dzZXJMaW5rL3JlcXVlc3REYXRhL2IwZDJjMjc0OWY2MTQ1Y2E5MGYxNzJmZmZmYWUyNWIyJnF1b3Q7XSwmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjJ9IiBSZWNvcmRlZFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDttaWNyb3NvZnQudmlzdWFsc3R1ZGlvLndlYi5icm93c2VybGluay5odG1sbWFwcGluZ2V4dGVuc2lvbmZhY3RvcnkucmVzb2x2ZVVybCZxdW90OywmcXVvdDthcmdzJnF1b3Q7OlsmcXVvdDt+L19fYnJvd3NlckxpbmsvcmVxdWVzdERhdGEvYjBkMmMyNzQ5ZjYxNDVjYTkwZjE3MmZmZmZhZTI1YjImcXVvdDtdLCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6Mn0iIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IlRydWUiIC8+DQogICAgICA8L0Zvcm1Qb3N0SHR0cEJvZHk+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iNjJhMWM0MjctYzA1NS00YjIxLThjYTAtYWZkYTJmMjM1YWJkIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3BvbGwiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQ29udGVudC1UeXBlIiBWYWx1ZT0iYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBwL0NyZWF0ZSIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUE3TzhhMVZzZXNNc0JqdmVkTElPRVNUZGglMkI5S256RWpmJTJCc1h2ZVJuOW1tQUFBQUFBT2dBQUFBQUlBQUNBQUFBQTE4V2tBVXJRJTJGQXl2dm83bWQlMkZtQTh1VE5DM3d5bjg5U0dZbGV3RUZKVkFEQUFBQUE0V1JOb2MlMkJvbno1OWg3eDBScEVvak80MjY0U2pWa2JiaEJCRElrMjJFcXRsTTlDSXdTZEtNUlR2dWZ6ekdiVnBBQUFBQWolMkJabVNQZEl4TjJJdlJQdUt0eU9PZzFlWU9kb2RBZSUyQk92SHFQR0lveHNBUm1JVnU0YnQyYlNnUlZvM2Q0V0NxRkZIcXB1dW83eEhKSFpiYmdmY3RYQSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBN084YTFWc2VzTXNCanZlZExJT0VTVGRoJTJCOUtuekVqZiUyQnNYdmVSbjltbUFBQUFBQU9nQUFBQUFJQUFDQUFBQUExOFdrQVVyUSUyRkF5dnZvN21kJTJGbUE4dVROQzN3eW44OVNHWWxld0VGSlZBREFBQUFBNFdSTm9jJTJCb256NTloN3gwUnBFb2pPNDI2NFNqVmtiYmhCQkRJazIyRXF0bE05Q0l3U2RLTVJUdnVmenpHYlZwQUFBQUFqJTJCWm1TUGRJeE4ySXZSUHVLdHlPT2cxZVlPZG9kQWUlMkJPdkhxUEdJb3hzQVJtSVZ1NGJ0MmJTZ1JWbzNkNFdDcUZGSHFwdXVvN3hISkhaYmJnZmN0WEElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJtZXNzYWdlSWQiIFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JZJTJDMiU3Q0JaJTJDMCIgUmVjb3JkZWRWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCWSUyQzIlN0NCWiUyQzAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZDcmVhdGUiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwJTJGQ3JlYXRlIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSIxIiBSZWNvcmRlZFZhbHVlPSIxIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0MzQ3OTMiIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0MzQ3OTMiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iR0VUIiBHdWlkPSJhODRlZDIxMi01MWY1LTQxNDEtODY2ZC0xMDVjZTc1MzQzZmIiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvX19icm93c2VyTGluay9yZXF1ZXN0RGF0YS9iMGQyYzI3NDlmNjE0NWNhOTBmMTcyZmZmZmFlMjViMiIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQsICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlgtUmVxdWVzdGVkLVdpdGgiIFZhbHVlPSJYTUxIdHRwUmVxdWVzdCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcC9DcmVhdGUiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iMWZhN2U4MzEtYjM2ZS00MDg5LWEzM2MtYWRmYWQ3ODYyOTUwIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3BvbGwiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQ29udGVudC1UeXBlIiBWYWx1ZT0iYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBwL0NyZWF0ZSIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUE3TzhhMVZzZXNNc0JqdmVkTElPRVNUZGglMkI5S256RWpmJTJCc1h2ZVJuOW1tQUFBQUFBT2dBQUFBQUlBQUNBQUFBQTE4V2tBVXJRJTJGQXl2dm83bWQlMkZtQTh1VE5DM3d5bjg5U0dZbGV3RUZKVkFEQUFBQUE0V1JOb2MlMkJvbno1OWg3eDBScEVvak80MjY0U2pWa2JiaEJCRElrMjJFcXRsTTlDSXdTZEtNUlR2dWZ6ekdiVnBBQUFBQWolMkJabVNQZEl4TjJJdlJQdUt0eU9PZzFlWU9kb2RBZSUyQk92SHFQR0lveHNBUm1JVnU0YnQyYlNnUlZvM2Q0V0NxRkZIcXB1dW83eEhKSFpiYmdmY3RYQSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBN084YTFWc2VzTXNCanZlZExJT0VTVGRoJTJCOUtuekVqZiUyQnNYdmVSbjltbUFBQUFBQU9nQUFBQUFJQUFDQUFBQUExOFdrQVVyUSUyRkF5dnZvN21kJTJGbUE4dVROQzN3eW44OVNHWWxld0VGSlZBREFBQUFBNFdSTm9jJTJCb256NTloN3gwUnBFb2pPNDI2NFNqVmtiYmhCQkRJazIyRXF0bE05Q0l3U2RLTVJUdnVmenpHYlZwQUFBQUFqJTJCWm1TUGRJeE4ySXZSUHVLdHlPT2cxZVlPZG9kQWUlMkJPdkhxUEdJb3hzQVJtSVZ1NGJ0MmJTZ1JWbzNkNFdDcUZGSHFwdXVvN3hISkhaYmJnZmN0WEElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJtZXNzYWdlSWQiIFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JZJTJDMyU3Q0JaJTJDMCIgUmVjb3JkZWRWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCWSUyQzMlN0NCWiUyQzAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZDcmVhdGUiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwJTJGQ3JlYXRlIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSIzIiBSZWNvcmRlZFZhbHVlPSIzIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0MzQ5MzgiIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0MzQ5MzgiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iNGZjMzFiZTQtMWJiOC00NjVjLWE0ZjEtYTA0YWRhNTAzMmM0IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3NlbmQiIFRoaW5rVGltZT0iMyIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAvQ3JlYXRlIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQTdPOGExVnNlc01zQmp2ZWRMSU9FU1RkaCUyQjlLbnpFamYlMkJzWHZlUm45bW1BQUFBQUFPZ0FBQUFBSUFBQ0FBQUFBMThXa0FVclElMkZBeXZ2bzdtZCUyRm1BOHVUTkMzd3luODlTR1lsZXdFRkpWQURBQUFBQTRXUk5vYyUyQm9uejU5aDd4MFJwRW9qTzQyNjRTalZrYmJoQkJESWsyMkVxdGxNOUNJd1NkS01SVHZ1Znp6R2JWcEFBQUFBaiUyQlptU1BkSXhOMkl2UlB1S3R5T09nMWVZT2RvZEFlJTJCT3ZIcVBHSW94c0FSbUlWdTRidDJiU2dSVm8zZDRXQ3FGRkhxcHV1bzd4SEpIWmJiZ2ZjdFhBJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUE3TzhhMVZzZXNNc0JqdmVkTElPRVNUZGglMkI5S256RWpmJTJCc1h2ZVJuOW1tQUFBQUFBT2dBQUFBQUlBQUNBQUFBQTE4V2tBVXJRJTJGQXl2dm83bWQlMkZtQTh1VE5DM3d5bjg5U0dZbGV3RUZKVkFEQUFBQUE0V1JOb2MlMkJvbno1OWg3eDBScEVvak80MjY0U2pWa2JiaEJCRElrMjJFcXRsTTlDSXdTZEtNUlR2dWZ6ekdiVnBBQUFBQWolMkJabVNQZEl4TjJJdlJQdUt0eU9PZzFlWU9kb2RBZSUyQk92SHFQR0lveHNBUm1JVnU0YnQyYlNnUlZvM2Q0V0NxRkZIcXB1dW83eEhKSFpiYmdmY3RYQSUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwcCUyRkNyZWF0ZSIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZDcmVhdGUiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHk+DQogICAgICAgIDxGb3JtUG9zdFBhcmFtZXRlciBOYW1lPSJkYXRhIiBWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7bWljcm9zb2Z0LnZpc3VhbHN0dWRpby53ZWIuYnJvd3NlcmxpbmsuaHRtbG1hcHBpbmdleHRlbnNpb25mYWN0b3J5LnJlc29sdmVTb3VyY2VGaWxlUGF0aHMmcXVvdDssJnF1b3Q7YXJncyZxdW90OzpbWyZxdW90O34vVmlld3MvQXBwL0NyZWF0ZS5jc2h0bWwmcXVvdDtdXSwmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjN9IiBSZWNvcmRlZFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDttaWNyb3NvZnQudmlzdWFsc3R1ZGlvLndlYi5icm93c2VybGluay5odG1sbWFwcGluZ2V4dGVuc2lvbmZhY3RvcnkucmVzb2x2ZVNvdXJjZUZpbGVQYXRocyZxdW90OywmcXVvdDthcmdzJnF1b3Q7OltbJnF1b3Q7fi9WaWV3cy9BcHAvQ3JlYXRlLmNzaHRtbCZxdW90O11dLCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6M30iIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IlRydWUiIC8+DQogICAgICA8L0Zvcm1Qb3N0SHR0cEJvZHk+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iNmZiODE3YjktNjMyNy00YjQ2LWI4MjEtMmIzYzc3MjJmZGY5IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcC9DcmVhdGUiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAvRGV0YWlsLzEwIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcC9DcmVhdGUiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keT4NCiAgICAgICAgPEZvcm1Qb3N0UGFyYW1ldGVyIE5hbWU9Ik5hbWUiIFZhbHVlPSIxMjMiIFJlY29yZGVkVmFsdWU9IjEyMyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iVHJ1ZSIgLz4NCiAgICAgICAgPEZvcm1Qb3N0UGFyYW1ldGVyIE5hbWU9IkRlc2NyaXB0aW9uIiBWYWx1ZT0iMTIzIiBSZWNvcmRlZFZhbHVlPSIxMjMiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IlRydWUiIC8+DQogICAgICAgIDxGb3JtUG9zdFBhcmFtZXRlciBOYW1lPSJSZWRpcmVjdFVyaSIgVmFsdWU9IjEyMyIgUmVjb3JkZWRWYWx1ZT0iMTIzIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJUcnVlIiAvPg0KICAgICAgPC9Gb3JtUG9zdEh0dHBCb2R5Pg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjY0M2YxYjQ4LTlmYTItNDk3Ni05ZTZlLTZhYjMwZWRmMmMzZSIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9hYm9ydCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcC9DcmVhdGUiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBN084YTFWc2VzTXNCanZlZExJT0VTVGRoJTJCOUtuekVqZiUyQnNYdmVSbjltbUFBQUFBQU9nQUFBQUFJQUFDQUFBQUExOFdrQVVyUSUyRkF5dnZvN21kJTJGbUE4dVROQzN3eW44OVNHWWxld0VGSlZBREFBQUFBNFdSTm9jJTJCb256NTloN3gwUnBFb2pPNDI2NFNqVmtiYmhCQkRJazIyRXF0bE05Q0l3U2RLTVJUdnVmenpHYlZwQUFBQUFqJTJCWm1TUGRJeE4ySXZSUHVLdHlPT2cxZVlPZG9kQWUlMkJPdkhxUEdJb3hzQVJtSVZ1NGJ0MmJTZ1JWbzNkNFdDcUZGSHFwdXVvN3hISkhaYmJnZmN0WEElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQTdPOGExVnNlc01zQmp2ZWRMSU9FU1RkaCUyQjlLbnpFamYlMkJzWHZlUm45bW1BQUFBQUFPZ0FBQUFBSUFBQ0FBQUFBMThXa0FVclElMkZBeXZ2bzdtZCUyRm1BOHVUTkMzd3luODlTR1lsZXdFRkpWQURBQUFBQTRXUk5vYyUyQm9uejU5aDd4MFJwRW9qTzQyNjRTalZrYmJoQkJESWsyMkVxdGxNOUNJd1NkS01SVHZ1Znp6R2JWcEFBQUFBaiUyQlptU1BkSXhOMkl2UlB1S3R5T09nMWVZT2RvZEFlJTJCT3ZIcVBHSW94c0FSbUlWdTRidDJiU2dSVm8zZDRXQ3FGRkhxcHV1bzd4SEpIWmJiZ2ZjdFhBJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwJTJGQ3JlYXRlIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwcCUyRkNyZWF0ZSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keSAvPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9ImJiYjIxMmNjLTVhOTUtNGVjYi05ZDYxLWM4MDNjZGRhNWRiMCIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9uZWdvdGlhdGUiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQ29udGVudC1UeXBlIiBWYWx1ZT0iYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBwL0RldGFpbC8xMCIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZEZXRhaWwlMkYxMCIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZEZXRhaWwlMkYxMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY2xpZW50UHJvdG9jb2wiIFZhbHVlPSIxLjMiIFJlY29yZGVkVmFsdWU9IjEuMyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Il8iIFZhbHVlPSIxMzk3NjMxNDM4NjY1IiBSZWNvcmRlZFZhbHVlPSIxMzk3NjMxNDM4NjY1IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keSAvPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjJmZTQ4Zjg0LWEyN2QtNDlhMi1hMDg0LWMzOWZhOTdkZjAzMiIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9jb25uZWN0IiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcC9EZXRhaWwvMTAiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFEc3k2SURsek44enRBMjhEUiUyQnpLemlZb3JqOUdHdko1VFRLTW82RlBiUmJ3QUFBQUFPZ0FBQUFBSUFBQ0FBQUFCZmJlbnpCTVRXNmZGbWRxbGlTcGE0M0JudHVFZHkzT0VUZThzVlBPRmpyVEFBQUFBYzdtTWdtRWFSVFFrOFNqVTh3Wmp3cVlwSzZjWDBZamZkczFMSXg2ZXlNRm5TTWZtYXNLNTR4RnJuJTJCYmZmekR0QUFBQUF1d1Z1d3B0M3AzMUpIaVVXV1JTaGU0WTBGRjRYWlVUVXB3MXpOSjhCNDIlMkI4dXdZbjhGQ3ZXbGI3VlE5UW5tZmZsRXV1M2M5emNxdTgyakxuV0dZcGJBJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQURzeTZJRGx6Tjh6dEEyOERSJTJCekt6aVlvcmo5R0d2SjVUVEtNbzZGUGJSYndBQUFBQU9nQUFBQUFJQUFDQUFBQUJmYmVuekJNVFc2ZkZtZHFsaVNwYTQzQm50dUVkeTNPRVRlOHNWUE9GanJUQUFBQUFjN21NZ21FYVJUUWs4U2pVOHdaandxWXBLNmNYMFlqZmRzMUxJeDZleU1GblNNZm1hc0s1NHhGcm4lMkJiZmZ6RHRBQUFBQXV3VnV3cHQzcDMxSkhpVVdXUlNoZTRZMEZGNFhaVVRVcHcxek5KOEI0MiUyQjh1d1luOEZDdldsYjdWUTlRbm1mZmxFdXUzYzl6Y3F1ODJqTG5XR1lwYkElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZEZXRhaWwlMkYxMCIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZEZXRhaWwlMkYxMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idGlkIiBWYWx1ZT0iNiIgUmVjb3JkZWRWYWx1ZT0iNiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Il8iIFZhbHVlPSIxMzk3NjMxNDM5MTczIiBSZWNvcmRlZFZhbHVlPSIxMzk3NjMxNDM5MTczIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keSAvPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjkyMTBmMWVhLWM1ZTUtNDc3OS1iMzMzLTU1NzZlODVkNDI5NyIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9zZW5kIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBwL0RldGFpbC8xMCIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQURzeTZJRGx6Tjh6dEEyOERSJTJCekt6aVlvcmo5R0d2SjVUVEtNbzZGUGJSYndBQUFBQU9nQUFBQUFJQUFDQUFBQUJmYmVuekJNVFc2ZkZtZHFsaVNwYTQzQm50dUVkeTNPRVRlOHNWUE9GanJUQUFBQUFjN21NZ21FYVJUUWs4U2pVOHdaandxWXBLNmNYMFlqZmRzMUxJeDZleU1GblNNZm1hc0s1NHhGcm4lMkJiZmZ6RHRBQUFBQXV3VnV3cHQzcDMxSkhpVVdXUlNoZTRZMEZGNFhaVVRVcHcxek5KOEI0MiUyQjh1d1luOEZDdldsYjdWUTlRbm1mZmxFdXUzYzl6Y3F1ODJqTG5XR1lwYkElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBRHN5NklEbHpOOHp0QTI4RFIlMkJ6S3ppWW9yajlHR3ZKNVRUS01vNkZQYlJid0FBQUFBT2dBQUFBQUlBQUNBQUFBQmZiZW56Qk1UVzZmRm1kcWxpU3BhNDNCbnR1RWR5M09FVGU4c1ZQT0ZqclRBQUFBQWM3bU1nbUVhUlRRazhTalU4d1pqd3FZcEs2Y1gwWWpmZHMxTEl4NmV5TUZuU01mbWFzSzU0eEZybiUyQmJmZnpEdEFBQUFBdXdWdXdwdDNwMzFKSGlVV1dSU2hlNFkwRkY0WFpVVFVwdzF6Tko4QjQyJTJCOHV3WW44RkN2V2xiN1ZROVFubWZmbEV1dTNjOXpjcXU4MmpMbldHWXBiQSUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwcCUyRkRldGFpbCUyRjEwIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwcCUyRkRldGFpbCUyRjEwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5Pg0KICAgICAgICA8Rm9ybVBvc3RQYXJhbWV0ZXIgTmFtZT0iZGF0YSIgVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O01pY3Jvc29mdC5WaXN1YWxTdHVkaW8uV2ViLkJyb3dzZXJMaW5rLkNvcmVFeHRlbnNpb25GYWN0b3J5LmNvbm5lY3RlZCZxdW90OywmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjF9IiBSZWNvcmRlZFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDtNaWNyb3NvZnQuVmlzdWFsU3R1ZGlvLldlYi5Ccm93c2VyTGluay5Db3JlRXh0ZW5zaW9uRmFjdG9yeS5jb25uZWN0ZWQmcXVvdDssJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzoxfSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iVHJ1ZSIgLz4NCiAgICAgIDwvRm9ybVBvc3RIdHRwQm9keT4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSJkMGE2MTliYi1lNThlLTQwYjQtOGM0ZC04ZjNjMmIzOWRkOWIiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvcG9sbCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAvRGV0YWlsLzEwIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBRHN5NklEbHpOOHp0QTI4RFIlMkJ6S3ppWW9yajlHR3ZKNVRUS01vNkZQYlJid0FBQUFBT2dBQUFBQUlBQUNBQUFBQmZiZW56Qk1UVzZmRm1kcWxpU3BhNDNCbnR1RWR5M09FVGU4c1ZQT0ZqclRBQUFBQWM3bU1nbUVhUlRRazhTalU4d1pqd3FZcEs2Y1gwWWpmZHMxTEl4NmV5TUZuU01mbWFzSzU0eEZybiUyQmJmZnpEdEFBQUFBdXdWdXdwdDNwMzFKSGlVV1dSU2hlNFkwRkY0WFpVVFVwdzF6Tko4QjQyJTJCOHV3WW44RkN2V2xiN1ZROVFubWZmbEV1dTNjOXpjcXU4MmpMbldHWXBiQSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFEc3k2SURsek44enRBMjhEUiUyQnpLemlZb3JqOUdHdko1VFRLTW82RlBiUmJ3QUFBQUFPZ0FBQUFBSUFBQ0FBQUFCZmJlbnpCTVRXNmZGbWRxbGlTcGE0M0JudHVFZHkzT0VUZThzVlBPRmpyVEFBQUFBYzdtTWdtRWFSVFFrOFNqVTh3Wmp3cVlwSzZjWDBZamZkczFMSXg2ZXlNRm5TTWZtYXNLNTR4RnJuJTJCYmZmekR0QUFBQUF1d1Z1d3B0M3AzMUpIaVVXV1JTaGU0WTBGRjRYWlVUVXB3MXpOSjhCNDIlMkI4dXdZbjhGQ3ZXbGI3VlE5UW5tZmZsRXV1M2M5emNxdTgyakxuV0dZcGJBJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0ibWVzc2FnZUlkIiBWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCYSUyQzElN0NCYiUyQzAiIFJlY29yZGVkVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQmElMkMxJTdDQmIlMkMwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwJTJGRGV0YWlsJTJGMTAiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwJTJGRGV0YWlsJTJGMTAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRpZCIgVmFsdWU9IjEiIFJlY29yZGVkVmFsdWU9IjEiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQzOTE5MSIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQzOTE5MSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSJmZDRkOTAyMi1mMGNhLTRkMTYtOTY0YS00NmIyNDE1NjQwZjIiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvc2VuZCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcC9EZXRhaWwvMTAiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFEc3k2SURsek44enRBMjhEUiUyQnpLemlZb3JqOUdHdko1VFRLTW82RlBiUmJ3QUFBQUFPZ0FBQUFBSUFBQ0FBQUFCZmJlbnpCTVRXNmZGbWRxbGlTcGE0M0JudHVFZHkzT0VUZThzVlBPRmpyVEFBQUFBYzdtTWdtRWFSVFFrOFNqVTh3Wmp3cVlwSzZjWDBZamZkczFMSXg2ZXlNRm5TTWZtYXNLNTR4RnJuJTJCYmZmekR0QUFBQUF1d1Z1d3B0M3AzMUpIaVVXV1JTaGU0WTBGRjRYWlVUVXB3MXpOSjhCNDIlMkI4dXdZbjhGQ3ZXbGI3VlE5UW5tZmZsRXV1M2M5emNxdTgyakxuV0dZcGJBJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQURzeTZJRGx6Tjh6dEEyOERSJTJCekt6aVlvcmo5R0d2SjVUVEtNbzZGUGJSYndBQUFBQU9nQUFBQUFJQUFDQUFBQUJmYmVuekJNVFc2ZkZtZHFsaVNwYTQzQm50dUVkeTNPRVRlOHNWUE9GanJUQUFBQUFjN21NZ21FYVJUUWs4U2pVOHdaandxWXBLNmNYMFlqZmRzMUxJeDZleU1GblNNZm1hc0s1NHhGcm4lMkJiZmZ6RHRBQUFBQXV3VnV3cHQzcDMxSkhpVVdXUlNoZTRZMEZGNFhaVVRVcHcxek5KOEI0MiUyQjh1d1luOEZDdldsYjdWUTlRbm1mZmxFdXUzYzl6Y3F1ODJqTG5XR1lwYkElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZEZXRhaWwlMkYxMCIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZEZXRhaWwlMkYxMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keT4NCiAgICAgICAgPEZvcm1Qb3N0UGFyYW1ldGVyIE5hbWU9ImRhdGEiIFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDttaWNyb3NvZnQudmlzdWFsc3R1ZGlvLndlYi5icm93c2VybGluay5odG1sbWFwcGluZ2V4dGVuc2lvbmZhY3RvcnkucmVzb2x2ZVVybCZxdW90OywmcXVvdDthcmdzJnF1b3Q7OlsmcXVvdDt+L19fYnJvd3NlckxpbmsvcmVxdWVzdERhdGEvNTVkYWZmNGQ1ODc2NDc0NTlkZTgwYzkxMjQ3YTQ4NzMmcXVvdDtdLCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6Mn0iIFJlY29yZGVkVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O21pY3Jvc29mdC52aXN1YWxzdHVkaW8ud2ViLmJyb3dzZXJsaW5rLmh0bWxtYXBwaW5nZXh0ZW5zaW9uZmFjdG9yeS5yZXNvbHZlVXJsJnF1b3Q7LCZxdW90O2FyZ3MmcXVvdDs6WyZxdW90O34vX19icm93c2VyTGluay9yZXF1ZXN0RGF0YS81NWRhZmY0ZDU4NzY0NzQ1OWRlODBjOTEyNDdhNDg3MyZxdW90O10sJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzoyfSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iVHJ1ZSIgLz4NCiAgICAgIDwvRm9ybVBvc3RIdHRwQm9keT4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSJmMGExZjU0MS1lNzAxLTQ0YzgtYjczMC02NjYwYzBjYjI2MTEiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvcG9sbCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAvRGV0YWlsLzEwIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBRHN5NklEbHpOOHp0QTI4RFIlMkJ6S3ppWW9yajlHR3ZKNVRUS01vNkZQYlJid0FBQUFBT2dBQUFBQUlBQUNBQUFBQmZiZW56Qk1UVzZmRm1kcWxpU3BhNDNCbnR1RWR5M09FVGU4c1ZQT0ZqclRBQUFBQWM3bU1nbUVhUlRRazhTalU4d1pqd3FZcEs2Y1gwWWpmZHMxTEl4NmV5TUZuU01mbWFzSzU0eEZybiUyQmJmZnpEdEFBQUFBdXdWdXdwdDNwMzFKSGlVV1dSU2hlNFkwRkY0WFpVVFVwdzF6Tko4QjQyJTJCOHV3WW44RkN2V2xiN1ZROVFubWZmbEV1dTNjOXpjcXU4MmpMbldHWXBiQSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFEc3k2SURsek44enRBMjhEUiUyQnpLemlZb3JqOUdHdko1VFRLTW82RlBiUmJ3QUFBQUFPZ0FBQUFBSUFBQ0FBQUFCZmJlbnpCTVRXNmZGbWRxbGlTcGE0M0JudHVFZHkzT0VUZThzVlBPRmpyVEFBQUFBYzdtTWdtRWFSVFFrOFNqVTh3Wmp3cVlwSzZjWDBZamZkczFMSXg2ZXlNRm5TTWZtYXNLNTR4RnJuJTJCYmZmekR0QUFBQUF1d1Z1d3B0M3AzMUpIaVVXV1JTaGU0WTBGRjRYWlVUVXB3MXpOSjhCNDIlMkI4dXdZbjhGQ3ZXbGI3VlE5UW5tZmZsRXV1M2M5emNxdTgyakxuV0dZcGJBJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0ibWVzc2FnZUlkIiBWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCYSUyQzIlN0NCYiUyQzAiIFJlY29yZGVkVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQmElMkMyJTdDQmIlMkMwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwJTJGRGV0YWlsJTJGMTAiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwJTJGRGV0YWlsJTJGMTAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRpZCIgVmFsdWU9IjQiIFJlY29yZGVkVmFsdWU9IjQiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQzOTM0NyIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQzOTM0NyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJHRVQiIEd1aWQ9IjBkMmM5ZGYwLTJiNDQtNDU5Zi1iNmIwLWU3MGJkYTIzMjJjYSIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9fX2Jyb3dzZXJMaW5rL3JlcXVlc3REYXRhLzU1ZGFmZjRkNTg3NjQ3NDU5ZGU4MGM5MTI0N2E0ODczIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9ImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iWC1SZXF1ZXN0ZWQtV2l0aCIgVmFsdWU9IlhNTEh0dHBSZXF1ZXN0IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBwL0RldGFpbC8xMCIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSI2N2M3YWEyNS0xZTU2LTRiZTAtYTIxOC03ODYzODA0ZGI2ZTgiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvcG9sbCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAvRGV0YWlsLzEwIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBRHN5NklEbHpOOHp0QTI4RFIlMkJ6S3ppWW9yajlHR3ZKNVRUS01vNkZQYlJid0FBQUFBT2dBQUFBQUlBQUNBQUFBQmZiZW56Qk1UVzZmRm1kcWxpU3BhNDNCbnR1RWR5M09FVGU4c1ZQT0ZqclRBQUFBQWM3bU1nbUVhUlRRazhTalU4d1pqd3FZcEs2Y1gwWWpmZHMxTEl4NmV5TUZuU01mbWFzSzU0eEZybiUyQmJmZnpEdEFBQUFBdXdWdXdwdDNwMzFKSGlVV1dSU2hlNFkwRkY0WFpVVFVwdzF6Tko4QjQyJTJCOHV3WW44RkN2V2xiN1ZROVFubWZmbEV1dTNjOXpjcXU4MmpMbldHWXBiQSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFEc3k2SURsek44enRBMjhEUiUyQnpLemlZb3JqOUdHdko1VFRLTW82RlBiUmJ3QUFBQUFPZ0FBQUFBSUFBQ0FBQUFCZmJlbnpCTVRXNmZGbWRxbGlTcGE0M0JudHVFZHkzT0VUZThzVlBPRmpyVEFBQUFBYzdtTWdtRWFSVFFrOFNqVTh3Wmp3cVlwSzZjWDBZamZkczFMSXg2ZXlNRm5TTWZtYXNLNTR4RnJuJTJCYmZmekR0QUFBQUF1d1Z1d3B0M3AzMUpIaVVXV1JTaGU0WTBGRjRYWlVUVXB3MXpOSjhCNDIlMkI4dXdZbjhGQ3ZXbGI3VlE5UW5tZmZsRXV1M2M5emNxdTgyakxuV0dZcGJBJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0ibWVzc2FnZUlkIiBWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCYSUyQzMlN0NCYiUyQzAiIFJlY29yZGVkVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQmElMkMzJTdDQmIlMkMwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwJTJGRGV0YWlsJTJGMTAiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwJTJGRGV0YWlsJTJGMTAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRpZCIgVmFsdWU9IjYiIFJlY29yZGVkVmFsdWU9IjYiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQzOTQ5MyIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQzOTQ5MyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSIxZWEzZWIwMS04OTc4LTRmYWYtOGFiMS0xMThiMTEwMmI2MDAiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvc2VuZCIgVGhpbmtUaW1lPSIyIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcC9EZXRhaWwvMTAiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFEc3k2SURsek44enRBMjhEUiUyQnpLemlZb3JqOUdHdko1VFRLTW82RlBiUmJ3QUFBQUFPZ0FBQUFBSUFBQ0FBQUFCZmJlbnpCTVRXNmZGbWRxbGlTcGE0M0JudHVFZHkzT0VUZThzVlBPRmpyVEFBQUFBYzdtTWdtRWFSVFFrOFNqVTh3Wmp3cVlwSzZjWDBZamZkczFMSXg2ZXlNRm5TTWZtYXNLNTR4RnJuJTJCYmZmekR0QUFBQUF1d1Z1d3B0M3AzMUpIaVVXV1JTaGU0WTBGRjRYWlVUVXB3MXpOSjhCNDIlMkI4dXdZbjhGQ3ZXbGI3VlE5UW5tZmZsRXV1M2M5emNxdTgyakxuV0dZcGJBJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQURzeTZJRGx6Tjh6dEEyOERSJTJCekt6aVlvcmo5R0d2SjVUVEtNbzZGUGJSYndBQUFBQU9nQUFBQUFJQUFDQUFBQUJmYmVuekJNVFc2ZkZtZHFsaVNwYTQzQm50dUVkeTNPRVRlOHNWUE9GanJUQUFBQUFjN21NZ21FYVJUUWs4U2pVOHdaandxWXBLNmNYMFlqZmRzMUxJeDZleU1GblNNZm1hc0s1NHhGcm4lMkJiZmZ6RHRBQUFBQXV3VnV3cHQzcDMxSkhpVVdXUlNoZTRZMEZGNFhaVVRVcHcxek5KOEI0MiUyQjh1d1luOEZDdldsYjdWUTlRbm1mZmxFdXUzYzl6Y3F1ODJqTG5XR1lwYkElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZEZXRhaWwlMkYxMCIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZEZXRhaWwlMkYxMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keT4NCiAgICAgICAgPEZvcm1Qb3N0UGFyYW1ldGVyIE5hbWU9ImRhdGEiIFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDttaWNyb3NvZnQudmlzdWFsc3R1ZGlvLndlYi5icm93c2VybGluay5odG1sbWFwcGluZ2V4dGVuc2lvbmZhY3RvcnkucmVzb2x2ZVNvdXJjZUZpbGVQYXRocyZxdW90OywmcXVvdDthcmdzJnF1b3Q7OltbJnF1b3Q7fi9WaWV3cy9BcHAvRGV0YWlsLmNzaHRtbCZxdW90O11dLCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6M30iIFJlY29yZGVkVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O21pY3Jvc29mdC52aXN1YWxzdHVkaW8ud2ViLmJyb3dzZXJsaW5rLmh0bWxtYXBwaW5nZXh0ZW5zaW9uZmFjdG9yeS5yZXNvbHZlU291cmNlRmlsZVBhdGhzJnF1b3Q7LCZxdW90O2FyZ3MmcXVvdDs6W1smcXVvdDt+L1ZpZXdzL0FwcC9EZXRhaWwuY3NodG1sJnF1b3Q7XV0sJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzozfSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iVHJ1ZSIgLz4NCiAgICAgIDwvRm9ybVBvc3RIdHRwQm9keT4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJHRVQiIEd1aWQ9IjQ5MjAxNWI3LTkxNDQtNDAzYS1hOWIzLWNjZWJhZTQxYWU3ZCIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAvRGVsZXRlLzEwIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBwL0RldGFpbC8xMCIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSI4Y2U1ZmYyYi1kMGI0LTQ0YWMtYTBiOC0wMzNiMzBjYjJhNmYiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvYWJvcnQiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAvRGV0YWlsLzEwIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBRHN5NklEbHpOOHp0QTI4RFIlMkJ6S3ppWW9yajlHR3ZKNVRUS01vNkZQYlJid0FBQUFBT2dBQUFBQUlBQUNBQUFBQmZiZW56Qk1UVzZmRm1kcWxpU3BhNDNCbnR1RWR5M09FVGU4c1ZQT0ZqclRBQUFBQWM3bU1nbUVhUlRRazhTalU4d1pqd3FZcEs2Y1gwWWpmZHMxTEl4NmV5TUZuU01mbWFzSzU0eEZybiUyQmJmZnpEdEFBQUFBdXdWdXdwdDNwMzFKSGlVV1dSU2hlNFkwRkY0WFpVVFVwdzF6Tko4QjQyJTJCOHV3WW44RkN2V2xiN1ZROVFubWZmbEV1dTNjOXpjcXU4MmpMbldHWXBiQSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFEc3k2SURsek44enRBMjhEUiUyQnpLemlZb3JqOUdHdko1VFRLTW82RlBiUmJ3QUFBQUFPZ0FBQUFBSUFBQ0FBQUFCZmJlbnpCTVRXNmZGbWRxbGlTcGE0M0JudHVFZHkzT0VUZThzVlBPRmpyVEFBQUFBYzdtTWdtRWFSVFFrOFNqVTh3Wmp3cVlwSzZjWDBZamZkczFMSXg2ZXlNRm5TTWZtYXNLNTR4RnJuJTJCYmZmekR0QUFBQUF1d1Z1d3B0M3AzMUpIaVVXV1JTaGU0WTBGRjRYWlVUVXB3MXpOSjhCNDIlMkI4dXdZbjhGQ3ZXbGI3VlE5UW5tZmZsRXV1M2M5emNxdTgyakxuV0dZcGJBJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwJTJGRGV0YWlsJTJGMTAiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwJTJGRGV0YWlsJTJGMTAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSIzNTVkOTc3OC1kYTFjLTRhMDYtYmM4Ni1hNGFmYzdkZGYyZDMiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvbmVnb3RpYXRlIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcC9EZWxldGUvMTAiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwJTJGRGVsZXRlJTJGMTAiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwJTJGRGVsZXRlJTJGMTAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNsaWVudFByb3RvY29sIiBWYWx1ZT0iMS4zIiBSZWNvcmRlZFZhbHVlPSIxLjMiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQ0MjI1NSIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQ0MjI1NSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSJjNjQ0ZmUxNC05MjBkLTRlNjAtOTg1NC0xNmI0YmE3NmE0MjgiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvY29ubmVjdCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAvRGVsZXRlLzEwIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQVlPUmZVYXAlMkJ5NUlsMFplaFZsRnRVeGhrdEZ3UlFCVE9ZMUFpUExKNTNWQUFBQUFBT2dBQUFBQUlBQUNBQUFBQ0NHckNSMUJxb1F5MWcwJTJCQXdNbFliemVNZkF6JTJCVzFOVExJNG9BVlpUZ0ZEQUFBQUFtamlwbUZzZG9MdjhvZE12diUyQlZBRFFKN08yam9USnFETmx6aCUyQlA1enVBa1hSJTJGaG01aWJ5eUJWWmRpMlBRTDZGQUFBQUFITWJteXpFT1JkeUlQdlFKMzEzTjUyWmphc3BCOXZhVlklMkJFZUdHWU9HJTJGWm5GTUVEelhaZ2JXUlFGdHBVV1c0NjhPQVV1a0pweEx2NWpUbW9FcENwQkElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQVlPUmZVYXAlMkJ5NUlsMFplaFZsRnRVeGhrdEZ3UlFCVE9ZMUFpUExKNTNWQUFBQUFBT2dBQUFBQUlBQUNBQUFBQ0NHckNSMUJxb1F5MWcwJTJCQXdNbFliemVNZkF6JTJCVzFOVExJNG9BVlpUZ0ZEQUFBQUFtamlwbUZzZG9MdjhvZE12diUyQlZBRFFKN08yam9USnFETmx6aCUyQlA1enVBa1hSJTJGaG01aWJ5eUJWWmRpMlBRTDZGQUFBQUFITWJteXpFT1JkeUlQdlFKMzEzTjUyWmphc3BCOXZhVlklMkJFZUdHWU9HJTJGWm5GTUVEelhaZ2JXUlFGdHBVV1c0NjhPQVV1a0pweEx2NWpUbW9FcENwQkElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZEZWxldGUlMkYxMCIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZEZWxldGUlMkYxMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idGlkIiBWYWx1ZT0iNyIgUmVjb3JkZWRWYWx1ZT0iNyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Il8iIFZhbHVlPSIxMzk3NjMxNDQyODAyIiBSZWNvcmRlZFZhbHVlPSIxMzk3NjMxNDQyODAyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keSAvPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjI4ZTAzYWM4LTc0NTUtNDJlZC04ODE4LTA5OWE2YTU4NDgzYSIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9zZW5kIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBwL0RlbGV0ZS8xMCIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFZT1JmVWFwJTJCeTVJbDBaZWhWbEZ0VXhoa3RGd1JRQlRPWTFBaVBMSjUzVkFBQUFBQU9nQUFBQUFJQUFDQUFBQUNDR3JDUjFCcW9ReTFnMCUyQkF3TWxZYnplTWZBeiUyQlcxTlRMSTRvQVZaVGdGREFBQUFBbWppcG1Gc2RvTHY4b2RNdnYlMkJWQURRSjdPMmpvVEpxRE5semglMkJQNXp1QWtYUiUyRmhtNWlieXlCVlpkaTJQUUw2RkFBQUFBSE1ibXl6RU9SZHlJUHZRSjMxM041MlpqYXNwQjl2YVZZJTJCRWVHR1lPRyUyRlpuRk1FRHpYWmdiV1JRRnRwVVdXNDY4T0FVdWtKcHhMdjVqVG1vRXBDcEJBJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFZT1JmVWFwJTJCeTVJbDBaZWhWbEZ0VXhoa3RGd1JRQlRPWTFBaVBMSjUzVkFBQUFBQU9nQUFBQUFJQUFDQUFBQUNDR3JDUjFCcW9ReTFnMCUyQkF3TWxZYnplTWZBeiUyQlcxTlRMSTRvQVZaVGdGREFBQUFBbWppcG1Gc2RvTHY4b2RNdnYlMkJWQURRSjdPMmpvVEpxRE5semglMkJQNXp1QWtYUiUyRmhtNWlieXlCVlpkaTJQUUw2RkFBQUFBSE1ibXl6RU9SZHlJUHZRSjMxM041MlpqYXNwQjl2YVZZJTJCRWVHR1lPRyUyRlpuRk1FRHpYWmdiV1JRRnRwVVdXNDY4T0FVdWtKcHhMdjVqVG1vRXBDcEJBJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwJTJGRGVsZXRlJTJGMTAiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwJTJGRGVsZXRlJTJGMTAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHk+DQogICAgICAgIDxGb3JtUG9zdFBhcmFtZXRlciBOYW1lPSJkYXRhIiBWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7TWljcm9zb2Z0LlZpc3VhbFN0dWRpby5XZWIuQnJvd3NlckxpbmsuQ29yZUV4dGVuc2lvbkZhY3RvcnkuY29ubmVjdGVkJnF1b3Q7LCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6MX0iIFJlY29yZGVkVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O01pY3Jvc29mdC5WaXN1YWxTdHVkaW8uV2ViLkJyb3dzZXJMaW5rLkNvcmVFeHRlbnNpb25GYWN0b3J5LmNvbm5lY3RlZCZxdW90OywmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjF9IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJUcnVlIiAvPg0KICAgICAgPC9Gb3JtUG9zdEh0dHBCb2R5Pg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9ImJiNjhhMGMxLWUxZDctNDc4Yi05NDg3LTk3MDU4OTZiODhjMiIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9wb2xsIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcC9EZWxldGUvMTAiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBWU9SZlVhcCUyQnk1SWwwWmVoVmxGdFV4aGt0RndSUUJUT1kxQWlQTEo1M1ZBQUFBQUFPZ0FBQUFBSUFBQ0FBQUFDQ0dyQ1IxQnFvUXkxZzAlMkJBd01sWWJ6ZU1mQXolMkJXMU5UTEk0b0FWWlRnRkRBQUFBQW1qaXBtRnNkb0x2OG9kTXZ2JTJCVkFEUUo3TzJqb1RKcURObHpoJTJCUDV6dUFrWFIlMkZobTVpYnl5QlZaZGkyUFFMNkZBQUFBQUhNYm15ekVPUmR5SVB2UUozMTNONTJaamFzcEI5dmFWWSUyQkVlR0dZT0clMkZabkZNRUR6WFpnYldSUUZ0cFVXVzQ2OE9BVXVrSnB4THY1alRtb0VwQ3BCQSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBWU9SZlVhcCUyQnk1SWwwWmVoVmxGdFV4aGt0RndSUUJUT1kxQWlQTEo1M1ZBQUFBQUFPZ0FBQUFBSUFBQ0FBQUFDQ0dyQ1IxQnFvUXkxZzAlMkJBd01sWWJ6ZU1mQXolMkJXMU5UTEk0b0FWWlRnRkRBQUFBQW1qaXBtRnNkb0x2OG9kTXZ2JTJCVkFEUUo3TzJqb1RKcURObHpoJTJCUDV6dUFrWFIlMkZobTVpYnl5QlZaZGkyUFFMNkZBQUFBQUhNYm15ekVPUmR5SVB2UUozMTNONTJaamFzcEI5dmFWWSUyQkVlR0dZT0clMkZabkZNRUR6WFpnYldSUUZ0cFVXVzQ2OE9BVXVrSnB4THY1alRtb0VwQ3BCQSUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Im1lc3NhZ2VJZCIgVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQmMlMkMxJTdDQmQlMkMwIiBSZWNvcmRlZFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JjJTJDMSU3Q0JkJTJDMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwcCUyRkRlbGV0ZSUyRjEwIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwcCUyRkRlbGV0ZSUyRjEwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSIwIiBSZWNvcmRlZFZhbHVlPSIwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0NDI4MjgiIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0NDI4MjgiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iNmNiODkyNDctOWEzNS00YmVhLTkxNGItMTY5Y2I3YmIxNzEyIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3NlbmQiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAvRGVsZXRlLzEwIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQVlPUmZVYXAlMkJ5NUlsMFplaFZsRnRVeGhrdEZ3UlFCVE9ZMUFpUExKNTNWQUFBQUFBT2dBQUFBQUlBQUNBQUFBQ0NHckNSMUJxb1F5MWcwJTJCQXdNbFliemVNZkF6JTJCVzFOVExJNG9BVlpUZ0ZEQUFBQUFtamlwbUZzZG9MdjhvZE12diUyQlZBRFFKN08yam9USnFETmx6aCUyQlA1enVBa1hSJTJGaG01aWJ5eUJWWmRpMlBRTDZGQUFBQUFITWJteXpFT1JkeUlQdlFKMzEzTjUyWmphc3BCOXZhVlklMkJFZUdHWU9HJTJGWm5GTUVEelhaZ2JXUlFGdHBVV1c0NjhPQVV1a0pweEx2NWpUbW9FcENwQkElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQVlPUmZVYXAlMkJ5NUlsMFplaFZsRnRVeGhrdEZ3UlFCVE9ZMUFpUExKNTNWQUFBQUFBT2dBQUFBQUlBQUNBQUFBQ0NHckNSMUJxb1F5MWcwJTJCQXdNbFliemVNZkF6JTJCVzFOVExJNG9BVlpUZ0ZEQUFBQUFtamlwbUZzZG9MdjhvZE12diUyQlZBRFFKN08yam9USnFETmx6aCUyQlA1enVBa1hSJTJGaG01aWJ5eUJWWmRpMlBRTDZGQUFBQUFITWJteXpFT1JkeUlQdlFKMzEzTjUyWmphc3BCOXZhVlklMkJFZUdHWU9HJTJGWm5GTUVEelhaZ2JXUlFGdHBVV1c0NjhPQVV1a0pweEx2NWpUbW9FcENwQkElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZEZWxldGUlMkYxMCIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZEZWxldGUlMkYxMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keT4NCiAgICAgICAgPEZvcm1Qb3N0UGFyYW1ldGVyIE5hbWU9ImRhdGEiIFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDttaWNyb3NvZnQudmlzdWFsc3R1ZGlvLndlYi5icm93c2VybGluay5odG1sbWFwcGluZ2V4dGVuc2lvbmZhY3RvcnkucmVzb2x2ZVVybCZxdW90OywmcXVvdDthcmdzJnF1b3Q7OlsmcXVvdDt+L19fYnJvd3NlckxpbmsvcmVxdWVzdERhdGEvMTQ0N2JlZWMxODRhNDk4ODg5YmMwMTk1YmExYTIwZmImcXVvdDtdLCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6Mn0iIFJlY29yZGVkVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O21pY3Jvc29mdC52aXN1YWxzdHVkaW8ud2ViLmJyb3dzZXJsaW5rLmh0bWxtYXBwaW5nZXh0ZW5zaW9uZmFjdG9yeS5yZXNvbHZlVXJsJnF1b3Q7LCZxdW90O2FyZ3MmcXVvdDs6WyZxdW90O34vX19icm93c2VyTGluay9yZXF1ZXN0RGF0YS8xNDQ3YmVlYzE4NGE0OTg4ODliYzAxOTViYTFhMjBmYiZxdW90O10sJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzoyfSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iVHJ1ZSIgLz4NCiAgICAgIDwvRm9ybVBvc3RIdHRwQm9keT4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSI5YzQ3MzA1Mi1hZDc4LTRmNzctYjdhOS02YmE2ODJkNTRjZjIiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvcG9sbCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAvRGVsZXRlLzEwIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQVlPUmZVYXAlMkJ5NUlsMFplaFZsRnRVeGhrdEZ3UlFCVE9ZMUFpUExKNTNWQUFBQUFBT2dBQUFBQUlBQUNBQUFBQ0NHckNSMUJxb1F5MWcwJTJCQXdNbFliemVNZkF6JTJCVzFOVExJNG9BVlpUZ0ZEQUFBQUFtamlwbUZzZG9MdjhvZE12diUyQlZBRFFKN08yam9USnFETmx6aCUyQlA1enVBa1hSJTJGaG01aWJ5eUJWWmRpMlBRTDZGQUFBQUFITWJteXpFT1JkeUlQdlFKMzEzTjUyWmphc3BCOXZhVlklMkJFZUdHWU9HJTJGWm5GTUVEelhaZ2JXUlFGdHBVV1c0NjhPQVV1a0pweEx2NWpUbW9FcENwQkElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQVlPUmZVYXAlMkJ5NUlsMFplaFZsRnRVeGhrdEZ3UlFCVE9ZMUFpUExKNTNWQUFBQUFBT2dBQUFBQUlBQUNBQUFBQ0NHckNSMUJxb1F5MWcwJTJCQXdNbFliemVNZkF6JTJCVzFOVExJNG9BVlpUZ0ZEQUFBQUFtamlwbUZzZG9MdjhvZE12diUyQlZBRFFKN08yam9USnFETmx6aCUyQlA1enVBa1hSJTJGaG01aWJ5eUJWWmRpMlBRTDZGQUFBQUFITWJteXpFT1JkeUlQdlFKMzEzTjUyWmphc3BCOXZhVlklMkJFZUdHWU9HJTJGWm5GTUVEelhaZ2JXUlFGdHBVV1c0NjhPQVV1a0pweEx2NWpUbW9FcENwQkElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJtZXNzYWdlSWQiIFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JjJTJDMiU3Q0JkJTJDMCIgUmVjb3JkZWRWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCYyUyQzIlN0NCZCUyQzAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZEZWxldGUlMkYxMCIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZEZWxldGUlMkYxMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idGlkIiBWYWx1ZT0iMiIgUmVjb3JkZWRWYWx1ZT0iMiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Il8iIFZhbHVlPSIxMzk3NjMxNDQyOTg4IiBSZWNvcmRlZFZhbHVlPSIxMzk3NjMxNDQyOTg4IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keSAvPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IkdFVCIgR3VpZD0iNzY4YWFiMTMtNDg3ZC00Njg2LWEyNTUtNmIwNzUxOWMyYmE0IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL19fYnJvd3NlckxpbmsvcmVxdWVzdERhdGEvMTQ0N2JlZWMxODRhNDk4ODg5YmMwMTk1YmExYTIwZmIiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0iYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJYLVJlcXVlc3RlZC1XaXRoIiBWYWx1ZT0iWE1MSHR0cFJlcXVlc3QiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAvRGVsZXRlLzEwIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjUyM2E4NzRmLWZjMDYtNGU0NC05ZTJlLWM1MTIwNDEyYTJmMiIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9wb2xsIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcC9EZWxldGUvMTAiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBWU9SZlVhcCUyQnk1SWwwWmVoVmxGdFV4aGt0RndSUUJUT1kxQWlQTEo1M1ZBQUFBQUFPZ0FBQUFBSUFBQ0FBQUFDQ0dyQ1IxQnFvUXkxZzAlMkJBd01sWWJ6ZU1mQXolMkJXMU5UTEk0b0FWWlRnRkRBQUFBQW1qaXBtRnNkb0x2OG9kTXZ2JTJCVkFEUUo3TzJqb1RKcURObHpoJTJCUDV6dUFrWFIlMkZobTVpYnl5QlZaZGkyUFFMNkZBQUFBQUhNYm15ekVPUmR5SVB2UUozMTNONTJaamFzcEI5dmFWWSUyQkVlR0dZT0clMkZabkZNRUR6WFpnYldSUUZ0cFVXVzQ2OE9BVXVrSnB4THY1alRtb0VwQ3BCQSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBWU9SZlVhcCUyQnk1SWwwWmVoVmxGdFV4aGt0RndSUUJUT1kxQWlQTEo1M1ZBQUFBQUFPZ0FBQUFBSUFBQ0FBQUFDQ0dyQ1IxQnFvUXkxZzAlMkJBd01sWWJ6ZU1mQXolMkJXMU5UTEk0b0FWWlRnRkRBQUFBQW1qaXBtRnNkb0x2OG9kTXZ2JTJCVkFEUUo3TzJqb1RKcURObHpoJTJCUDV6dUFrWFIlMkZobTVpYnl5QlZaZGkyUFFMNkZBQUFBQUhNYm15ekVPUmR5SVB2UUozMTNONTJaamFzcEI5dmFWWSUyQkVlR0dZT0clMkZabkZNRUR6WFpnYldSUUZ0cFVXVzQ2OE9BVXVrSnB4THY1alRtb0VwQ3BCQSUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Im1lc3NhZ2VJZCIgVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQmMlMkMzJTdDQmQlMkMwIiBSZWNvcmRlZFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JjJTJDMyU3Q0JkJTJDMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwcCUyRkRlbGV0ZSUyRjEwIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwcCUyRkRlbGV0ZSUyRjEwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSIxIiBSZWNvcmRlZFZhbHVlPSIxIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0NDMzNDgiIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0NDMzNDgiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iMTY0MWUwZmMtOTNkNy00ZTFmLTkwNzktMjkyMjcwNTQxNmM5IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcC9EZWxldGUvMTAiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBwL0RlbGV0ZS8xMCIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iNmQ3OTE4Y2QtMjhjOS00ZWE3LTgxNmYtMTVkZGQwYTI1NzNiIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3NlbmQiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAvRGVsZXRlLzEwIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQVlPUmZVYXAlMkJ5NUlsMFplaFZsRnRVeGhrdEZ3UlFCVE9ZMUFpUExKNTNWQUFBQUFBT2dBQUFBQUlBQUNBQUFBQ0NHckNSMUJxb1F5MWcwJTJCQXdNbFliemVNZkF6JTJCVzFOVExJNG9BVlpUZ0ZEQUFBQUFtamlwbUZzZG9MdjhvZE12diUyQlZBRFFKN08yam9USnFETmx6aCUyQlA1enVBa1hSJTJGaG01aWJ5eUJWWmRpMlBRTDZGQUFBQUFITWJteXpFT1JkeUlQdlFKMzEzTjUyWmphc3BCOXZhVlklMkJFZUdHWU9HJTJGWm5GTUVEelhaZ2JXUlFGdHBVV1c0NjhPQVV1a0pweEx2NWpUbW9FcENwQkElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQVlPUmZVYXAlMkJ5NUlsMFplaFZsRnRVeGhrdEZ3UlFCVE9ZMUFpUExKNTNWQUFBQUFBT2dBQUFBQUlBQUNBQUFBQ0NHckNSMUJxb1F5MWcwJTJCQXdNbFliemVNZkF6JTJCVzFOVExJNG9BVlpUZ0ZEQUFBQUFtamlwbUZzZG9MdjhvZE12diUyQlZBRFFKN08yam9USnFETmx6aCUyQlA1enVBa1hSJTJGaG01aWJ5eUJWWmRpMlBRTDZGQUFBQUFITWJteXpFT1JkeUlQdlFKMzEzTjUyWmphc3BCOXZhVlklMkJFZUdHWU9HJTJGWm5GTUVEelhaZ2JXUlFGdHBVV1c0NjhPQVV1a0pweEx2NWpUbW9FcENwQkElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZEZWxldGUlMkYxMCIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZEZWxldGUlMkYxMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keT4NCiAgICAgICAgPEZvcm1Qb3N0UGFyYW1ldGVyIE5hbWU9ImRhdGEiIFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDttaWNyb3NvZnQudmlzdWFsc3R1ZGlvLndlYi5icm93c2VybGluay5odG1sbWFwcGluZ2V4dGVuc2lvbmZhY3RvcnkucmVzb2x2ZVNvdXJjZUZpbGVQYXRocyZxdW90OywmcXVvdDthcmdzJnF1b3Q7OltbJnF1b3Q7fi9WaWV3cy9BcHAvRGVsZXRlLmNzaHRtbCZxdW90O11dLCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6M30iIFJlY29yZGVkVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O21pY3Jvc29mdC52aXN1YWxzdHVkaW8ud2ViLmJyb3dzZXJsaW5rLmh0bWxtYXBwaW5nZXh0ZW5zaW9uZmFjdG9yeS5yZXNvbHZlU291cmNlRmlsZVBhdGhzJnF1b3Q7LCZxdW90O2FyZ3MmcXVvdDs6W1smcXVvdDt+L1ZpZXdzL0FwcC9EZWxldGUuY3NodG1sJnF1b3Q7XV0sJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzozfSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iVHJ1ZSIgLz4NCiAgICAgIDwvRm9ybVBvc3RIdHRwQm9keT4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSJmZDg5MjJhMy0wYzYwLTRhZDctODViZC1jYWI3MTY3MDE4MTUiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvYWJvcnQiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAvRGVsZXRlLzEwIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQVlPUmZVYXAlMkJ5NUlsMFplaFZsRnRVeGhrdEZ3UlFCVE9ZMUFpUExKNTNWQUFBQUFBT2dBQUFBQUlBQUNBQUFBQ0NHckNSMUJxb1F5MWcwJTJCQXdNbFliemVNZkF6JTJCVzFOVExJNG9BVlpUZ0ZEQUFBQUFtamlwbUZzZG9MdjhvZE12diUyQlZBRFFKN08yam9USnFETmx6aCUyQlA1enVBa1hSJTJGaG01aWJ5eUJWWmRpMlBRTDZGQUFBQUFITWJteXpFT1JkeUlQdlFKMzEzTjUyWmphc3BCOXZhVlklMkJFZUdHWU9HJTJGWm5GTUVEelhaZ2JXUlFGdHBVV1c0NjhPQVV1a0pweEx2NWpUbW9FcENwQkElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQVlPUmZVYXAlMkJ5NUlsMFplaFZsRnRVeGhrdEZ3UlFCVE9ZMUFpUExKNTNWQUFBQUFBT2dBQUFBQUlBQUNBQUFBQ0NHckNSMUJxb1F5MWcwJTJCQXdNbFliemVNZkF6JTJCVzFOVExJNG9BVlpUZ0ZEQUFBQUFtamlwbUZzZG9MdjhvZE12diUyQlZBRFFKN08yam9USnFETmx6aCUyQlA1enVBa1hSJTJGaG01aWJ5eUJWWmRpMlBRTDZGQUFBQUFITWJteXpFT1JkeUlQdlFKMzEzTjUyWmphc3BCOXZhVlklMkJFZUdHWU9HJTJGWm5GTUVEelhaZ2JXUlFGdHBVV1c0NjhPQVV1a0pweEx2NWpUbW9FcENwQkElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZEZWxldGUlMkYxMCIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAlMkZEZWxldGUlMkYxMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keSAvPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjFiYTk3YzQ5LThiMzgtNGE4MC05NzdiLWU0NGMxMGFkODcyNSIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9uZWdvdGlhdGUiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQ29udGVudC1UeXBlIiBWYWx1ZT0iYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBwIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwcCIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNsaWVudFByb3RvY29sIiBWYWx1ZT0iMS4zIiBSZWNvcmRlZFZhbHVlPSIxLjMiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQ0NDA4NSIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQ0NDA4NSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSI1ZWRjNWFhYi03Nzk1LTRhNWMtOGIyMC0xMDQyZTM1MThjZTUiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvY29ubmVjdCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBZExQdmtwM2hEZGVXQ3pHVGRnWlJQSlU4b0RkTkolMkI1b1BCZEI1VXg0ZXJRQUFBQUFPZ0FBQUFBSUFBQ0FBQUFEczIxUGF6ZnBVUHRhMjZIZFdVYkFJVlVSRW5KWm40b0VRRTd2UW9rS0RtVEFBQUFETlp0R2lya09IQU91b3BhSHNBNXVOVzdHJTJGV0VVbWM3SUkxMHVzR01XaUlmJTJGdmtMalk4eEkxRm44dnVTcm1MdDFBQUFBQXAzR0M1VWZSS2FiJTJCWXo0Qkd1M2NZOGdNZWZ3WmpMaE5KQWY5RVBWUklYQmtjVGY4YnJQb256dlclMkZ0eks1UmpmQjIzdVlVeUVZR1VtUDQwSmZiNjklMkJnJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFkTFB2a3AzaERkZVdDekdUZGdaUlBKVThvRGROSiUyQjVvUEJkQjVVeDRlclFBQUFBQU9nQUFBQUFJQUFDQUFBQURzMjFQYXpmcFVQdGEyNkhkV1ViQUlWVVJFbkpabjRvRVFFN3ZRb2tLRG1UQUFBQUROWnRHaXJrT0hBT3VvcGFIc0E1dU5XN0clMkZXRVVtYzdJSTEwdXNHTVdpSWYlMkZ2a0xqWTh4STFGbjh2dVNybUx0MUFBQUFBcDNHQzVVZlJLYWIlMkJZejRCR3UzY1k4Z01lZndaakxoTkpBZjlFUFZSSVhCa2NUZjhiclBvbnp2VyUyRnR6SzVSamZCMjN1WVV5RVlHVW1QNDBKZmI2OSUyQmclM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSI2IiBSZWNvcmRlZFZhbHVlPSI2IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0NDQ4NzAiIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0NDQ4NzAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iNzE1ZjIyM2YtZWI0Yy00NjQ1LWFmMjItOGE3MWQ2ZDJlNDFhIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3NlbmQiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBZExQdmtwM2hEZGVXQ3pHVGRnWlJQSlU4b0RkTkolMkI1b1BCZEI1VXg0ZXJRQUFBQUFPZ0FBQUFBSUFBQ0FBQUFEczIxUGF6ZnBVUHRhMjZIZFdVYkFJVlVSRW5KWm40b0VRRTd2UW9rS0RtVEFBQUFETlp0R2lya09IQU91b3BhSHNBNXVOVzdHJTJGV0VVbWM3SUkxMHVzR01XaUlmJTJGdmtMalk4eEkxRm44dnVTcm1MdDFBQUFBQXAzR0M1VWZSS2FiJTJCWXo0Qkd1M2NZOGdNZWZ3WmpMaE5KQWY5RVBWUklYQmtjVGY4YnJQb256dlclMkZ0eks1UmpmQjIzdVlVeUVZR1VtUDQwSmZiNjklMkJnJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFkTFB2a3AzaERkZVdDekdUZGdaUlBKVThvRGROSiUyQjVvUEJkQjVVeDRlclFBQUFBQU9nQUFBQUFJQUFDQUFBQURzMjFQYXpmcFVQdGEyNkhkV1ViQUlWVVJFbkpabjRvRVFFN3ZRb2tLRG1UQUFBQUROWnRHaXJrT0hBT3VvcGFIc0E1dU5XN0clMkZXRVVtYzdJSTEwdXNHTVdpSWYlMkZ2a0xqWTh4STFGbjh2dVNybUx0MUFBQUFBcDNHQzVVZlJLYWIlMkJZejRCR3UzY1k4Z01lZndaakxoTkpBZjlFUFZSSVhCa2NUZjhiclBvbnp2VyUyRnR6SzVSamZCMjN1WVV5RVlHVW1QNDBKZmI2OSUyQmclM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5Pg0KICAgICAgICA8Rm9ybVBvc3RQYXJhbWV0ZXIgTmFtZT0iZGF0YSIgVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O01pY3Jvc29mdC5WaXN1YWxTdHVkaW8uV2ViLkJyb3dzZXJMaW5rLkNvcmVFeHRlbnNpb25GYWN0b3J5LmNvbm5lY3RlZCZxdW90OywmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjF9IiBSZWNvcmRlZFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDtNaWNyb3NvZnQuVmlzdWFsU3R1ZGlvLldlYi5Ccm93c2VyTGluay5Db3JlRXh0ZW5zaW9uRmFjdG9yeS5jb25uZWN0ZWQmcXVvdDssJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzoxfSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iVHJ1ZSIgLz4NCiAgICAgIDwvRm9ybVBvc3RIdHRwQm9keT4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSJiYTc2MmRjNC1jOWUwLTRhODEtOGIyMy1iMDQ2MzQ3MmM1NzEiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvcG9sbCIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBZExQdmtwM2hEZGVXQ3pHVGRnWlJQSlU4b0RkTkolMkI1b1BCZEI1VXg0ZXJRQUFBQUFPZ0FBQUFBSUFBQ0FBQUFEczIxUGF6ZnBVUHRhMjZIZFdVYkFJVlVSRW5KWm40b0VRRTd2UW9rS0RtVEFBQUFETlp0R2lya09IQU91b3BhSHNBNXVOVzdHJTJGV0VVbWM3SUkxMHVzR01XaUlmJTJGdmtMalk4eEkxRm44dnVTcm1MdDFBQUFBQXAzR0M1VWZSS2FiJTJCWXo0Qkd1M2NZOGdNZWZ3WmpMaE5KQWY5RVBWUklYQmtjVGY4YnJQb256dlclMkZ0eks1UmpmQjIzdVlVeUVZR1VtUDQwSmZiNjklMkJnJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFkTFB2a3AzaERkZVdDekdUZGdaUlBKVThvRGROSiUyQjVvUEJkQjVVeDRlclFBQUFBQU9nQUFBQUFJQUFDQUFBQURzMjFQYXpmcFVQdGEyNkhkV1ViQUlWVVJFbkpabjRvRVFFN3ZRb2tLRG1UQUFBQUROWnRHaXJrT0hBT3VvcGFIc0E1dU5XN0clMkZXRVVtYzdJSTEwdXNHTVdpSWYlMkZ2a0xqWTh4STFGbjh2dVNybUx0MUFBQUFBcDNHQzVVZlJLYWIlMkJZejRCR3UzY1k4Z01lZndaakxoTkpBZjlFUFZSSVhCa2NUZjhiclBvbnp2VyUyRnR6SzVSamZCMjN1WVV5RVlHVW1QNDBKZmI2OSUyQmclM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJtZXNzYWdlSWQiIFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JlJTJDMSU3Q0JmJTJDMCIgUmVjb3JkZWRWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCZSUyQzElN0NCZiUyQzAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSIyIiBSZWNvcmRlZFZhbHVlPSIyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0NDQ4OTMiIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0NDQ4OTMiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iZDA1ZTBjOGItNDNkYy00YTdlLWFhMWUtYmU3OTk1MzMwZTUyIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3NlbmQiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBZExQdmtwM2hEZGVXQ3pHVGRnWlJQSlU4b0RkTkolMkI1b1BCZEI1VXg0ZXJRQUFBQUFPZ0FBQUFBSUFBQ0FBQUFEczIxUGF6ZnBVUHRhMjZIZFdVYkFJVlVSRW5KWm40b0VRRTd2UW9rS0RtVEFBQUFETlp0R2lya09IQU91b3BhSHNBNXVOVzdHJTJGV0VVbWM3SUkxMHVzR01XaUlmJTJGdmtMalk4eEkxRm44dnVTcm1MdDFBQUFBQXAzR0M1VWZSS2FiJTJCWXo0Qkd1M2NZOGdNZWZ3WmpMaE5KQWY5RVBWUklYQmtjVGY4YnJQb256dlclMkZ0eks1UmpmQjIzdVlVeUVZR1VtUDQwSmZiNjklMkJnJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFkTFB2a3AzaERkZVdDekdUZGdaUlBKVThvRGROSiUyQjVvUEJkQjVVeDRlclFBQUFBQU9nQUFBQUFJQUFDQUFBQURzMjFQYXpmcFVQdGEyNkhkV1ViQUlWVVJFbkpabjRvRVFFN3ZRb2tLRG1UQUFBQUROWnRHaXJrT0hBT3VvcGFIc0E1dU5XN0clMkZXRVVtYzdJSTEwdXNHTVdpSWYlMkZ2a0xqWTh4STFGbjh2dVNybUx0MUFBQUFBcDNHQzVVZlJLYWIlMkJZejRCR3UzY1k4Z01lZndaakxoTkpBZjlFUFZSSVhCa2NUZjhiclBvbnp2VyUyRnR6SzVSamZCMjN1WVV5RVlHVW1QNDBKZmI2OSUyQmclM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5Pg0KICAgICAgICA8Rm9ybVBvc3RQYXJhbWV0ZXIgTmFtZT0iZGF0YSIgVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O21pY3Jvc29mdC52aXN1YWxzdHVkaW8ud2ViLmJyb3dzZXJsaW5rLmh0bWxtYXBwaW5nZXh0ZW5zaW9uZmFjdG9yeS5yZXNvbHZlVXJsJnF1b3Q7LCZxdW90O2FyZ3MmcXVvdDs6WyZxdW90O34vX19icm93c2VyTGluay9yZXF1ZXN0RGF0YS9iMTQ5ZmI4YWUzZjg0Nzg3YmNjMTU3OGFkOTA3OTcyOCZxdW90O10sJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzoyfSIgUmVjb3JkZWRWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7bWljcm9zb2Z0LnZpc3VhbHN0dWRpby53ZWIuYnJvd3NlcmxpbmsuaHRtbG1hcHBpbmdleHRlbnNpb25mYWN0b3J5LnJlc29sdmVVcmwmcXVvdDssJnF1b3Q7YXJncyZxdW90OzpbJnF1b3Q7fi9fX2Jyb3dzZXJMaW5rL3JlcXVlc3REYXRhL2IxNDlmYjhhZTNmODQ3ODdiY2MxNTc4YWQ5MDc5NzI4JnF1b3Q7XSwmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjJ9IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJUcnVlIiAvPg0KICAgICAgPC9Gb3JtUG9zdEh0dHBCb2R5Pg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjVmYTg1YzQ0LWY5YTgtNDM2YS1hM2NlLTQ2MTE0ODljOWUwNiIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9wb2xsIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcCIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFkTFB2a3AzaERkZVdDekdUZGdaUlBKVThvRGROSiUyQjVvUEJkQjVVeDRlclFBQUFBQU9nQUFBQUFJQUFDQUFBQURzMjFQYXpmcFVQdGEyNkhkV1ViQUlWVVJFbkpabjRvRVFFN3ZRb2tLRG1UQUFBQUROWnRHaXJrT0hBT3VvcGFIc0E1dU5XN0clMkZXRVVtYzdJSTEwdXNHTVdpSWYlMkZ2a0xqWTh4STFGbjh2dVNybUx0MUFBQUFBcDNHQzVVZlJLYWIlMkJZejRCR3UzY1k4Z01lZndaakxoTkpBZjlFUFZSSVhCa2NUZjhiclBvbnp2VyUyRnR6SzVSamZCMjN1WVV5RVlHVW1QNDBKZmI2OSUyQmclM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQWRMUHZrcDNoRGRlV0N6R1RkZ1pSUEpVOG9EZE5KJTJCNW9QQmRCNVV4NGVyUUFBQUFBT2dBQUFBQUlBQUNBQUFBRHMyMVBhemZwVVB0YTI2SGRXVWJBSVZVUkVuSlpuNG9FUUU3dlFva0tEbVRBQUFBRE5adEdpcmtPSEFPdW9wYUhzQTV1Tlc3RyUyRldFVW1jN0lJMTB1c0dNV2lJZiUyRnZrTGpZOHhJMUZuOHZ1U3JtTHQxQUFBQUFwM0dDNVVmUkthYiUyQll6NEJHdTNjWThnTWVmd1pqTGhOSkFmOUVQVlJJWEJrY1RmOGJyUG9uenZXJTJGdHpLNVJqZkIyM3VZVXlFWUdVbVA0MEpmYjY5JTJCZyUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Im1lc3NhZ2VJZCIgVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQmUlMkMyJTdDQmYlMkMwIiBSZWNvcmRlZFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JlJTJDMiU3Q0JmJTJDMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwcCIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRpZCIgVmFsdWU9IjQiIFJlY29yZGVkVmFsdWU9IjQiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQ0NTA3MSIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQ0NTA3MSIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJHRVQiIEd1aWQ9ImUxOGNmYmVmLTA2NWMtNDQ1Mi04NzZhLTY1NjRkNzM5OWQzOSIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9fX2Jyb3dzZXJMaW5rL3JlcXVlc3REYXRhL2IxNDlmYjhhZTNmODQ3ODdiY2MxNTc4YWQ5MDc5NzI4IiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9ImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iWC1SZXF1ZXN0ZWQtV2l0aCIgVmFsdWU9IlhNTEh0dHBSZXF1ZXN0IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvQXBwIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjgwMTIzNGYzLTM1ODYtNDVmNi05OWNhLWJmY2I4Njg1YjE5MCIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9wb2xsIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcCIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFkTFB2a3AzaERkZVdDekdUZGdaUlBKVThvRGROSiUyQjVvUEJkQjVVeDRlclFBQUFBQU9nQUFBQUFJQUFDQUFBQURzMjFQYXpmcFVQdGEyNkhkV1ViQUlWVVJFbkpabjRvRVFFN3ZRb2tLRG1UQUFBQUROWnRHaXJrT0hBT3VvcGFIc0E1dU5XN0clMkZXRVVtYzdJSTEwdXNHTVdpSWYlMkZ2a0xqWTh4STFGbjh2dVNybUx0MUFBQUFBcDNHQzVVZlJLYWIlMkJZejRCR3UzY1k4Z01lZndaakxoTkpBZjlFUFZSSVhCa2NUZjhiclBvbnp2VyUyRnR6SzVSamZCMjN1WVV5RVlHVW1QNDBKZmI2OSUyQmclM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQWRMUHZrcDNoRGRlV0N6R1RkZ1pSUEpVOG9EZE5KJTJCNW9QQmRCNVV4NGVyUUFBQUFBT2dBQUFBQUlBQUNBQUFBRHMyMVBhemZwVVB0YTI2SGRXVWJBSVZVUkVuSlpuNG9FUUU3dlFva0tEbVRBQUFBRE5adEdpcmtPSEFPdW9wYUhzQTV1Tlc3RyUyRldFVW1jN0lJMTB1c0dNV2lJZiUyRnZrTGpZOHhJMUZuOHZ1U3JtTHQxQUFBQUFwM0dDNVVmUkthYiUyQll6NEJHdTNjWThnTWVmd1pqTGhOSkFmOUVQVlJJWEJrY1RmOGJyUG9uenZXJTJGdHpLNVJqZkIyM3VZVXlFWUdVbVA0MEpmYjY5JTJCZyUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Im1lc3NhZ2VJZCIgVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQmUlMkMzJTdDQmYlMkMwIiBSZWNvcmRlZFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JlJTJDMyU3Q0JmJTJDMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwcCIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRpZCIgVmFsdWU9IjciIFJlY29yZGVkVmFsdWU9IjciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQ0NTU0MyIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQ0NTU0MyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSIyN2Q3ZmYwYS1mYmMzLTQ3YjctYTZiYS1mNjNhMDMwNzg0MzciIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvc2VuZCIgVGhpbmtUaW1lPSIxIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcCIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFkTFB2a3AzaERkZVdDekdUZGdaUlBKVThvRGROSiUyQjVvUEJkQjVVeDRlclFBQUFBQU9nQUFBQUFJQUFDQUFBQURzMjFQYXpmcFVQdGEyNkhkV1ViQUlWVVJFbkpabjRvRVFFN3ZRb2tLRG1UQUFBQUROWnRHaXJrT0hBT3VvcGFIc0E1dU5XN0clMkZXRVVtYzdJSTEwdXNHTVdpSWYlMkZ2a0xqWTh4STFGbjh2dVNybUx0MUFBQUFBcDNHQzVVZlJLYWIlMkJZejRCR3UzY1k4Z01lZndaakxoTkpBZjlFUFZSSVhCa2NUZjhiclBvbnp2VyUyRnR6SzVSamZCMjN1WVV5RVlHVW1QNDBKZmI2OSUyQmclM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQWRMUHZrcDNoRGRlV0N6R1RkZ1pSUEpVOG9EZE5KJTJCNW9QQmRCNVV4NGVyUUFBQUFBT2dBQUFBQUlBQUNBQUFBRHMyMVBhemZwVVB0YTI2SGRXVWJBSVZVUkVuSlpuNG9FUUU3dlFva0tEbVRBQUFBRE5adEdpcmtPSEFPdW9wYUhzQTV1Tlc3RyUyRldFVW1jN0lJMTB1c0dNV2lJZiUyRnZrTGpZOHhJMUZuOHZ1U3JtTHQxQUFBQUFwM0dDNVVmUkthYiUyQll6NEJHdTNjWThnTWVmd1pqTGhOSkFmOUVQVlJJWEJrY1RmOGJyUG9uenZXJTJGdHpLNVJqZkIyM3VZVXlFWUdVbVA0MEpmYjY5JTJCZyUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRkFwcCIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHk+DQogICAgICAgIDxGb3JtUG9zdFBhcmFtZXRlciBOYW1lPSJkYXRhIiBWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7bWljcm9zb2Z0LnZpc3VhbHN0dWRpby53ZWIuYnJvd3NlcmxpbmsuaHRtbG1hcHBpbmdleHRlbnNpb25mYWN0b3J5LnJlc29sdmVTb3VyY2VGaWxlUGF0aHMmcXVvdDssJnF1b3Q7YXJncyZxdW90OzpbWyZxdW90O34vVmlld3MvQXBwL0luZGV4LmNzaHRtbCZxdW90O11dLCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6M30iIFJlY29yZGVkVmFsdWU9InsmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O21pY3Jvc29mdC52aXN1YWxzdHVkaW8ud2ViLmJyb3dzZXJsaW5rLmh0bWxtYXBwaW5nZXh0ZW5zaW9uZmFjdG9yeS5yZXNvbHZlU291cmNlRmlsZVBhdGhzJnF1b3Q7LCZxdW90O2FyZ3MmcXVvdDs6W1smcXVvdDt+L1ZpZXdzL0FwcC9JbmRleC5jc2h0bWwmcXVvdDtdXSwmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjN9IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJUcnVlIiAvPg0KICAgICAgPC9Gb3JtUG9zdEh0dHBCb2R5Pg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IkdFVCIgR3VpZD0iMWQ4MjdhMjctM2FkNi00Zjk3LTgwMzgtYWE0MzNmNzlkZmE3IiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FjY291bnQvTG9nb3V0IiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzL0FwcCIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJQT1NUIiBHdWlkPSJmZWQxNGNjNy00MzgwLTQ4NmEtOThlYi1hZDcwNTJiYWY2OTAiIFZlcnNpb249IjEuMSIgVXJsPSJodHRwOi8vbG9jYWxob3N0OjE3NTQ5L2E0NjgwMDA4M2UyOTQzOWE4NWQyMTZkYmM5MjAzYjk0L2FydGVyeVNpZ25hbFIvYWJvcnQiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9BcHAiIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBZExQdmtwM2hEZGVXQ3pHVGRnWlJQSlU4b0RkTkolMkI1b1BCZEI1VXg0ZXJRQUFBQUFPZ0FBQUFBSUFBQ0FBQUFEczIxUGF6ZnBVUHRhMjZIZFdVYkFJVlVSRW5KWm40b0VRRTd2UW9rS0RtVEFBQUFETlp0R2lya09IQU91b3BhSHNBNXVOVzdHJTJGV0VVbWM3SUkxMHVzR01XaUlmJTJGdmtMalk4eEkxRm44dnVTcm1MdDFBQUFBQXAzR0M1VWZSS2FiJTJCWXo0Qkd1M2NZOGdNZWZ3WmpMaE5KQWY5RVBWUklYQmtjVGY4YnJQb256dlclMkZ0eks1UmpmQjIzdVlVeUVZR1VtUDQwSmZiNjklMkJnJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUFkTFB2a3AzaERkZVdDekdUZGdaUlBKVThvRGROSiUyQjVvUEJkQjVVeDRlclFBQUFBQU9nQUFBQUFJQUFDQUFBQURzMjFQYXpmcFVQdGEyNkhkV1ViQUlWVVJFbkpabjRvRVFFN3ZRb2tLRG1UQUFBQUROWnRHaXJrT0hBT3VvcGFIc0E1dU5XN0clMkZXRVVtYzdJSTEwdXNHTVdpSWYlMkZ2a0xqWTh4STFGbjh2dVNybUx0MUFBQUFBcDNHQzVVZlJLYWIlMkJZejRCR3UzY1k4Z01lZndaakxoTkpBZjlFUFZSSVhCa2NUZjhiclBvbnp2VyUyRnR6SzVSamZCMjN1WVV5RVlHVW1QNDBKZmI2OSUyQmclM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkZBcHAiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGQXBwIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iNTNiYjE2NmYtODdhMy00MzIzLWE1MDktZGEwZWEyM2ZhNDRlIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL25lZ290aWF0ZSIgVGhpbmtUaW1lPSIwIiBUaW1lb3V0PSIzMDAiIFBhcnNlRGVwZW5kZW50UmVxdWVzdHM9IlRydWUiIEZvbGxvd1JlZGlyZWN0cz0iVHJ1ZSIgUmVjb3JkUmVzdWx0PSJUcnVlIiBDYWNoZT0iRmFsc2UiIFJlc3BvbnNlVGltZUdvYWw9IjAiIEVuY29kaW5nPSJ1dGYtOCIgRXhwZWN0ZWRIdHRwU3RhdHVzQ29kZT0iMCIgRXhwZWN0ZWRSZXNwb25zZVVybD0iIiBSZXBvcnRpbmdOYW1lPSIiIElnbm9yZUh0dHBTdGF0dXNDb2RlPSJGYWxzZSI+DQogICAgICA8SGVhZGVycz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJDb250ZW50LVR5cGUiIFZhbHVlPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy8iIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY2xpZW50UHJvdG9jb2wiIFZhbHVlPSIxLjMiIFJlY29yZGVkVmFsdWU9IjEuMyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Il8iIFZhbHVlPSIxMzk3NjMxNDQ3MzEzIiBSZWNvcmRlZFZhbHVlPSIxMzk3NjMxNDQ3MzEzIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keSAvPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9ImEzYTVjYjRlLTEwNDUtNGJmOC1iMjhlLWY4NjNiMWVkNmYxYiIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9jb25uZWN0IiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzLyIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUE5N20zU2ZQeVZJWlJDV3VsbGxhNUNGSGVsQkI0RFFTWXI3RDQlMkZ0UTJaVlFBQUFBQU9nQUFBQUFJQUFDQUFBQUNYTzB6ZWR6eVVueDFzM1RaR3pFenRac0RrU244YmNrZzZVQndBY3llaWx6QUFBQUFJdFFwS2FnYlk1MEpMbUlXdzNTTDhIREJyZFpmVGp2UUZTJTJCQmFiTER6Y252bldmMjdVMCUyQkZUZm5KQUlKZjRhZEFBQUFBMW84TDZuZk1XR0E4b1JoR2VFOFZ4T3F0NzFDWUdpNUVENFNtcGxIWDU2MG1SaUs2d24lMkZOYVBQRXl2clZwZzMzcEZNaGR0cnFub2xjcTlvR294WEVTUSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBOTdtM1NmUHlWSVpSQ1d1bGxsYTVDRkhlbEJCNERRU1lyN0Q0JTJGdFEyWlZRQUFBQUFPZ0FBQUFBSUFBQ0FBQUFDWE8wemVkenlVbngxczNUWkd6RXp0WnNEa1NuOGJja2c2VUJ3QWN5ZWlsekFBQUFBSXRRcEthZ2JZNTBKTG1JV3czU0w4SERCcmRaZlRqdlFGUyUyQkJhYkxEemNudm5XZjI3VTAlMkJGVGZuSkFJSmY0YWRBQUFBQTFvOEw2bmZNV0dBOG9SaEdlRThWeE9xdDcxQ1lHaTVFRDRTbXBsSFg1NjBtUmlLNnduJTJGTmFQUEV5dnJWcGczM3BGTWhkdHJxbm9sY3E5b0dveFhFU1ElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkYiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSI5IiBSZWNvcmRlZFZhbHVlPSI5IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0NDc5MTkiIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0NDc5MTkiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iOGJmYTkwNmMtMzE5OC00MTAxLThjYjctMzMxYzM5OWYyNTUxIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3NlbmQiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQWNjZXB0IiBWYWx1ZT0idGV4dC9wbGFpbiwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iUmVmZXJlciIgVmFsdWU9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy8iIC8+DQogICAgICA8L0hlYWRlcnM+DQogICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0idHJhbnNwb3J0IiBWYWx1ZT0ibG9uZ1BvbGxpbmciIFJlY29yZGVkVmFsdWU9ImxvbmdQb2xsaW5nIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iY29ubmVjdGlvblRva2VuIiBWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBOTdtM1NmUHlWSVpSQ1d1bGxsYTVDRkhlbEJCNERRU1lyN0Q0JTJGdFEyWlZRQUFBQUFPZ0FBQUFBSUFBQ0FBQUFDWE8wemVkenlVbngxczNUWkd6RXp0WnNEa1NuOGJja2c2VUJ3QWN5ZWlsekFBQUFBSXRRcEthZ2JZNTBKTG1JV3czU0w4SERCcmRaZlRqdlFGUyUyQkJhYkxEemNudm5XZjI3VTAlMkJGVGZuSkFJSmY0YWRBQUFBQTFvOEw2bmZNV0dBOG9SaEdlRThWeE9xdDcxQ1lHaTVFRDRTbXBsSFg1NjBtUmlLNnduJTJGTmFQUEV5dnJWcGczM3BGTWhkdHJxbm9sY3E5b0dveFhFU1ElM0QlM0QiIFJlY29yZGVkVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQTk3bTNTZlB5VklaUkNXdWxsbGE1Q0ZIZWxCQjREUVNZcjdENCUyRnRRMlpWUUFBQUFBT2dBQUFBQUlBQUNBQUFBQ1hPMHplZHp5VW54MXMzVFpHekV6dFpzRGtTbjhiY2tnNlVCd0FjeWVpbHpBQUFBQUl0UXBLYWdiWTUwSkxtSVd3M1NMOEhEQnJkWmZUanZRRlMlMkJCYWJMRHpjbnZuV2YyN1UwJTJCRlRmbkpBSUpmNGFkQUFBQUExbzhMNm5mTVdHQThvUmhHZUU4VnhPcXQ3MUNZR2k1RUQ0U21wbEhYNTYwbVJpSzZ3biUyRk5hUFBFeXZyVnBnMzNwRk1oZHRycW5vbGNxOW9Hb3hYRVNRJTNEJTNEIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0icmVxdWVzdFVybCIgVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGIiBSZWNvcmRlZFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRiIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImJyb3dzZXJOYW1lIiBWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIFJlY29yZGVkVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keT4NCiAgICAgICAgPEZvcm1Qb3N0UGFyYW1ldGVyIE5hbWU9ImRhdGEiIFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDtNaWNyb3NvZnQuVmlzdWFsU3R1ZGlvLldlYi5Ccm93c2VyTGluay5Db3JlRXh0ZW5zaW9uRmFjdG9yeS5jb25uZWN0ZWQmcXVvdDssJnF1b3Q7Y2FsbGJhY2tJZCZxdW90OzoxfSIgUmVjb3JkZWRWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7TWljcm9zb2Z0LlZpc3VhbFN0dWRpby5XZWIuQnJvd3NlckxpbmsuQ29yZUV4dGVuc2lvbkZhY3RvcnkuY29ubmVjdGVkJnF1b3Q7LCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6MX0iIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IlRydWUiIC8+DQogICAgICA8L0Zvcm1Qb3N0SHR0cEJvZHk+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iZTJiOTkxYTUtOTNhYS00ZjM2LWJhMDctZDI0MjI1YjY4ODQwIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3BvbGwiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQ29udGVudC1UeXBlIiBWYWx1ZT0iYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQTk3bTNTZlB5VklaUkNXdWxsbGE1Q0ZIZWxCQjREUVNZcjdENCUyRnRRMlpWUUFBQUFBT2dBQUFBQUlBQUNBQUFBQ1hPMHplZHp5VW54MXMzVFpHekV6dFpzRGtTbjhiY2tnNlVCd0FjeWVpbHpBQUFBQUl0UXBLYWdiWTUwSkxtSVd3M1NMOEhEQnJkWmZUanZRRlMlMkJCYWJMRHpjbnZuV2YyN1UwJTJCRlRmbkpBSUpmNGFkQUFBQUExbzhMNm5mTVdHQThvUmhHZUU4VnhPcXQ3MUNZR2k1RUQ0U21wbEhYNTYwbVJpSzZ3biUyRk5hUFBFeXZyVnBnMzNwRk1oZHRycW5vbGNxOW9Hb3hYRVNRJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUE5N20zU2ZQeVZJWlJDV3VsbGxhNUNGSGVsQkI0RFFTWXI3RDQlMkZ0UTJaVlFBQUFBQU9nQUFBQUFJQUFDQUFBQUNYTzB6ZWR6eVVueDFzM1RaR3pFenRac0RrU244YmNrZzZVQndBY3llaWx6QUFBQUFJdFFwS2FnYlk1MEpMbUlXdzNTTDhIREJyZFpmVGp2UUZTJTJCQmFiTER6Y252bldmMjdVMCUyQkZUZm5KQUlKZjRhZEFBQUFBMW84TDZuZk1XR0E4b1JoR2VFOFZ4T3F0NzFDWUdpNUVENFNtcGxIWDU2MG1SaUs2d24lMkZOYVBQRXl2clZwZzMzcEZNaGR0cnFub2xjcTlvR294WEVTUSUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Im1lc3NhZ2VJZCIgVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQmclMkMxJTdDQmglMkMwIiBSZWNvcmRlZFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JnJTJDMSU3Q0JoJTJDMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRiIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkYiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRpZCIgVmFsdWU9IjEwIiBSZWNvcmRlZFZhbHVlPSIxMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Il8iIFZhbHVlPSIxMzk3NjMxNDQ3OTM3IiBSZWNvcmRlZFZhbHVlPSIxMzk3NjMxNDQ3OTM3IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgPC9RdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICA8Rm9ybVBvc3RIdHRwQm9keSAvPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjVlOTNmOWVlLTBlZDItNGJkMC1hYWExLThlZTkyZTc0N2Y4OSIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9zZW5kIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQTk3bTNTZlB5VklaUkNXdWxsbGE1Q0ZIZWxCQjREUVNZcjdENCUyRnRRMlpWUUFBQUFBT2dBQUFBQUlBQUNBQUFBQ1hPMHplZHp5VW54MXMzVFpHekV6dFpzRGtTbjhiY2tnNlVCd0FjeWVpbHpBQUFBQUl0UXBLYWdiWTUwSkxtSVd3M1NMOEhEQnJkWmZUanZRRlMlMkJCYWJMRHpjbnZuV2YyN1UwJTJCRlRmbkpBSUpmNGFkQUFBQUExbzhMNm5mTVdHQThvUmhHZUU4VnhPcXQ3MUNZR2k1RUQ0U21wbEhYNTYwbVJpSzZ3biUyRk5hUFBFeXZyVnBnMzNwRk1oZHRycW5vbGNxOW9Hb3hYRVNRJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUE5N20zU2ZQeVZJWlJDV3VsbGxhNUNGSGVsQkI0RFFTWXI3RDQlMkZ0UTJaVlFBQUFBQU9nQUFBQUFJQUFDQUFBQUNYTzB6ZWR6eVVueDFzM1RaR3pFenRac0RrU244YmNrZzZVQndBY3llaWx6QUFBQUFJdFFwS2FnYlk1MEpMbUlXdzNTTDhIREJyZFpmVGp2UUZTJTJCQmFiTER6Y252bldmMjdVMCUyQkZUZm5KQUlKZjRhZEFBQUFBMW84TDZuZk1XR0E4b1JoR2VFOFZ4T3F0NzFDWUdpNUVENFNtcGxIWDU2MG1SaUs2d24lMkZOYVBQRXl2clZwZzMzcEZNaGR0cnFub2xjcTlvR294WEVTUSUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRiIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkYiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHk+DQogICAgICAgIDxGb3JtUG9zdFBhcmFtZXRlciBOYW1lPSJkYXRhIiBWYWx1ZT0ieyZxdW90O25hbWUmcXVvdDs6JnF1b3Q7bWljcm9zb2Z0LnZpc3VhbHN0dWRpby53ZWIuYnJvd3NlcmxpbmsuaHRtbG1hcHBpbmdleHRlbnNpb25mYWN0b3J5LnJlc29sdmVVcmwmcXVvdDssJnF1b3Q7YXJncyZxdW90OzpbJnF1b3Q7fi9fX2Jyb3dzZXJMaW5rL3JlcXVlc3REYXRhL2UyY2ZkOTU0YWFmYTQ3MDVhMjViMWQ2ZTZjMTg4N2QxJnF1b3Q7XSwmcXVvdDtjYWxsYmFja0lkJnF1b3Q7OjJ9IiBSZWNvcmRlZFZhbHVlPSJ7JnF1b3Q7bmFtZSZxdW90OzomcXVvdDttaWNyb3NvZnQudmlzdWFsc3R1ZGlvLndlYi5icm93c2VybGluay5odG1sbWFwcGluZ2V4dGVuc2lvbmZhY3RvcnkucmVzb2x2ZVVybCZxdW90OywmcXVvdDthcmdzJnF1b3Q7OlsmcXVvdDt+L19fYnJvd3NlckxpbmsvcmVxdWVzdERhdGEvZTJjZmQ5NTRhYWZhNDcwNWEyNWIxZDZlNmMxODg3ZDEmcXVvdDtdLCZxdW90O2NhbGxiYWNrSWQmcXVvdDs6Mn0iIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IlRydWUiIC8+DQogICAgICA8L0Zvcm1Qb3N0SHR0cEJvZHk+DQogICAgPC9SZXF1ZXN0Pg0KICAgIDxSZXF1ZXN0IE1ldGhvZD0iUE9TVCIgR3VpZD0iZjA0M2U3YmItODZmNy00NDY4LTg5ZDUtMDY0ODVjYmJlMzYyIiBWZXJzaW9uPSIxLjEiIFVybD0iaHR0cDovL2xvY2FsaG9zdDoxNzU0OS9hNDY4MDAwODNlMjk0MzlhODVkMjE2ZGJjOTIwM2I5NC9hcnRlcnlTaWduYWxSL3BvbGwiIFRoaW5rVGltZT0iMCIgVGltZW91dD0iMzAwIiBQYXJzZURlcGVuZGVudFJlcXVlc3RzPSJUcnVlIiBGb2xsb3dSZWRpcmVjdHM9IlRydWUiIFJlY29yZFJlc3VsdD0iVHJ1ZSIgQ2FjaGU9IkZhbHNlIiBSZXNwb25zZVRpbWVHb2FsPSIwIiBFbmNvZGluZz0idXRmLTgiIEV4cGVjdGVkSHR0cFN0YXR1c0NvZGU9IjAiIEV4cGVjdGVkUmVzcG9uc2VVcmw9IiIgUmVwb3J0aW5nTmFtZT0iIiBJZ25vcmVIdHRwU3RhdHVzQ29kZT0iRmFsc2UiPg0KICAgICAgPEhlYWRlcnM+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iQ29udGVudC1UeXBlIiBWYWx1ZT0iYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9InRleHQvcGxhaW4sICovKjsgcT0wLjAxIiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRyYW5zcG9ydCIgVmFsdWU9ImxvbmdQb2xsaW5nIiBSZWNvcmRlZFZhbHVlPSJsb25nUG9sbGluZyIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9ImNvbm5lY3Rpb25Ub2tlbiIgVmFsdWU9IkFRQUFBTkNNbmQ4QkZkRVJqSG9Bd0UlMkZDbCUyQnNCQUFBQXo4c0UxUFZvYVVtdGw3ZFRGdVlYN0FBQUFBQUNBQUFBQUFBUVpnQUFBQUVBQUNBQUFBQTk3bTNTZlB5VklaUkNXdWxsbGE1Q0ZIZWxCQjREUVNZcjdENCUyRnRRMlpWUUFBQUFBT2dBQUFBQUlBQUNBQUFBQ1hPMHplZHp5VW54MXMzVFpHekV6dFpzRGtTbjhiY2tnNlVCd0FjeWVpbHpBQUFBQUl0UXBLYWdiWTUwSkxtSVd3M1NMOEhEQnJkWmZUanZRRlMlMkJCYWJMRHpjbnZuV2YyN1UwJTJCRlRmbkpBSUpmNGFkQUFBQUExbzhMNm5mTVdHQThvUmhHZUU4VnhPcXQ3MUNZR2k1RUQ0U21wbEhYNTYwbVJpSzZ3biUyRk5hUFBFeXZyVnBnMzNwRk1oZHRycW5vbGNxOW9Hb3hYRVNRJTNEJTNEIiBSZWNvcmRlZFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUE5N20zU2ZQeVZJWlJDV3VsbGxhNUNGSGVsQkI0RFFTWXI3RDQlMkZ0UTJaVlFBQUFBQU9nQUFBQUFJQUFDQUFBQUNYTzB6ZWR6eVVueDFzM1RaR3pFenRac0RrU244YmNrZzZVQndBY3llaWx6QUFBQUFJdFFwS2FnYlk1MEpMbUlXdzNTTDhIREJyZFpmVGp2UUZTJTJCQmFiTER6Y252bldmMjdVMCUyQkZUZm5KQUlKZjRhZEFBQUFBMW84TDZuZk1XR0E4b1JoR2VFOFZ4T3F0NzFDWUdpNUVENFNtcGxIWDU2MG1SaUs2d24lMkZOYVBQRXl2clZwZzMzcEZNaGR0cnFub2xjcTlvR294WEVTUSUzRCUzRCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9Im1lc3NhZ2VJZCIgVmFsdWU9ImQtQUZCQkZCMUUtQkglMkMwJTdDQmclMkMyJTdDQmglMkMwIiBSZWNvcmRlZFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JnJTJDMiU3Q0JoJTJDMCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InJlcXVlc3RVcmwiIFZhbHVlPSJodHRwJTNBJTJGJTJGbG9jYWxob3N0JTNBNDYyMyUyRiIgUmVjb3JkZWRWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkYiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJicm93c2VyTmFtZSIgVmFsdWU9IkludGVybmV0K0V4cGxvcmVyIiBSZWNvcmRlZFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgICAgPFF1ZXJ5U3RyaW5nUGFyYW1ldGVyIE5hbWU9InRpZCIgVmFsdWU9IjgiIFJlY29yZGVkVmFsdWU9IjgiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJfIiBWYWx1ZT0iMTM5NzYzMTQ0ODEwOCIgUmVjb3JkZWRWYWx1ZT0iMTM5NzYzMTQ0ODEwOCIgQ29ycmVsYXRpb25CaW5kaW5nPSIiIFVybEVuY29kZT0iRmFsc2UiIFVzZVRvR3JvdXBSZXN1bHRzPSJGYWxzZSIgLz4NCiAgICAgIDwvUXVlcnlTdHJpbmdQYXJhbWV0ZXJzPg0KICAgICAgPEZvcm1Qb3N0SHR0cEJvZHkgLz4NCiAgICA8L1JlcXVlc3Q+DQogICAgPFJlcXVlc3QgTWV0aG9kPSJHRVQiIEd1aWQ9IjM1OGVlMTA5LTgxZjEtNDU4NS1hMWVjLTcxYjMxYTdjMmJiNyIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6NDYyMy9fX2Jyb3dzZXJMaW5rL3JlcXVlc3REYXRhL2UyY2ZkOTU0YWFmYTQ3MDVhMjViMWQ2ZTZjMTg4N2QxIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkFjY2VwdCIgVmFsdWU9ImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDEiIC8+DQogICAgICAgIDxIZWFkZXIgTmFtZT0iWC1SZXF1ZXN0ZWQtV2l0aCIgVmFsdWU9IlhNTEh0dHBSZXF1ZXN0IiAvPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IlJlZmVyZXIiIFZhbHVlPSJodHRwOi8vbG9jYWxob3N0OjQ2MjMvIiAvPg0KICAgICAgPC9IZWFkZXJzPg0KICAgIDwvUmVxdWVzdD4NCiAgICA8UmVxdWVzdCBNZXRob2Q9IlBPU1QiIEd1aWQ9IjMyNjEzYTYwLWMzZWYtNDU5Zi04OTM0LTdmYTUxZTI4OGZhNiIgVmVyc2lvbj0iMS4xIiBVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6MTc1NDkvYTQ2ODAwMDgzZTI5NDM5YTg1ZDIxNmRiYzkyMDNiOTQvYXJ0ZXJ5U2lnbmFsUi9wb2xsIiBUaGlua1RpbWU9IjAiIFRpbWVvdXQ9IjMwMCIgUGFyc2VEZXBlbmRlbnRSZXF1ZXN0cz0iVHJ1ZSIgRm9sbG93UmVkaXJlY3RzPSJUcnVlIiBSZWNvcmRSZXN1bHQ9IlRydWUiIENhY2hlPSJGYWxzZSIgUmVzcG9uc2VUaW1lR29hbD0iMCIgRW5jb2Rpbmc9InV0Zi04IiBFeHBlY3RlZEh0dHBTdGF0dXNDb2RlPSIwIiBFeHBlY3RlZFJlc3BvbnNlVXJsPSIiIFJlcG9ydGluZ05hbWU9IiIgSWdub3JlSHR0cFN0YXR1c0NvZGU9IkZhbHNlIj4NCiAgICAgIDxIZWFkZXJzPg0KICAgICAgICA8SGVhZGVyIE5hbWU9IkNvbnRlbnQtVHlwZSIgVmFsdWU9ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJBY2NlcHQiIFZhbHVlPSJ0ZXh0L3BsYWluLCAqLyo7IHE9MC4wMSIgLz4NCiAgICAgICAgPEhlYWRlciBOYW1lPSJSZWZlcmVyIiBWYWx1ZT0iaHR0cDovL2xvY2FsaG9zdDo0NjIzLyIgLz4NCiAgICAgIDwvSGVhZGVycz4NCiAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlcnM+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0cmFuc3BvcnQiIFZhbHVlPSJsb25nUG9sbGluZyIgUmVjb3JkZWRWYWx1ZT0ibG9uZ1BvbGxpbmciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJjb25uZWN0aW9uVG9rZW4iIFZhbHVlPSJBUUFBQU5DTW5kOEJGZEVSakhvQXdFJTJGQ2wlMkJzQkFBQUF6OHNFMVBWb2FVbXRsN2RURnVZWDdBQUFBQUFDQUFBQUFBQVFaZ0FBQUFFQUFDQUFBQUE5N20zU2ZQeVZJWlJDV3VsbGxhNUNGSGVsQkI0RFFTWXI3RDQlMkZ0UTJaVlFBQUFBQU9nQUFBQUFJQUFDQUFBQUNYTzB6ZWR6eVVueDFzM1RaR3pFenRac0RrU244YmNrZzZVQndBY3llaWx6QUFBQUFJdFFwS2FnYlk1MEpMbUlXdzNTTDhIREJyZFpmVGp2UUZTJTJCQmFiTER6Y252bldmMjdVMCUyQkZUZm5KQUlKZjRhZEFBQUFBMW84TDZuZk1XR0E4b1JoR2VFOFZ4T3F0NzFDWUdpNUVENFNtcGxIWDU2MG1SaUs2d24lMkZOYVBQRXl2clZwZzMzcEZNaGR0cnFub2xjcTlvR294WEVTUSUzRCUzRCIgUmVjb3JkZWRWYWx1ZT0iQVFBQUFOQ01uZDhCRmRFUmpIb0F3RSUyRkNsJTJCc0JBQUFBejhzRTFQVm9hVW10bDdkVEZ1WVg3QUFBQUFBQ0FBQUFBQUFRWmdBQUFBRUFBQ0FBQUFBOTdtM1NmUHlWSVpSQ1d1bGxsYTVDRkhlbEJCNERRU1lyN0Q0JTJGdFEyWlZRQUFBQUFPZ0FBQUFBSUFBQ0FBQUFDWE8wemVkenlVbngxczNUWkd6RXp0WnNEa1NuOGJja2c2VUJ3QWN5ZWlsekFBQUFBSXRRcEthZ2JZNTBKTG1JV3czU0w4SERCcmRaZlRqdlFGUyUyQkJhYkxEemNudm5XZjI3VTAlMkJGVGZuSkFJSmY0YWRBQUFBQTFvOEw2bmZNV0dBOG9SaEdlRThWeE9xdDcxQ1lHaTVFRDRTbXBsSFg1NjBtUmlLNnduJTJGTmFQUEV5dnJWcGczM3BGTWhkdHJxbm9sY3E5b0dveFhFU1ElM0QlM0QiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJtZXNzYWdlSWQiIFZhbHVlPSJkLUFGQkJGQjFFLUJIJTJDMCU3Q0JnJTJDMyU3Q0JoJTJDMCIgUmVjb3JkZWRWYWx1ZT0iZC1BRkJCRkIxRS1CSCUyQzAlN0NCZyUyQzMlN0NCaCUyQzAiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJyZXF1ZXN0VXJsIiBWYWx1ZT0iaHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTQ2MjMlMkYiIFJlY29yZGVkVmFsdWU9Imh0dHAlM0ElMkYlMkZsb2NhbGhvc3QlM0E0NjIzJTJGIiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iYnJvd3Nlck5hbWUiIFZhbHVlPSJJbnRlcm5ldCtFeHBsb3JlciIgUmVjb3JkZWRWYWx1ZT0iSW50ZXJuZXQrRXhwbG9yZXIiIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICAgIDxRdWVyeVN0cmluZ1BhcmFtZXRlciBOYW1lPSJ0aWQiIFZhbHVlPSI3IiBSZWNvcmRlZFZhbHVlPSI3IiBDb3JyZWxhdGlvbkJpbmRpbmc9IiIgVXJsRW5jb2RlPSJGYWxzZSIgVXNlVG9Hcm91cFJlc3VsdHM9IkZhbHNlIiAvPg0KICAgICAgICA8UXVlcnlTdHJpbmdQYXJhbWV0ZXIgTmFtZT0iXyIgVmFsdWU9IjEzOTc2MzE0NDg1MTciIFJlY29yZGVkVmFsdWU9IjEzOTc2MzE0NDg1MTciIENvcnJlbGF0aW9uQmluZGluZz0iIiBVcmxFbmNvZGU9IkZhbHNlIiBVc2VUb0dyb3VwUmVzdWx0cz0iRmFsc2UiIC8+DQogICAgICA8L1F1ZXJ5U3RyaW5nUGFyYW1ldGVycz4NCiAgICAgIDxGb3JtUG9zdEh0dHBCb2R5IC8+DQogICAgPC9SZXF1ZXN0Pg0KICA8L0l0ZW1zPg0KICA8VmFsaWRhdGlvblJ1bGVzPg0KICAgIDxWYWxpZGF0aW9uUnVsZSBDbGFzc25hbWU9Ik1pY3Jvc29mdC5WaXN1YWxTdHVkaW8uVGVzdFRvb2xzLldlYlRlc3RpbmcuUnVsZXMuVmFsaWRhdGVSZXNwb25zZVVybCwgTWljcm9zb2Z0LlZpc3VhbFN0dWRpby5RdWFsaXR5VG9vbHMuV2ViVGVzdEZyYW1ld29yaywgVmVyc2lvbj0xMC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iMDNmNWY3ZjExZDUwYTNhIiBEaXNwbGF5TmFtZT0i5ZON5bqUIFVSTCIgRGVzY3JpcHRpb249IumqjOivgeWcqOaJp+ihjOmHjeWumuWQkeS5i+WQjuWTjeW6lCBVUkwg5piv5ZCm5LiO5omA6K6w5b2V55qE5ZON5bqUIFVSTCDnm7jlkIzjgIIgIFF1ZXJ5U3RyaW5nIOWPguaVsOWwhuiiq+W/veeVpeOAgiIgTGV2ZWw9IkxvdyIgRXhlY3R1aW9uT3JkZXI9IkJlZm9yZURlcGVuZGVudHMiIC8+DQogICAgPFZhbGlkYXRpb25SdWxlIENsYXNzbmFtZT0iTWljcm9zb2Z0LlZpc3VhbFN0dWRpby5UZXN0VG9vbHMuV2ViVGVzdGluZy5SdWxlcy5WYWxpZGF0aW9uUnVsZVJlc3BvbnNlVGltZUdvYWwsIE1pY3Jvc29mdC5WaXN1YWxTdHVkaW8uUXVhbGl0eVRvb2xzLldlYlRlc3RGcmFtZXdvcmssIFZlcnNpb249MTAuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYSIgRGlzcGxheU5hbWU9IuWTjeW6lOaXtumXtOebruaghyIgRGVzY3JpcHRpb249IuehruiupOivt+axgueahOWTjeW6lOaXtumXtOWwj+S6juaIluetieS6juWvueivt+axguaMh+WumueahOWTjeW6lOaXtumXtOebruagh+OAgiAg5bCG5b+955Wl5ZON5bqU5pe26Ze055uu5qCH6Zu244CCIiBMZXZlbD0iTG93IiBFeGVjdHVpb25PcmRlcj0iQWZ0ZXJEZXBlbmRlbnRzIj4NCiAgICAgIDxSdWxlUGFyYW1ldGVycz4NCiAgICAgICAgPFJ1bGVQYXJhbWV0ZXIgTmFtZT0iVG9sZXJhbmNlIiBWYWx1ZT0iMCIgLz4NCiAgICAgIDwvUnVsZVBhcmFtZXRlcnM+DQogICAgPC9WYWxpZGF0aW9uUnVsZT4NCiAgPC9WYWxpZGF0aW9uUnVsZXM+DQo8L1dlYlRlc3Q+">
      <Execution id="760c1317-d47a-46f6-b066-17a2b88d470c" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="列表中未列出的结果" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="所有已加载的结果" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="fff6fd02-d2bc-45bf-9845-c4a7331b73ec" executionId="760c1317-d47a-46f6-b066-17a2b88d470c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="760c1317-d47a-46f6-b066-17a2b88d470c" testId="fff6fd02-d2bc-45bf-9845-c4a7331b73ec" testName="WebTest2" computerName="RGM89S" duration="00:02:05.1471580" startTime="2014-04-16T14:58:01.6756380+08:00" endTime="2014-04-16T15:00:07.7538493+08:00" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Timeout" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="760c1317-d47a-46f6-b066-17a2b88d470c">
      <Output>
        <ErrorInfo>
          <Message>测试“WebTest2”的执行超时。</Message>
        </ErrorInfo>
      </Output>
      <ResultFiles>
        <ResultFile path="WebTest2.webtestResult" />
      </ResultFiles>
      <CollectorDataEntries>
        <Collector agentName="RGM89S" uri="datacollector://microsoft/EventLog/1.0" collectorDisplayName="事件日志">
          <UriAttachments>
            <UriAttachment>
              <A href="RGM89S\Event Log.xml">
              </A>
            </UriAttachment>
          </UriAttachments>
        </Collector>
        <Collector agentName="RGM89S" uri="datacollector://microsoft/SystemInfo/1.0" collectorDisplayName="系统信息">
          <UriAttachments>
            <UriAttachment>
              <A href="RGM89S\SystemInformation.xml">RGM89S 中的系统信息</A>
            </UriAttachment>
          </UriAttachments>
        </Collector>
        <Collector agentName="RGM89S" uri="datacollector://microsoft/TraceDebugger/1.0" collectorDisplayName="IntelliTrace">
          <UriAttachments>
            <UriAttachment>
              <A href="RGM89S\QTAgent_40_140416_150006955_10200.iTrace">“QTAgent_40.exe”的 IntelliTrace 文件(10200)</A>
            </UriAttachment>
          </UriAttachments>
        </Collector>
      </CollectorDataEntries>
      <DataCollectorMessages>
        <DataCollectorExceptionMessage timestamp="2014-04-16T15:00:07.7298479+08:00" dataCollectorUri="datacollector://microsoft/VideoRecorder/1.0" dataCollectorFriendlyName="屏幕和语音录制器" agentName="RGM89S" level="Error">
          <Text>对象的当前状态使该操作无效。</Text>
          <ExceptionType>System.InvalidOperationException</ExceptionType>
          <ExceptionMessage>对象的当前状态使该操作无效。</ExceptionMessage>
          <StackTrace>   在 Microsoft.VisualStudio.TestTools.DataCollection.MediaRecorder.EncoderPool.Release(EncoderAdapter encoder, Boolean reuseEncoder)
   在 Microsoft.VisualStudio.TestTools.DataCollection.MediaRecorder.MediaRecorderDataAdapter.&lt;&gt;c__DisplayClass2a.&lt;OnTestCaseEnd&gt;b__28()
   在 Microsoft.VisualStudio.TestTools.DataCollection.MediaRecorder.MediaRecorderDataAdapter.TryCatchAndLogError(DataCollectionContext context, Action action)</StackTrace>
        </DataCollectorExceptionMessage>
      </DataCollectorMessages>
      <TestSettings name="本地" id="b3426f58-0ed2-4260-9525-749e4255e285">
        <Description>这些设置为本地测试运行的默认测试设置。</Description>
        <Execution hostProcessPlatform="MSIL">
          <Timeouts runTimeout="1800000" testTimeout="120000" />
          <TestTypeSpecific>
            <UnitTestRunConfig testTypeId="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b">
              <AssemblyResolution applicationBaseDirectory="E:\Programme\Homework\OpenEcnu\OpenEcnu.UserInterface.Tests">
                <TestDirectory useLoadContext="true" />
              </AssemblyResolution>
            </UnitTestRunConfig>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 9.0" MaxConnections="6">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="LocalMachineDefaultRole">
            <DataCollectors>
              <DataCollector uri="datacollector://microsoft/AspNetProfiler/1.0" assemblyQualifiedName="Microsoft.VisualStudio.PerformanceTools.DataCollection.AspNetProfileDataCollector, Microsoft.VisualStudio.PerformanceTools.DataCollection, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" friendlyName="ASP.NET 探查器">
              </DataCollector>
              <DataCollector uri="datacollector://microsoft/EventLog/1.0" assemblyQualifiedName="Microsoft.VisualStudio.TestTools.DataCollection.EventLog.EventLogDataCollector, Microsoft.VisualStudio.TestTools.DataCollection.EventLog, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" friendlyName="事件日志">
              </DataCollector>
              <DataCollector uri="datacollector://microsoft/NetworkEmulation/1.0" assemblyQualifiedName="Microsoft.VisualStudio.TestTools.DataCollection.NetworkEmulation.NetworkEmulationDataCollector, Microsoft.VisualStudio.TestTools.DataCollection.NetworkEmulation, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" friendlyName="网络仿真">
              </DataCollector>
              <DataCollector uri="datacollector://microsoft/SystemInfo/1.0" assemblyQualifiedName="Microsoft.VisualStudio.TestTools.DataCollection.SystemInfo.SystemInfoDataCollector, Microsoft.VisualStudio.TestTools.DataCollection.SystemInfo, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" friendlyName="系统信息">
              </DataCollector>
              <DataCollector uri="datacollector://microsoft/TraceDebugger/1.0" assemblyQualifiedName="Microsoft.VisualStudio.TraceCollector.TraceDebuggerDataCollector, Microsoft.VisualStudio.TraceCollector, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" friendlyName="IntelliTrace">
              </DataCollector>
              <DataCollector uri="datacollector://microsoft/TestImpact/1.0" assemblyQualifiedName="Microsoft.VisualStudio.TraceCollector.TestImpactDataCollector, Microsoft.VisualStudio.TraceCollector, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" friendlyName="测试影响">
              </DataCollector>
              <DataCollector uri="datacollector://microsoft/VideoRecorder/1.0" assemblyQualifiedName="Microsoft.VisualStudio.TestTools.DataCollection.VideoRecorder.VideoRecorderDataCollector, Microsoft.VisualStudio.TestTools.DataCollection.VideoRecorder, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" friendlyName="屏幕和语音录制器">
              </DataCollector>
              <DataCollector uri="datacollector://microsoft/CodeCoverage/1.0" assemblyQualifiedName="Microsoft.VisualStudio.TestTools.CodeCoverage.CoveragePlugIn, Microsoft.VisualStudio.QualityTools.Plugins.CodeCoverage, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" friendlyName="代码覆盖率(Visual Studio 2010)">
              </DataCollector>
              <DataCollector uri="datacollector://microsoft/HttpProxy/1.0" assemblyQualifiedName="Microsoft.VisualStudio.TraceCollector.HttpProxyCollector, Microsoft.VisualStudio.TraceCollector, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" friendlyName="用于 IntelliTrace 和测试影响的 ASP.NET 客户端代理">
              </DataCollector>
            </DataCollectors>
          </AgentRule>
        </Execution>
        <Deployment runDeploymentRoot="ROOT_RGM89S 2014-04-16 14_57_36" />
        <Properties />
      </TestSettings>
      <WebTestResultFilePath>ROOT_RGM89S 2014-04-16 14_57_36\In\760c1317-d47a-46f6-b066-17a2b88d470c\WebTest2.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>